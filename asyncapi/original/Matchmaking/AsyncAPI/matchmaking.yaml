asyncapi: '2.0.0'
id: 'http://justice-lobby-matchmaking-service'
info:
  title: Lobby Matchmaking Events
  version: 0.1.0
channels:
  matchmaking:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/matchmakingRequested'
          - $ref: '#/components/messages/matchmakingCanceled'
          - $ref: '#/components/messages/matchmakingStarted'
          - $ref: '#/components/messages/matchmakingTimeout'
          - $ref: '#/components/messages/matchmakingRejected'
          - $ref: '#/components/messages/matchmakingChannelCreated'
          - $ref: '#/components/messages/matchmakingChannelDeleted'
          - $ref: '#/components/messages/matchmakingChannelUpdated'
          - $ref: '#/components/messages/matchmakingSessionStatusChanged'
          - $ref: '#/components/messages/matchmakingTicketStatusChanged'

  matchmakingTotalPlayersInQueue:
    publish:
      message:
        $ref: '#/components/messages/matchmakingTotalPlayersInQueue'

  readyConsent:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/readyConsentSuccess'
          - $ref: '#/components/messages/readyConsentFailed'

components:
  schemas:
    event:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
        name:
          type: string
        namespace:
          type: string
        parentNamespace:
          type: string
        timestamp:
          type: string
          format: date-time
        clientId:
          type: string
        userId:
          type: string
          description: as operator id
        sessionId:
          type: string
        spanContext:
          type: string

    alliance:
      type: object
      properties:
        min_number:
          type: integer
        max_number:
          type: integer
        player_min_number:
          type: integer
        player_max_number:
          type: integer
        combination:
          type: object
          properties:
            role_flexing_enable:
              type: boolean
            role_flexing_second:
              type: integer
            role_flexing_player:
              type: integer
            has_combination:
              type: boolean
            alliances:
              type: array
              items:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    min:
                      type: integer
                    max:
                      type: integer

    matching_rule:
      type: object
      properties:
        attribute:
          type: string
        criteria:
          type: string
        reference:
          type: number
          format: float

    ruleset:
      type: object
      properties:
        alliance:
          type: object
          $ref: '#/components/schemas/alliance'
        matching_rule:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/matching_rule'
        flexing_rule:
          type: array
          items:
            type: object
            properties:
              duration:
                type: integer
              matching_rule:
                type: object
                $ref: '#/components/schemas/matching_rule'
        alliance_flexing_rule:
          type: array
          items:
            type: object
            properties:
              duration:
                type: integer
              AllianceRule:
                type: object
                $ref: '#/components/schemas/alliance'
        match_options:
          type: array
          items:
            type: object
            properties:
              options:
                type: object
                properties:
                  name:
                    type: string
                  type:
                    type: string

          sub_game_modes:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                alliance:
                  type: object
                  $ref: '#/components/schemas/alliance'
                alliance_flexing_rule:
                  type: array
                  items:
                    type: object
                    properties:
                      duration:
                        type: integer
                      AllianceRule:
                        type: object
                        $ref: '#/components/schemas/alliance'
        rebalance_enable:
          type: boolean

    matchingParty:
      type: object
      properties:
        ticket_id:
          type: string
        party_id:
          type: string
        party_members:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/partyMember'
        party_attributes:
          type: object
        ticket_created_at:
          type: integer
        first_ticket_created_at:
          type: integer

    matchmaking:
      type: object
      properties:
        status:
          type: string
        matchId:
          type: string
        channel:
          type: string
        namespace:
          type: string
        gameMode:
          type: string
        matchingParties:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/matchingParty'

    lobbyMatchmakingRequest:
      type: object
      properties:
        priority:
          type: string
        createdAt:
          type: string
        channel:
          type: string
        partyId:
          type: string
        ticketId:
          type: string
        partyMembers:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/partyMemberV1'
        timestamp:
          type: string
          format: date-time
        event:
          type: string

    lobbyMatchmaking:
      type: object
      properties:
        status:
          type: string
        matchId:
          type: string
        channel:
          type: string
        namespace:
          type: string
        gameMode:
          type: string
        matchingParties:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/partyMemberV1'
            partyId:
              type: string

    MatchmakingRequest:
      type: object
      properties:
        priority:
          type: integer
        created_at:
          type: integer
        channel:
          type: string
        namespace:
          type: string
        ticket_id:
          type: string
        party_id:
          type: string
        party_leader_id:
          type: string
        party_attributes:
          type: object
        party_members:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/partyMember'
        additional_criteria:
          type: object
        latency_map:
          type: object
          additionalProperties:
            type: integer
        sorted_latency:
          type: array
          items:
            type: object
            properties:
              region:
                type: string
              latency:
                type: integer
        first_ticket_created_at:
          type: integer

    matchmakingResult:
      type: object
      properties:
        status:
          type: string
        event:
          type: string
        party_id:
          type: string
        ticket_id:
          type: string
        match_id:
          type: string
        channel:
          type: string
        namespace:
          type: string
        game_mode:
          type: string
        server_name:
          type: string
        client_version:
          type: string
        region:
          type: string
        joinable:
          type: boolean
        matching_allies:
          type: array
          items:
            type: object
            properties:
              matching_parties:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/matchingParty'
              playerCount:
                type: integer
        deployment:
          type: string
        updatedAt:
          type: string
          format: date-time
        queueAt:
          type: integer
        partyAttributes:
          type: string
        errorCode:
          type: integer
        errorMessage:
          type: string
        timestamp:
          type: string
          format: date-time

    partyMemberV1:
      type: object
      properties:
        userId:
          type: string
        extraAttributes:
          type: object

    partyMember:
      type: object
      properties:
        user_id:
          type: string
        extra_attributes:
          type: object

    successTickets:
      type: object
      properties:
        partyId:
          type: string
        memberIds:
          type: array
          items:
            type: string
        ticketCreatedAt:
          type: integer

    failedTickets:
      type: object
      properties:
        partyId:
          type: string
        succeedMemberIds:
          type: array
          items:
            type: string
        failedMemberIds:
          type: array
          items:
            type: string
        ticketCreatedAt:
          type: integer

  messages:
    matchmakingChannelCreated:
      name: matchmakingChannelCreated
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              ruleset:
                $ref: '#/components/schemas/ruleset'
              description:
                type: string
              gameMode:
                type: string
              findMatchTimeoutSeconds:
                type: integer

    matchmakingChannelDeleted:
      name: matchmakingChannelDeleted
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              ruleset:
                $ref: '#/components/schemas/ruleset'
              description:
                type: string
              gameMode:
                type: string
              findMatchTimeoutSeconds:
                type: integer

    matchmakingChannelUpdated:
      name: matchmakingChannelUpdated
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              ruleset:
                $ref: '#/components/schemas/ruleset'
              description:
                type: string
              gameMode:
                type: string
              findMatchTimeoutSeconds:
                type: integer

    matchmakingRequested:
      name: matchmakingRequested
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              matchmakingRequest:
                $ref: '#/components/schemas/lobbyMatchmakingRequest'

    matchmakingCanceled:
      name: matchmakingCanceled
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              matchmaking:
                $ref: '#/components/schemas/lobbyMatchmaking'
                errorCode:
                  type: string
                errorMessage:
                  type: string

    matchmakingTimeout:
      name: matchmakingTimeout
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              matchmaking:
                $ref: '#/components/schemas/lobbyMatchmaking'
                errorCode:
                  type: string
                errorMessage:
                  type: string

    matchmakingRejected:
      name: matchmakingRejected
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              matchmaking:
                $ref: '#/components/schemas/lobbyMatchmaking'
                errorCode:
                  type: string
                errorMessage:
                  type: string

    matchmakingStarted:
      name: matchmakingStarted
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              matchmaking:
                $ref: '#/components/schemas/matchmaking'

    matchmakingSessionStatusChanged:
      name: matchmakingSessionStatusChanged
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              session:
                $ref: '#/components/schemas/matchmakingResult'

    matchmakingTicketStatusChanged:
      name: matchmakingTicketStatusChanged
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              ticket:
                $ref: '#/components/schemas/MatchmakingRequest'

    matchmakingTotalPlayersInQueue:
      name: matchmakingTotalPlayersInQueue
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              totalPlayersInQueue:
                type: integer

    readyConsentFailed:
      name: readyConsentFailed
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              successTickets:
                $ref: '#/components/schemas/successTickets'
              failedTickets:
                $ref: '#/components/schemas/failedTickets'

    readyConsentSuccess:
      name: readyConsentSuccess
      payload:
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            properties:
              successTickets:
                $ref: '#/components/schemas/successTickets'