asyncapi: '2.0.0'
id: 'http://justice-iam-service'
info:
  title: IAM Service RBAC Events
  version: 0.1.0
channels:
  role:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/roleCreated'
        - $ref: '#/components/messages/roleDeleted'
        - $ref: '#/components/messages/roleUpdated'

  rolePermissions:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/rolePermissionCreated'
        - $ref: '#/components/messages/rolePermissionDeleted'
        - $ref: '#/components/messages/rolePermissionUpdated'

  roleManager:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/roleManagerCreated'
        - $ref: '#/components/messages/roleManagerDeleted'

  roleMember:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/roleMemberCreated'
        - $ref: '#/components/messages/roleMemberDeleted'

components:
  schemas:
    event:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
        name:
          type: string
        namespace:
          type: string
        parentNamespace:
          type: string
        timestamp:
          type: string
          format: date-time
        clientId:
          type: string
        userId:
          type: string
        traceId:
          type: string
        sessionId:
          type: string

    permissions:
      type: object
      properties:
        resoure:
          type: string
          description: resource
        action:
          type: string
          description: action
        SchedAction:
          type: integer
          description: action, between 1 to 15
          deprecated: true
        SchedCron:
          type: string
          description: cron string or date range (both are UTC, also in cron syntax) to indicate when a permission and action are in effect
          deprecated: true
        SchedRange:
          type: array
          items:
            type: string
          description: start and end date when a permission and action are in effect
          deprecated: true

    role:
      type: object
      properties:
        roleId:
          type: string
          description: role id
        name:
          type: string
          description: role name
        admin:
          type: boolean
          description: a flag indicates whether this role is an admin role
        roleIsWildcard:
          type: boolean
          description: a flag indicates whether this role is an global role

    roleManager:
      type: object
      properties:
        userId:
          type: string
        namespace:
          type: string
        displayName:
          type: string

    roleMember:
      type: object
      properties:
        userId:
          type: string
          description: user id
        namespace:
          type: string
          description: namespace
        displayName:
          type: string
          description: display name
    roleCreatedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
      x-uid0: AnonymousSchema1
    roleDeletedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
      x-uid0: AnonymousSchema2
    roleUpdatedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
      x-uid0: AnonymousSchema3
    rolePermissionCreatedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/permissions'
      x-uid0: AnonymousSchema4
    rolePermissionDeletedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/permissions'
      x-uid0: AnonymousSchema5
    rolePermissionUpdatedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/permissions'
      x-uid0: AnonymousSchema6
    roleManagerCreatedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        roleManager:
          type: array
          items:
            $ref: '#/components/schemas/roleManager'
      x-uid0: AnonymousSchema7
    roleManagerDeletedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        roleManager:
          type: array
          items:
            $ref: '#/components/schemas/roleManager'
      x-uid0: AnonymousSchema8
    roleMemberCreatedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        roleMember:
          type: array
          items:
            $ref: '#/components/schemas/roleMember'
      x-uid0: AnonymousSchema9
    roleMemberDeletedPayloadData:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/role'
        roleMember:
          type: array
          items:
            $ref: '#/components/schemas/roleMember'
      x-uid0: AnonymousSchema10
  messages:
    roleCreated:
      name: roleCreated
      description: message is sent when role is created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleCreatedPayloadData'
    roleDeleted:
      name: roleDeleted
      description: message is sent when role is deleted
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleDeletedPayloadData'
    roleUpdated:
      name: roleUpdated
      description: message is sent when role is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleUpdatedPayloadData'
    rolePermissionCreated:
      name: rolePermissionCreated
      description: message is sent when adding role permissions
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/rolePermissionCreatedPayloadData'
    rolePermissionDeleted:
      name: rolePermissionDeleted
      description: message is sent when role permission is deleted
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/rolePermissionDeletedPayloadData'
    rolePermissionUpdated:
      name: rolePermissionUpdated
      description: message is sent when role permission is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/rolePermissionUpdatedPayloadData'
    roleManagerCreated:
      name: roleManagerCreated
      description: deprecated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleManagerCreatedPayloadData'
    roleManagerDeleted:
      name: roleManagerDeleted
      description: deprecated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleManagerDeletedPayloadData'
    roleMemberCreated:
      name: roleMemberCreated
      description: message is sent when role is assigned to user
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleMemberCreatedPayloadData'
    roleMemberDeleted:
      name: roleMemberDeleted
      description: message is sent when user's role is removed
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/roleMemberDeletedPayloadData'
