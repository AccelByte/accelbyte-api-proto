asyncapi: '2.0.0'
id: 'http://justice-cloudsave-service'
info:
  title: Cloudsave Service Events
  version: 0.1.0
defaultContentType: application/json
channels:
  adminGameRecord:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/adminGameRecordCreated'
          - $ref: '#/components/messages/adminGameRecordUpdated'
          - $ref: '#/components/messages/adminGameRecordDeleted'
  gameRecord:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/gameRecordCreated'
          - $ref: '#/components/messages/gameRecordUpdated'
          - $ref: '#/components/messages/gameRecordDeleted'
  adminPlayerRecord:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/adminPlayerRecordCreated'
          - $ref: '#/components/messages/adminPlayerRecordUpdated'
          - $ref: '#/components/messages/adminPlayerRecordDeleted'
  playerRecord:
    publish:
      message:
        oneOf:
          - $ref: '#/components/messages/playerRecordCreated'
          - $ref: '#/components/messages/playerRecordUpdated'
          - $ref: '#/components/messages/playerRecordDeleted'

components:
  schemas:
    event:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
        name:
          type: string
        namespace:
          type: string
        parentNamespace:
          type: string
        timestamp:
          type: string
          format: date-time
        clientId:
          type: string
        userId:
          type: string
        traceId:
          type: string
        sessionId:
          type: string

    recordPayload:
      type: object
      properties:
        key:
          type: string
          description: record key
        namespace:
          type: string
          description: namespace of the record
    adminPlayerRecordPayload:
      type: object
      properties:
        key:
          type: string
          description: record key
        namespace:
          type: string
          description: namespace of the record
        userId:
          type: string
          description: record user id
        actorUserId:
          type: string
          description: requester user id
    playerRecordPayload:
      type: object
      properties:
        key:
          type: string
          description: record key
        namespace:
          type: string
          description: namespace of the record
        userId:
          type: string
          description: record user id
        actorUserId:
          type: string
          description: requester user id
        isPublic:
          type: boolean
          description: type of the player record
    playerRecordDeletedPayload:
      type: object
      properties:
        key:
          type: string
          description: record key
        namespace:
          type: string
          description: namespace of the record
        userId:
          type: string
          description: record user id
        actorUserId:
          type: string
          description: requester user id

  messages:
    adminGameRecordCreated:
      name: adminGameRecordCreated
      description: message is sent when the new admin game record created
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/recordPayload'

    adminGameRecordUpdated:
      name: adminGameRecordUpdated
      description: message is sent when the admin game record updated
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/recordPayload'

    adminGameRecordDeleted:
      name: adminGameRecordDeleted
      description: message is sent when the admin game record deleted
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/recordPayload'

    gameRecordCreated:
      name: gameRecordCreated
      description: message is sent when the new game record created
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            allOf:
              - $ref: '#/components/schemas/recordPayload'
            properties:
              setBy:
                type: string

    gameRecordUpdated:
      name: gameRecordUpdated
      description: message is sent when the game record updated
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            allOf:
              - $ref: '#/components/schemas/recordPayload'
            properties:
              setBy:
                type: string

    gameRecordDeleted:
      name: gameRecordDeleted
      description: message is sent when the game record deleted
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/recordPayload'

    adminPlayerRecordCreated:
      name: adminPlayerRecordCreated
      description: message is sent when the admin player record created
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/adminPlayerRecordPayload'
    adminPlayerRecordUpdated:
      name: adminPlayerRecordUpdated
      description: message is sent when the admin player record updated
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/adminPlayerRecordPayload'
    adminPlayerRecordDeleted:
      name: adminPlayerRecordDeleted
      description: message is sent when the admin player record deleted
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/adminPlayerRecordPayload'
    playerRecordCreated:
      name: playerRecordCreated
      description: message is sent when the player record created
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/playerRecordPayload'
    playerRecordUpdated:
      name: playerRecordUpdated
      description: message is sent when the player record updated
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/playerRecordPayload'
    playerRecordDeleted:
      name: playerRecordDeleted
      description: message is sent when the player record deleted.
      payload:
        type: object
        allOf:
          - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/playerRecordDeletedPayload'