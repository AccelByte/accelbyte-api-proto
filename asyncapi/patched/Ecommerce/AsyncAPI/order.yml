asyncapi: 2.0.0
id: urn:net:accelbyte:platform:order
info:
  title: AsyncAPI for justice order service
  version: 0.0.1
defaultContentType: application/json
channels:
  orderProcessing:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/orderCreated'
        - $ref: '#/components/messages/orderCancelled'
        - $ref: '#/components/messages/orderFulfilled'
        - $ref: '#/components/messages/orderFulfillFailed'
        - $ref: '#/components/messages/orderCharged'
        - $ref: '#/components/messages/orderRefunded'
        - $ref: '#/components/messages/orderRefundRequested'
        - $ref: '#/components/messages/orderRefundFailed'
        - $ref: '#/components/messages/orderChargeback'
        - $ref: '#/components/messages/orderChargebackReversed'
        - $ref: '#/components/messages/orderExpired'
        - $ref: '#/components/messages/orderStatusUpdated'
components:
  schemas:
    event:
      type: object
      properties:
        id:
          type: string
          description: event id
        version:
          type: integer
        name:
          type: string
          description: event name
        namespace:
          type: string
          description: event namespace
        parentNamespace:
          type: string
        timestamp:
          type: string
          format: date-time
        clientId:
          type: string
          description: client id
        userId:
          type: string
          description: the operator id
        traceId:
          type: string
          description: trace id
        sessionId:
          type: string
          description: session id
    currencySummary:
      type: object
      properties:
        currencyCode:
          type: string
        currencySymbol:
          type: string
        currencyType:
          type: string
        namespace:
          type: string
        decimals:
          type: integer
          format: int32
    order:
      type: object
      properties:
        orderNo:
          type: string
          description: Order number
        paymentOrderNo:
          type: string
          description: Payment order number
        namespace:
          type: string
          description: Order namespace
        userId:
          type: string
          description: User id
        itemId:
          type: string
          description: Item id
        itemName:
          type: string
          description: Item Name
        sandbox:
          type: boolean
          description: isSandbox, indicate if order is sandbox
        quantity:
          type: integer
          format: int32
          description: Item quantity
        price:
          type: integer
          format: int32
          description: Order price
        discountedPrice:
          type: integer
          format: int32
          description: Order discounted price
        paymentProvider:
          type: string
          description: Payment provider
        currency:
          description: Order currency info
          $ref: '#/components/schemas/currencySummary'
        region:
          type: string
        language:
          type: string
        status:
          type: string
          description: Order status
        statusReason:
          type: string
          description: Order status reason
        previousStatus:
          type: string
          description: Order status before action
  messages:
    orderCreated:
      name: orderCreated
      description: order status will be INIT after created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderCancelled:
      name: orderCancelled
      description: order status will be CLOSED after cancelled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderRefundRequested:
      name: orderRefundRequested
      description: order status will be REFUNDING/REFUNDED/REFUND_FAILED after refund
        requested
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderStatusUpdated:
      name: orderStatusUpdated
      description: order status will be target status after updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderFulfilled:
      name: orderFulfilled
      description: order status will be FULFILLED fulfilled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderFulfillFailed:
      name: orderFulfillFailed
      description: order status will be FULFILL_FAILED fulfilled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderCharged:
      name: orderCharged
      description: order status will be CHARGED
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderRefunded:
      name: orderRefunded
      description: order status will be REFUNDED
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderRefundFailed:
      name: orderRefundFailed
      description: order status will be REFUND_FAILED
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderChargeback:
      name: orderChargeback
      description: order status will be CHARGEBACK
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderChargebackReversed:
      name: orderChargebackReversed
      description: order status will be CHARGEBACK_REVERSED
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
    orderExpired:
      name: orderExpired
      description: order status will be CLOSED
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              order:
                $ref: '#/components/schemas/order'
x-source: Ecommerce/AsyncAPI/order.yml
x-git-hash: 93f80da7cd88a4c8ef6e1a02666d4e5b25f46fa1
x-proto-package: accelbyte.ecommerce.order.v1
x-proto-package-version: v1.0.0
x-proto-package-semver:
- 1
- 0
- 0
x-proto-options:
  csharp_namespace: '"AccelByte.Ecommerce.Order"'
  go_package: '"accelbyte.net/ecommerce/order"'
  java_multiple_files: 'true'
  java_package: '"net.accelbyte.ecommerce.order"'
