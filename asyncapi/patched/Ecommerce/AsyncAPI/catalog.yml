asyncapi: 2.0.0
id: urn:net:accelbyte:platform:catalog
info:
  title: AsyncAPI for justice catalog service
  version: 0.0.1
defaultContentType: application/json
channels:
  catalogManagement:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/storeCreated'
        - $ref: '#/components/messages/storeUpdated'
        - $ref: '#/components/messages/storeDeleted'
        - $ref: '#/components/messages/storeCloned'
        - $ref: '#/components/messages/storeRollbacked'
        - $ref: '#/components/messages/storeExported'
        - $ref: '#/components/messages/storeImported'
        - $ref: '#/components/messages/storePublished'
        - $ref: '#/components/messages/categoryCreated'
        - $ref: '#/components/messages/categoryUpdated'
        - $ref: '#/components/messages/categoryDeleted'
        - $ref: '#/components/messages/itemCreated'
        - $ref: '#/components/messages/itemUpdated'
        - $ref: '#/components/messages/itemDeleted'
        - $ref: '#/components/messages/inGameItemSynced'
        - $ref: '#/components/messages/itemDisabled'
        - $ref: '#/components/messages/itemEnabled'
        - $ref: '#/components/messages/appUpdated'
components:
  schemas:
    event:
      type: object
      properties:
        id:
          type: string
          description: event id
        version:
          type: integer
        name:
          type: string
          description: event name
        namespace:
          type: string
          description: event namespace
        parentNamespace:
          type: string
        timestamp:
          type: string
          format: date-time
        clientId:
          type: string
          description: client id
        userId:
          type: string
          description: the operator id
        traceId:
          type: string
          description: trace id
        sessionId:
          type: string
          description: session id
    store:
      type: object
      properties:
        storeId:
          type: string
          description: Store id
        namespace:
          type: string
          description: The namespace
        title:
          type: string
          description: Store title
        description:
          type: string
          description: Store description
        published:
          type: boolean
          description: If Store is published
        supportedLanguages:
          type: array
          description: Store supported language
          items:
            type: string
        supportedRegions:
          type: array
          description: Store supported regions
          items:
            type: string
        defaultRegion:
          type: string
          description: Default region
        defaultLanguage:
          type: string
          description: Default language
        publishedTime:
          type: string
          format: date-time
          description: Store published time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    category:
      type: object
      properties:
        namespace:
          type: string
          description: Category namespace
        parentCategoryPath:
          type: string
          description: Parent category path
        categoryPath:
          type: string
          description: Category path
        isRoot:
          type: boolean
        localizationDisplayNames:
          type: object
          description: Category localization display name
          additionalProperties:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    image:
      type: object
      required:
      - height
      - imageUrl
      - smallImageUrl
      - width
      properties:
        as:
          type: string
          description: image for
        caption:
          type: string
          description: image caption
        height:
          type: integer
          format: int32
          description: height
        width:
          type: integer
          format: int32
          description: width
        imageUrl:
          type: string
          description: imageUrl
        smallImageUrl:
          type: string
          description: smallImageUrl
    localization:
      type: object
      required:
      - title
      properties:
        title:
          type: string
          description: title info
        description:
          type: string
          description: description info
        longDescription:
          type: string
          description: long description info
        localExt:
          type: object
          additionalProperties:
            type: object
    regionDataItem:
      type: object
      required:
      - currencyCode
      - currencyNamespace
      - currencyType
      - price
      properties:
        price:
          type: integer
          format: int32
        discountPercentage:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        discountAmount:
          type: integer
          format: int32
          minimum: 0
        discountedPrice:
          type: integer
          format: int32
        currencyCode:
          type: string
          example: USD
          description: currency code
        currencyType:
          type: string
          description: currency type
        currencyNamespace:
          type: string
          description: currency namespace
        purchaseAt:
          type: string
          format: date-time
          description: PurchaseAt
        expireAt:
          type: string
          format: date-time
          description: ExpireAt
        discountPurchaseAt:
          type: string
          format: date-time
          description: Discount purchase date time
        discountExpireAt:
          type: string
          format: date-time
          description: Discount expire date time
    item:
      type: object
      properties:
        itemId:
          type: string
          description: Item id
        appId:
          type: string
          description: App id
        appType:
          type: string
          description: App type
        baseAppId:
          type: string
          description: Base app id
        baseAppItemId:
          type: string
          description: Item id of base app
        namespace:
          type: string
          description: Item namespace
        sku:
          type: string
          description: Sku
        name:
          type: string
          description: Name
        entitlementType:
          type: string
          description: Entitlement type
        useCount:
          type: integer
          format: int32
          description: Item use count
        stackable:
          type: boolean
          description: Whether stack the CONSUMABLE entitlement
        categoryPath:
          type: string
          description: Item category path
        images:
          type: array
          description: images
          items:
            $ref: '#/components/schemas/image'
        thumbnailUrl:
          type: string
          description: thumbnail url
        localizations:
          type: object
          description: Item localizations
          additionalProperties:
            $ref: '#/components/schemas/localization'
        status:
          type: string
          description: Item status
        listable:
          type: boolean
          description: whether it is visible in Store for public user
        purchasable:
          type: boolean
          description: whether it can be purchased
        sectionExclusive:
          type: boolean
          description: whether this item is sold in section only
        itemType:
          type: string
          description: Item type
        targetNamespace:
          type: string
          description: The target namespace of a cross namespace item
        targetCurrencyCode:
          type: string
          description: The target currency code of coin Item
        targetItemId:
          type: string
          description: Target item id if this item is mapping from game namespace
        regionData:
          type: object
          description: Item region data
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/regionDataItem'
        itemIds:
          type: array
          description: Bundle item's item ids
          items:
            type: string
        itemQty:
          type: object
          description: itemQty, the quantity of item in itemIds, default 1, should
            be empty if item type is not "BUNDLE"
          additionalProperties:
            type: integer
            format: int32
        tags:
          type: array
          description: Tags
          uniqueItems: true
          items:
            type: string
        features:
          type: array
          description: Features
          uniqueItems: true
          items:
            type: string
        maxCountPerUser:
          type: integer
          format: int32
          description: Max count per user
        maxCount:
          type: integer
          format: int32
          description: Max count
        clazz:
          type: string
          description: customized item clazz
        ext:
          type: object
          description: customized item properties
          additionalProperties:
            type: object
        boothName:
          type: string
          description: booth name to get tickets while it's item type is CODE
        ticketBoothId:
          type: string
          description: booth id while item type is CODE
        displayOrder:
          type: integer
          format: int32
          description: display order
        createdAt:
          type: string
          format: date-time
          description: created at
        updatedAt:
          type: string
          format: date-time
          description: updated at
        purchaseCondition:
          type: object
          description: purchase condition
          conditionGroups:
            $ref: '#/components/schemas/conditionGroups'
        optionBoxConfig:
          type: object
          description: option box configurations
          optionBoxConfig:
            $ref: '#/components/schemas/optionBoxConfig'
    slide:
      type: object
      properties:
        type:
          type: string
          enum:
          - image
          - video
          description: slide type
        videoSource:
          type: string
          enum:
          - generic
          - youtube
          - vimeo
          description: video source
        url:
          type: string
          description: video url
        alt:
          type: string
        thumbnailUrl:
          type: string
          description: thumbnail url
        previewUrl:
          type: string
          description: preview url
    requirement:
      type: object
      required:
      - label
      properties:
        label:
          type: string
          description: label, value can be:minimum,recommended
        osVersion:
          type: string
          description: OS version
        processor:
          type: string
          description: processor
        ram:
          type: string
          description: RAM
        graphics:
          type: string
          description: graphics
        directXVersion:
          type: string
          description: directX version
        diskSpace:
          type: string
          description: disk space
        soundCard:
          type: string
          description: sound card
        additionals:
          type: string
          description: other requirement
    appLocalization:
      type: object
      properties:
        slogan:
          type: string
        announcement:
          type: string
    purchaseCondition:
      type: object
      properties:
        conditionGroups:
          $ref: '#/components/schemas/conditionGroups'
    conditionGroups:
      type: object
      properties:
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/predicate'
        operator:
          type: string
    predicate:
      type: object
      properties:
        name:
          type: string
          description: predicate name
        predicateType:
          type: string
          description: predicate type
          enum:
          - EntitlementPredicate
          - SeasonPassPredicate
          - SeasonTierPredicate
        comparison:
          type: string
          description: comparison
          enum:
          - is
          - isNot
          - isGreaterThan
          - isGraterThanOrEqual
          - isLessThan
          - isLessThanOrEqual
          - includes
          - excludes
        anyOf:
          type: integer
          description: anyOf, only available if comparison is includes or excludes
        values:
          type: array
          items:
            type: object
            additionalProperties: true
          description: values, when predicateType is EntitlementPredicate or SeasonPassPredicate
        value:
          type: string
          description: value, when predicateType is SeasonTierPredicate
    optionBoxConfig:
      type: object
      properties:
        boxItems:
          type: array
          items:
            $ref: '#/components/schemas/optionBoxItem'
    optionBoxItem:
      type: object
      properties:
        itemId:
          type: string
          description: item id
        itemSku:
          type: string
          description: item sku
        count:
          type: integer
          description: count
    storePublish:
      type: object
      properties:
        namespace:
          type: string
          description: namespace
        storeId:
          type: string
          description: store id
        incremental:
          type: boolean
          description: a flag indicates whether publish store incrementally
        catalogChanges:
          type: array
          items:
            $ref: '#/components/schemas/catalogChange'
    catalogChange:
      type: object
      properties:
        storeId:
          type: string
          description: published store id
        changeId:
          type: string
          description: id for this change
        itemType:
          type: string
          description: type of the item
        itemId:
          type: string
          description: item id if this is a item change
        sku:
          type: string
          description: sku of item
        viewId:
          type: string
          description: view id if this is a view change
        sectionId:
          type: string
          description: section id if this is a section change
        categoryPath:
          type: string
          description: category path if there is a category change
        action:
          type: string
          description: change action
    app:
      type: object
      properties:
        itemId:
          type: string
          description: item id
        namespace:
          type: string
          description: namespace
        carousel:
          type: array
          items:
            $ref: '#/components/schemas/slide'
        developer:
          type: string
          description: developer info
        publisher:
          type: string
          description: publisher info
        websiteUrl:
          type: string
          description: website url
        forumUrl:
          type: string
          description: forum url
        platforms:
          type: array
          items:
            type: string
          description: platform info, Windows/MacOS/Linux/IOS/Android
        platformRequirements:
          type: object
          description: platform requirements
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/requirement'
        localizations:
          type: object
          description: localization info
          additionalProperties:
            $ref: '#/components/schemas/appLocalization'
        primaryGenre:
          type: string
          description: primary genre type
          enum:
          - Action
          - Adventure
          - Casual
          - FreeToPlay
          - Indie
          - MassivelyMultiplayer
          - Racing
          - RPG
          - Simulation
          - Sports
          - Strategy
        genres:
          type: array
          description: genre types
          items:
            type: string
        players:
          type: array
          description: player type
          items:
            type: string
            enum:
            - Single
            - Multi
            - CrossPlatformMulti
            - MMO
            - Coop
            - LocalCoop
        releaseDate:
          type: string
          format: date-time
          description: release date
    itemStatusChange:
      type: object
      properties:
        itemId:
          type: string
          description: item id
        itemName:
          type: string
          description: item name
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
          description: item status
        previousStatus:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
          description: item status before change
    storeClone:
      type: object
      properties:
        targetStoreId:
          type: string
          description: the target store id
        published:
          type: boolean
          description: true if the target store is a published store
  messages:
    storeCreated:
      name: storeCreated
      description: message is sent when store is created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              store:
                $ref: '#/components/schemas/store'
    storeUpdated:
      name: storeUpdated
      description: message is sent when store is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              store:
                $ref: '#/components/schemas/store'
              oldStore:
                $ref: '#/components/schemas/store'
    storeDeleted:
      name: storeDeleted
      description: message is sent when store is deleted
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              store:
                $ref: '#/components/schemas/store'
    storeExported:
      name: storeExported
      description: message is sent when store is exported
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
    storeImported:
      name: storeImported
      description: message is sent when store is imported
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
    storeCloned:
      name: storeCloned
      description: message is sent when clone a store
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              storeClone:
                $ref: '#/components/schemas/storeClone'
    storeRollbacked:
      name: storeRollbacked
      description: message is sent when roll back a published store to a previous
        version
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
    storePublished:
      name: storePublished
      description: message is sent when publish store
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              storePublishSchema:
                $ref: '#/components/schemas/storePublish'
    categoryCreated:
      name: categoryCreated
      description: message is sent when category is created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
              category:
                $ref: '#/components/schemas/category'
    categoryUpdated:
      name: categoryUpdated
      description: message is sent when category is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
              category:
                $ref: '#/components/schemas/category'
              oldCategory:
                $ref: '#/components/schemas/category'
    categoryDeleted:
      name: categoryDeleted
      description: message is sent when category is deleted
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              category:
                $ref: '#/components/schemas/category'
    itemCreated:
      name: itemCreated
      description: message is sent when item is created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
              item:
                $ref: '#/components/schemas/item'
    itemUpdated:
      name: itemUpdated
      description: message is sent when item is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              item:
                $ref: '#/components/schemas/item'
              oldItem:
                $ref: '#/components/schemas/item'
    itemDeleted:
      name: itemDeleted
      description: message is sent when item is deleted
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              item:
                $ref: '#/components/schemas/item'
    inGameItemSynced:
      name: inGameItemSynced
      description: message is sent when sync in game item from game namespace  to
        publisher namespace
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              item:
                $ref: '#/components/schemas/item'
    itemDisabled:
      name: itemDisabled
      description: message is sent when item is disabled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
                description: store id
              itemStatusChange:
                $ref: '#/components/schemas/itemStatusChange'
    itemEnabled:
      name: itemEnabled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
              itemStatusChange:
                $ref: '#/components/schemas/itemStatusChange'
    appUpdated:
      name: appUpdated
      description: message is sent when an app is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            type: object
            properties:
              storeId:
                type: string
              app:
                $ref: '#/components/schemas/app'
              oldApp:
                $ref: '#/components/schemas/app'
x-source: Ecommerce/AsyncAPI/catalog.yml
x-proto-package: accelbyte.ecommerce.catalog.v1
x-proto-package-version: v1.0.0
x-proto-package-semver:
- 1
- 0
- 0
x-proto-options:
  csharp_namespace: '"AccelByte.Ecommerce.Catalog"'
  go_package: '"accelbyte.net/ecommerce/catalog"'
  java_multiple_files: 'true'
  java_package: '"net.accelbyte.ecommerce.catalog"'
