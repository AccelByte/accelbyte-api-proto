// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Session/AsyncAPI/session.yaml (0.1.0)

syntax = "proto3";

package accelbyte.session.session.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.Session.Session";
option go_package = "accelbyte.net/session/session";
option java_multiple_files = true;
option java_package = "net.accelbyte.session.session";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string userId = 7;
    string traceId = 8;
    string sessionId = 9;
    string spanContext = 10;
}

// path: #/components/schemas/notificationPayload
message NotificationPayload {
    repeated string userIds = 1;
    string namespace = 2;
    string topicName = 3;
    string message = 4;
}

// path: #/components/messages/sessionNotification/payload
message SessionNotification {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/OnSessionEnded/payload
message OnSessionEnded {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionEndedEvent/payload
message GameSessionEndedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionInvitedEvent/payload
message GameSessionInvitedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionJoinedEvent/payload
message GameSessionJoinedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionMembersChangedEvent/payload
message GameSessionMembersChangedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionKickedEvent/payload
message GameSessionKickedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionCreatedEvent/payload
message GameSessionCreatedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionUpdatedEvent/payload
message GameSessionUpdatedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionRejectedEvent/payload
message GameSessionRejectedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/GameSessionDSStatusChangedEvent/payload
message GameSessionDSStatusChangedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyCreatedEvent/payload
message PartyCreatedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyUpdatedEvent/payload
message PartyUpdatedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyKickedEvent/payload
message PartyKickedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyInvitedEvent/payload
message PartyInvitedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyRejectedEvent/payload
message PartyRejectedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyJoinedEvent/payload
message PartyJoinedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}

// path: #/components/messages/PartyMembersChangedEvent/payload
message PartyMembersChangedEvent {
    NotificationPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
    string spanContext = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/onPartyCreated
message OnPartyCreatedMessage {
    Event payload = 1;
}

// path: #/components/messages/sessionNotification
message SessionNotificationMessage {
    SessionNotification payload = 1;
}

// path: #/components/messages/OnSessionEnded
message OnSessionEndedMessage {
    OnSessionEnded payload = 1;
}

// path: #/components/messages/GameSessionEndedEvent
message GameSessionEndedEventMessage {
    GameSessionEndedEvent payload = 1;
}

// path: #/components/messages/GameSessionInvitedEvent
message GameSessionInvitedEventMessage {
    GameSessionInvitedEvent payload = 1;
}

// path: #/components/messages/GameSessionJoinedEvent
message GameSessionJoinedEventMessage {
    GameSessionJoinedEvent payload = 1;
}

// path: #/components/messages/GameSessionMembersChangedEvent
message GameSessionMembersChangedEventMessage {
    GameSessionMembersChangedEvent payload = 1;
}

// path: #/components/messages/GameSessionKickedEvent
message GameSessionKickedEventMessage {
    GameSessionKickedEvent payload = 1;
}

// path: #/components/messages/GameSessionCreatedEvent
message GameSessionCreatedEventMessage {
    GameSessionCreatedEvent payload = 1;
}

// path: #/components/messages/GameSessionUpdatedEvent
message GameSessionUpdatedEventMessage {
    GameSessionUpdatedEvent payload = 1;
}

// path: #/components/messages/GameSessionRejectedEvent
message GameSessionRejectedEventMessage {
    GameSessionRejectedEvent payload = 1;
}

// path: #/components/messages/GameSessionDSStatusChangedEvent
message GameSessionDSStatusChangedEventMessage {
    GameSessionDSStatusChangedEvent payload = 1;
}

// path: #/components/messages/PartyCreatedEvent
message PartyCreatedEventMessage {
    PartyCreatedEvent payload = 1;
}

// path: #/components/messages/PartyUpdatedEvent
message PartyUpdatedEventMessage {
    PartyUpdatedEvent payload = 1;
}

// path: #/components/messages/PartyKickedEvent
message PartyKickedEventMessage {
    PartyKickedEvent payload = 1;
}

// path: #/components/messages/PartyInvitedEvent
message PartyInvitedEventMessage {
    PartyInvitedEvent payload = 1;
}

// path: #/components/messages/PartyRejectedEvent
message PartyRejectedEventMessage {
    PartyRejectedEvent payload = 1;
}

// path: #/components/messages/PartyJoinedEvent
message PartyJoinedEventMessage {
    PartyJoinedEvent payload = 1;
}

// path: #/components/messages/PartyMembersChangedEvent
message PartyMembersChangedEventMessage {
    PartyMembersChangedEvent payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/mpv2SessionHistory/publish/message
message Mpv2SessionHistoryPublish {
    oneof payload {
        GameSessionEndedEvent variant0 = 1;
        GameSessionInvitedEvent variant1 = 2;
        GameSessionJoinedEvent variant2 = 3;
        GameSessionMembersChangedEvent variant3 = 4;
        GameSessionKickedEvent variant4 = 5;
        GameSessionCreatedEvent variant5 = 6;
        GameSessionUpdatedEvent variant6 = 7;
        GameSessionRejectedEvent variant7 = 8;
        GameSessionDSStatusChangedEvent variant8 = 9;
        PartyCreatedEvent variant9 = 10;
        PartyUpdatedEvent variant10 = 11;
        PartyKickedEvent variant11 = 12;
        PartyInvitedEvent variant12 = 13;
        PartyRejectedEvent variant13 = 14;
        PartyJoinedEvent variant14 = 15;
        PartyMembersChangedEvent variant15 = 16;
    }
}


// --- service ---


// Publishes a message to the Session channel. (session OnPartyCreated)
service SessionOnPartyCreatedService {
    rpc OnMessage(OnPartyCreated) returns (google.protobuf.Empty);
}

// Publishes a message to the Session Notification channel. (sessionNotification SessionNotification)
service SessionNotificationSessionNotificationService {
    rpc OnMessage(SessionNotification) returns (google.protobuf.Empty);
}

// Publishes a message to the Session Event channel. (sessionEvent OnSessionEnded)
service SessionEventOnSessionEndedService {
    rpc OnMessage(OnSessionEnded) returns (google.protobuf.Empty);
}

// Publishes a GameSessionEndedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionEndedEvent)
service Mpv2SessionHistoryGameSessionEndedEventService {
    rpc OnMessage(GameSessionEndedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionInvitedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionInvitedEvent)
service Mpv2SessionHistoryGameSessionInvitedEventService {
    rpc OnMessage(GameSessionInvitedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionJoinedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionJoinedEvent)
service Mpv2SessionHistoryGameSessionJoinedEventService {
    rpc OnMessage(GameSessionJoinedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionMembersChangedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionMembersChangedEvent)
service Mpv2SessionHistoryGameSessionMembersChangedEventService {
    rpc OnMessage(GameSessionMembersChangedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionKickedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionKickedEvent)
service Mpv2SessionHistoryGameSessionKickedEventService {
    rpc OnMessage(GameSessionKickedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionCreatedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionCreatedEvent)
service Mpv2SessionHistoryGameSessionCreatedEventService {
    rpc OnMessage(GameSessionCreatedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionUpdatedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionUpdatedEvent)
service Mpv2SessionHistoryGameSessionUpdatedEventService {
    rpc OnMessage(GameSessionUpdatedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionRejectedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionRejectedEvent)
service Mpv2SessionHistoryGameSessionRejectedEventService {
    rpc OnMessage(GameSessionRejectedEvent) returns (google.protobuf.Empty);
}

// Publishes a GameSessionDSStatusChangedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory GameSessionDSStatusChangedEvent)
service Mpv2SessionHistoryGameSessionDSStatusChangedEventService {
    rpc OnMessage(GameSessionDSStatusChangedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyCreatedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyCreatedEvent)
service Mpv2SessionHistoryPartyCreatedEventService {
    rpc OnMessage(PartyCreatedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyUpdatedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyUpdatedEvent)
service Mpv2SessionHistoryPartyUpdatedEventService {
    rpc OnMessage(PartyUpdatedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyKickedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyKickedEvent)
service Mpv2SessionHistoryPartyKickedEventService {
    rpc OnMessage(PartyKickedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyInvitedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyInvitedEvent)
service Mpv2SessionHistoryPartyInvitedEventService {
    rpc OnMessage(PartyInvitedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyRejectedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyRejectedEvent)
service Mpv2SessionHistoryPartyRejectedEventService {
    rpc OnMessage(PartyRejectedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyJoinedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyJoinedEvent)
service Mpv2SessionHistoryPartyJoinedEventService {
    rpc OnMessage(PartyJoinedEvent) returns (google.protobuf.Empty);
}

// Publishes a PartyMembersChangedEvent to the Mpv2 Session History channel. (oneOf variant) (mpv2SessionHistory PartyMembersChangedEvent)
service Mpv2SessionHistoryPartyMembersChangedEventService {
    rpc OnMessage(PartyMembersChangedEvent) returns (google.protobuf.Empty);
}
