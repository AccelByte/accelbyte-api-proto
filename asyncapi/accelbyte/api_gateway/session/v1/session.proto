// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: API Gateway/AsyncAPI/session.yaml (0.1.0)

syntax = "proto3";

package accelbyte.api_gateway.session.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.APIGateway.Session";
option go_package = "accelbyte.net/apiGateway/session";
option java_multiple_files = true;
option java_package = "net.accelbyte.apiGateway.session";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/session
message Session {
    string session_id = 1 [json_name = "sessionId"];
    string user_id = 2 [json_name = "userId"];
    string access_token = 3 [json_name = "accessToken"];
    string refresh_token = 4 [json_name = "refreshToken"];
    string device_id = 5 [json_name = "deviceId"];
    string device_type = 6 [json_name = "deviceType"];
    string device_name = 7 [json_name = "deviceName"];
    string device_origin = 8 [json_name = "deviceOrigin"];
    string device_os = 9 [json_name = "deviceOs"];
    string city = 10 [json_name = "city"];
    string state = 11 [json_name = "state"];
    string country = 12 [json_name = "country"];
    string created_at = 13 [json_name = "createdAt"];
    string expired_at = 14 [json_name = "expiredAt"];
}

// path: #/components/messages/sessionCreated/payload/properties/payload
message AnonymousSchema1 {
    Session session = 1 [json_name = "session"];
}

// path: #/components/messages/sessionCreated/payload
message SessionCreated {
    AnonymousSchema1 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/sessionDeleted/payload/properties/payload
message AnonymousSchema2 {
    Session session = 1 [json_name = "session"];
}

// path: #/components/messages/sessionDeleted/payload
message SessionDeleted {
    AnonymousSchema2 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/sessionUpdated/payload/properties/payload
message AnonymousSchema3 {
    Session session = 1 [json_name = "session"];
}

// path: #/components/messages/sessionUpdated/payload
message SessionUpdated {
    AnonymousSchema3 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/sessionCreated
message SessionCreatedMessage {
    SessionCreated payload = 1;
}

// path: #/components/messages/sessionDeleted
message SessionDeletedMessage {
    SessionDeleted payload = 1;
}

// path: #/components/messages/sessionUpdated
message SessionUpdatedMessage {
    SessionUpdated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/session/publish/message
message SessionPublish {
    oneof payload {
        SessionCreatedMessage variant0 = 1;
        SessionDeletedMessage variant1 = 2;
        SessionUpdatedMessage variant2 = 3;
    }
}


// --- service ---


// Publishes a SessionCreated to the Session channel. (oneOf variant) (session SessionCreated)
service SessionSessionCreatedService {
    rpc OnMessage(SessionCreated) returns (google.protobuf.Empty);
}

// Publishes a SessionDeleted to the Session channel. (oneOf variant) (session SessionDeleted)
service SessionSessionDeletedService {
    rpc OnMessage(SessionDeleted) returns (google.protobuf.Empty);
}

// Publishes a SessionUpdated to the Session channel. (oneOf variant) (session SessionUpdated)
service SessionSessionUpdatedService {
    rpc OnMessage(SessionUpdated) returns (google.protobuf.Empty);
}