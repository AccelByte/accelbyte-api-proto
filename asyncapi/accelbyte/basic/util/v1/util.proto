// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Basic/AsyncAPI/util.yaml (0.1.0)

syntax = "proto3";

package accelbyte.basic.util.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Basic.Util";
option go_package = "accelbyte.net/basic/util";
option java_multiple_files = true;
option java_package = "net.accelbyte.basic.util";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/country
message Country {
    string code = 1 [json_name = "code"];
    string name = 2 [json_name = "name"];
}

// path: #/components/schemas/countryGroup
message CountryGroup {
    string code = 1 [json_name = "code"];
    string name = 2 [json_name = "name"];
}

// path: #/components/schemas/userContent
message UserContent {
    string url = 1 [json_name = "url"];
    string access_url = 2 [json_name = "accessUrl"];
    string method = 3 [json_name = "method"];
    string content_type = 4 [json_name = "contentType"];
}

// path: #/components/messages/userContentUrlCreated/payload/properties/payload
message AnonymousSchema1 {
    UserContent simple_event = 1 [json_name = "simpleEvent"];
}

// path: #/components/messages/userContentUrlCreated/payload
message UserContentUrlCreated {
    AnonymousSchema1 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/countryGroupCreated/payload/properties/payload
message AnonymousSchema2 {
    CountryGroup country_group = 1 [json_name = "countryGroup"];
    repeated Country countries = 2 [json_name = "countries"];
}

// path: #/components/messages/countryGroupCreated/payload
message CountryGroupCreated {
    AnonymousSchema2 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/countryGroupUpdated/payload/properties/payload
message AnonymousSchema3 {
    CountryGroup country_group = 1 [json_name = "countryGroup"];
    repeated Country countries = 2 [json_name = "countries"];
}

// path: #/components/messages/countryGroupUpdated/payload
message CountryGroupUpdated {
    AnonymousSchema3 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/userContentUrlCreated
message UserContentUrlCreatedMessage {
    UserContentUrlCreated payload = 1;
}

// path: #/components/messages/countryGroupCreated
message CountryGroupCreatedMessage {
    CountryGroupCreated payload = 1;
}

// path: #/components/messages/countryGroupUpdated
message CountryGroupUpdatedMessage {
    CountryGroupUpdated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/countryGroup/publish/message
message CountryGroupPublish {
    oneof payload {
        CountryGroupCreatedMessage variant0 = 1;
        CountryGroupUpdatedMessage variant1 = 2;
    }
}


// --- service ---


// Publishes a message to the User Content channel. (userContent UserContentUrlCreated)
service UserContentUserContentUrlCreatedService {
    rpc OnMessage(UserContentUrlCreated) returns (google.protobuf.Empty);
}

// Publishes a CountryGroupCreated to the Country Group channel. (oneOf variant) (countryGroup CountryGroupCreated)
service CountryGroupCountryGroupCreatedService {
    rpc OnMessage(CountryGroupCreated) returns (google.protobuf.Empty);
}

// Publishes a CountryGroupUpdated to the Country Group channel. (oneOf variant) (countryGroup CountryGroupUpdated)
service CountryGroupCountryGroupUpdatedService {
    rpc OnMessage(CountryGroupUpdated) returns (google.protobuf.Empty);
}