// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Cloudsave/AsyncAPI/cloudsave.yaml (0.1.0)

syntax = "proto3";

package accelbyte.cloudsave.cloudsave.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Cloudsave.Cloudsave";
option go_package = "accelbyte.net/cloudsave/cloudsave";
option java_multiple_files = true;
option java_package = "net.accelbyte.cloudsave.cloudsave";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/recordPayload
message RecordPayload {
    string key = 1 [json_name = "key"];
    string namespace = 2 [json_name = "namespace"];
}

// path: #/components/schemas/adminPlayerRecordPayload
message AdminPlayerRecordPayload {
    string key = 1 [json_name = "key"];
    string namespace = 2 [json_name = "namespace"];
    string user_id = 3 [json_name = "userId"];
    string actor_user_id = 4 [json_name = "actorUserId"];
}

// path: #/components/schemas/playerRecordPayload
message PlayerRecordPayload {
    string key = 1 [json_name = "key"];
    string namespace = 2 [json_name = "namespace"];
    string user_id = 3 [json_name = "userId"];
    string actor_user_id = 4 [json_name = "actorUserId"];
    bool is_public = 5 [json_name = "isPublic"];
}

// path: #/components/schemas/playerRecordDeletedPayload
message PlayerRecordDeletedPayload {
    string key = 1 [json_name = "key"];
    string namespace = 2 [json_name = "namespace"];
    string user_id = 3 [json_name = "userId"];
    string actor_user_id = 4 [json_name = "actorUserId"];
}

// path: #/components/schemas/gameRecordCreatedPayloadData
message GameRecordCreatedPayloadData { // previously known as 'AnonymousSchema1'
    string set_by = 1 [json_name = "setBy"];

    // allOf(#/components/schemas/recordPayload)
    string key = 2 [json_name = "key"];
    string namespace = 3 [json_name = "namespace"];
}

// path: #/components/schemas/gameRecordUpdatedPayloadData
message AnonymousSchema2 { // Message name is kept for backward compatibility
    string set_by = 1 [json_name = "setBy"];

    // allOf(#/components/schemas/recordPayload)
    string key = 2 [json_name = "key"];
    string namespace = 3 [json_name = "namespace"];
}

// path: #/components/messages/adminGameRecordCreated/payload
message AdminGameRecordCreated {
    RecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/adminGameRecordUpdated/payload
message AdminGameRecordUpdated {
    RecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/adminGameRecordDeleted/payload
message AdminGameRecordDeleted {
    RecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/gameRecordCreated/payload
message GameRecordCreated {
    GameRecordCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/gameRecordUpdated/payload
message GameRecordUpdated {
    AnonymousSchema2 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/gameRecordDeleted/payload
message GameRecordDeleted {
    RecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/adminPlayerRecordCreated/payload
message AdminPlayerRecordCreated {
    AdminPlayerRecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/adminPlayerRecordUpdated/payload
message AdminPlayerRecordUpdated {
    AdminPlayerRecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/adminPlayerRecordDeleted/payload
message AdminPlayerRecordDeleted {
    AdminPlayerRecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/playerRecordCreated/payload
message PlayerRecordCreated {
    PlayerRecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/playerRecordUpdated/payload
message PlayerRecordUpdated {
    PlayerRecordPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/playerRecordDeleted/payload
message PlayerRecordDeleted {
    PlayerRecordDeletedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/adminGameRecordCreated
message AdminGameRecordCreatedMessage {
    AdminGameRecordCreated payload = 1;
}

// path: #/components/messages/adminGameRecordUpdated
message AdminGameRecordUpdatedMessage {
    AdminGameRecordUpdated payload = 1;
}

// path: #/components/messages/adminGameRecordDeleted
message AdminGameRecordDeletedMessage {
    AdminGameRecordDeleted payload = 1;
}

// path: #/components/messages/gameRecordCreated
message GameRecordCreatedMessage {
    GameRecordCreated payload = 1;
}

// path: #/components/messages/gameRecordUpdated
message GameRecordUpdatedMessage {
    GameRecordUpdated payload = 1;
}

// path: #/components/messages/gameRecordDeleted
message GameRecordDeletedMessage {
    GameRecordDeleted payload = 1;
}

// path: #/components/messages/adminPlayerRecordCreated
message AdminPlayerRecordCreatedMessage {
    AdminPlayerRecordCreated payload = 1;
}

// path: #/components/messages/adminPlayerRecordUpdated
message AdminPlayerRecordUpdatedMessage {
    AdminPlayerRecordUpdated payload = 1;
}

// path: #/components/messages/adminPlayerRecordDeleted
message AdminPlayerRecordDeletedMessage {
    AdminPlayerRecordDeleted payload = 1;
}

// path: #/components/messages/playerRecordCreated
message PlayerRecordCreatedMessage {
    PlayerRecordCreated payload = 1;
}

// path: #/components/messages/playerRecordUpdated
message PlayerRecordUpdatedMessage {
    PlayerRecordUpdated payload = 1;
}

// path: #/components/messages/playerRecordDeleted
message PlayerRecordDeletedMessage {
    PlayerRecordDeleted payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/adminGameRecord/publish/message
message AdminGameRecordPublish {
    oneof payload {
        AdminGameRecordCreatedMessage variant0 = 1;
        AdminGameRecordUpdatedMessage variant1 = 2;
        AdminGameRecordDeletedMessage variant2 = 3;
    }
}

// path: #/channels/gameRecord/publish/message
message GameRecordPublish {
    oneof payload {
        GameRecordCreatedMessage variant0 = 1;
        GameRecordUpdatedMessage variant1 = 2;
        GameRecordDeletedMessage variant2 = 3;
    }
}

// path: #/channels/adminPlayerRecord/publish/message
message AdminPlayerRecordPublish {
    oneof payload {
        AdminPlayerRecordCreatedMessage variant0 = 1;
        AdminPlayerRecordUpdatedMessage variant1 = 2;
        AdminPlayerRecordDeletedMessage variant2 = 3;
    }
}

// path: #/channels/playerRecord/publish/message
message PlayerRecordPublish {
    oneof payload {
        PlayerRecordCreatedMessage variant0 = 1;
        PlayerRecordUpdatedMessage variant1 = 2;
        PlayerRecordDeletedMessage variant2 = 3;
    }
}


// --- service ---


// Publishes a AdminGameRecordCreated to the Admin Game Record channel. (oneOf variant) (adminGameRecord AdminGameRecordCreated)
service AdminGameRecordAdminGameRecordCreatedService {
    rpc OnMessage(AdminGameRecordCreated) returns (google.protobuf.Empty);
}

// Publishes a AdminGameRecordUpdated to the Admin Game Record channel. (oneOf variant) (adminGameRecord AdminGameRecordUpdated)
service AdminGameRecordAdminGameRecordUpdatedService {
    rpc OnMessage(AdminGameRecordUpdated) returns (google.protobuf.Empty);
}

// Publishes a AdminGameRecordDeleted to the Admin Game Record channel. (oneOf variant) (adminGameRecord AdminGameRecordDeleted)
service AdminGameRecordAdminGameRecordDeletedService {
    rpc OnMessage(AdminGameRecordDeleted) returns (google.protobuf.Empty);
}

// Publishes a GameRecordCreated to the Game Record channel. (oneOf variant) (gameRecord GameRecordCreated)
service GameRecordGameRecordCreatedService {
    rpc OnMessage(GameRecordCreated) returns (google.protobuf.Empty);
}

// Publishes a GameRecordUpdated to the Game Record channel. (oneOf variant) (gameRecord GameRecordUpdated)
service GameRecordGameRecordUpdatedService {
    rpc OnMessage(GameRecordUpdated) returns (google.protobuf.Empty);
}

// Publishes a GameRecordDeleted to the Game Record channel. (oneOf variant) (gameRecord GameRecordDeleted)
service GameRecordGameRecordDeletedService {
    rpc OnMessage(GameRecordDeleted) returns (google.protobuf.Empty);
}

// Publishes a AdminPlayerRecordCreated to the Admin Player Record channel. (oneOf variant) (adminPlayerRecord AdminPlayerRecordCreated)
service AdminPlayerRecordAdminPlayerRecordCreatedService {
    rpc OnMessage(AdminPlayerRecordCreated) returns (google.protobuf.Empty);
}

// Publishes a AdminPlayerRecordUpdated to the Admin Player Record channel. (oneOf variant) (adminPlayerRecord AdminPlayerRecordUpdated)
service AdminPlayerRecordAdminPlayerRecordUpdatedService {
    rpc OnMessage(AdminPlayerRecordUpdated) returns (google.protobuf.Empty);
}

// Publishes a AdminPlayerRecordDeleted to the Admin Player Record channel. (oneOf variant) (adminPlayerRecord AdminPlayerRecordDeleted)
service AdminPlayerRecordAdminPlayerRecordDeletedService {
    rpc OnMessage(AdminPlayerRecordDeleted) returns (google.protobuf.Empty);
}

// Publishes a PlayerRecordCreated to the Player Record channel. (oneOf variant) (playerRecord PlayerRecordCreated)
service PlayerRecordPlayerRecordCreatedService {
    rpc OnMessage(PlayerRecordCreated) returns (google.protobuf.Empty);
}

// Publishes a PlayerRecordUpdated to the Player Record channel. (oneOf variant) (playerRecord PlayerRecordUpdated)
service PlayerRecordPlayerRecordUpdatedService {
    rpc OnMessage(PlayerRecordUpdated) returns (google.protobuf.Empty);
}

// Publishes a PlayerRecordDeleted to the Player Record channel. (oneOf variant) (playerRecord PlayerRecordDeleted)
service PlayerRecordPlayerRecordDeletedService {
    rpc OnMessage(PlayerRecordDeleted) returns (google.protobuf.Empty);
}