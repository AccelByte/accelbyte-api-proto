// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Cloudsave/AsyncAPI/cloudsave.yaml (0.1.0)

syntax = "proto3";

package accelbyte.cloudsave.cloudsave.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.Cloudsave.Cloudsave";
option go_package = "accelbyte.net/cloudsave/cloudsave";
option java_multiple_files = true;
option java_package = "net.accelbyte.cloudsave.cloudsave";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/recordPayload
message RecordPayload {
    string key = 1;
    string namespace = 2;
}

// path: #/components/messages/adminGameRecordCreated/payload
message AdminGameRecordCreated {
    RecordPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/adminGameRecordUpdated/payload
message AdminGameRecordUpdated {
    RecordPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/adminGameRecordDeleted/payload
message AdminGameRecordDeleted {
    RecordPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/gameRecordCreated/payload/properties/payload
message AnonymousSchema1 {
    string setBy = 1;

    // allOf(#/components/schemas/recordPayload)
    string key = 2;
    string namespace = 3;
}

// path: #/components/messages/gameRecordCreated/payload
message GameRecordCreated {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/gameRecordUpdated/payload/properties/payload
message AnonymousSchema2 {
    string setBy = 1;

    // allOf(#/components/schemas/recordPayload)
    string key = 2;
    string namespace = 3;
}

// path: #/components/messages/gameRecordUpdated/payload
message GameRecordUpdated {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/gameRecordDeleted/payload
message GameRecordDeleted {
    RecordPayload payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/adminGameRecordCreated
message AdminGameRecordCreatedMessage {
    AdminGameRecordCreated payload = 1;
}

// path: #/components/messages/adminGameRecordUpdated
message AdminGameRecordUpdatedMessage {
    AdminGameRecordUpdated payload = 1;
}

// path: #/components/messages/adminGameRecordDeleted
message AdminGameRecordDeletedMessage {
    AdminGameRecordDeleted payload = 1;
}

// path: #/components/messages/gameRecordCreated
message GameRecordCreatedMessage {
    GameRecordCreated payload = 1;
}

// path: #/components/messages/gameRecordUpdated
message GameRecordUpdatedMessage {
    GameRecordUpdated payload = 1;
}

// path: #/components/messages/gameRecordDeleted
message GameRecordDeletedMessage {
    GameRecordDeleted payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/adminGameRecord/publish/message
message AdminGameRecordPublish {
    oneof payload {
        AdminGameRecordCreatedMessage variant0 = 1;
        AdminGameRecordUpdatedMessage variant1 = 2;
        AdminGameRecordDeletedMessage variant2 = 3;
    }
}

// path: #/channels/gameRecord/publish/message
message GameRecordPublish {
    oneof payload {
        GameRecordCreatedMessage variant0 = 1;
        GameRecordUpdatedMessage variant1 = 2;
        GameRecordDeletedMessage variant2 = 3;
    }
}


// --- service ---


// Publishes a AdminGameRecordCreated to the Admin Game Record channel. (oneOf variant) (adminGameRecord AdminGameRecordCreated)
service AdminGameRecordAdminGameRecordCreatedService {
    rpc OnMessage(AdminGameRecordCreated) returns (google.protobuf.Empty);
}

// Publishes a AdminGameRecordUpdated to the Admin Game Record channel. (oneOf variant) (adminGameRecord AdminGameRecordUpdated)
service AdminGameRecordAdminGameRecordUpdatedService {
    rpc OnMessage(AdminGameRecordUpdated) returns (google.protobuf.Empty);
}

// Publishes a AdminGameRecordDeleted to the Admin Game Record channel. (oneOf variant) (adminGameRecord AdminGameRecordDeleted)
service AdminGameRecordAdminGameRecordDeletedService {
    rpc OnMessage(AdminGameRecordDeleted) returns (google.protobuf.Empty);
}

// Publishes a GameRecordCreated to the Game Record channel. (oneOf variant) (gameRecord GameRecordCreated)
service GameRecordGameRecordCreatedService {
    rpc OnMessage(GameRecordCreated) returns (google.protobuf.Empty);
}

// Publishes a GameRecordUpdated to the Game Record channel. (oneOf variant) (gameRecord GameRecordUpdated)
service GameRecordGameRecordUpdatedService {
    rpc OnMessage(GameRecordUpdated) returns (google.protobuf.Empty);
}

// Publishes a GameRecordDeleted to the Game Record channel. (oneOf variant) (gameRecord GameRecordDeleted)
service GameRecordGameRecordDeletedService {
    rpc OnMessage(GameRecordDeleted) returns (google.protobuf.Empty);
}