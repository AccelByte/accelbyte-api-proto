// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/integration.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.integration.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Integration";
option go_package = "accelbyte.net/ecommerce/integration";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.integration";

// --- schema objects ---

// path: #/components/schemas/dlc
message Dlc {
    string dlc_id = 1 [json_name = "dlcId"];
    string namespace = 2 [json_name = "namespace"];
    string obtained_at = 3 [json_name = "obtainedAt"];
    string platform = 4 [json_name = "platform"]; // Allowed values: EPICGAMES, OCULUS, PSN, STEAM, XBOX
    string revoked_at = 5 [json_name = "revokedAt"];
    repeated string sources = 6 [json_name = "sources"];
    string status = 7 [json_name = "status"]; // Allowed values: FULFILLED, REVOKED, REVOKE_FAILED
    string third_party_id = 8 [json_name = "thirdPartyId"];
    string transaction_id = 9 [json_name = "transactionId"];
    string user_id = 10 [json_name = "userId"];
    int64 version = 11 [json_name = "version"];
}

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/iap
message Iap {
    string iap_order_no = 1 [json_name = "iapOrderNo"];
    string namespace = 2 [json_name = "namespace"];
    string user_id = 3 [json_name = "userId"];
    string product_id = 4 [json_name = "productId"];
    string transaction_id = 5 [json_name = "transactionId"];
    string status = 6 [json_name = "status"]; // Allowed values: VERIFIED, FULFILLED, FAILED
    string status_reason = 7 [json_name = "statusReason"];
    string region = 8 [json_name = "region"];
    string language = 9 [json_name = "language"];
    int64 quantity = 10 [json_name = "quantity"];
    bool sandbox = 11 [json_name = "sandbox"];
    string type = 12 [json_name = "type"]; // Allowed values: APPLE, GOOGLE, PLAYSTATION, STEAM, XBOX, EPICGAMES, TWITCH
    string fulfilled_time = 13 [json_name = "fulfilledTime"];
    double price = 14 [json_name = "price"];
    string currency = 15 [json_name = "currency"];
}

// path: #/components/schemas/notification
message Notification {
    string namespace = 1 [json_name = "namespace"];
    string user_id = 2 [json_name = "userId"];
    string notification_platform = 3 [json_name = "notificationPlatform"]; // Allowed values: GOOGLE, APPLE
    google.protobuf.Struct notification_payload = 4 [json_name = "notificationPayload"];
    string status = 5 [json_name = "status"]; // Allowed values: PROCESSED, ERROR, WARN, IGNORED
    string notification_type = 6 [json_name = "notificationType"]; // Allowed values: DID_CHANGE_RENEWAL_PREF, EXPIRED, GRACE_PERIOD_EXPIRED, RENEWAL_EXTENDED, DID_RENEW, SUBSCRIBED, REVOKE, REFUND, REFUND_REVERSED, OFFER_REDEEMED, DID_CHANGE_RENEWAL_STATUS, DID_FAIL_TO_RENEW, PRICE_INCREASE, REFUND_DECLINED, CONSUMPTION_REQUEST, RENEWAL_EXTENSION, EXTERNAL_PURCHASE_TOKEN, ONE_TIME_CHARGE, TEST, Subscription, OneTimePurchase, VoidPurchase, Test, UNKNOWN
}

// path: #/components/schemas/iapItemEntry
message IapItemEntry {
    string item_identity_type = 1 [json_name = "itemIdentityType"]; // Allowed values: ITEM_SKU, ITEM_ID
    string item_identity = 2 [json_name = "itemIdentity"];
    map<string, string> platform_product_id_map = 3 [json_name = "platformProductIdMap"];
}

// path: #/components/schemas/iapItemConfig
message IapItemConfig {
    string namespace = 1 [json_name = "namespace"];
    repeated IapItemEntry data = 2 [json_name = "data"];
}

// path: #/components/schemas/iapProcessedPayloadData
message IapProcessedPayloadData { // previously known as 'AnonymousSchema1'
    Iap iap = 1 [json_name = "iap"];
}

// path: #/components/schemas/dlcSyncedPayloadData
message DlcSyncedPayloadData { // previously known as 'AnonymousSchema2'
    Dlc dlc = 1 [json_name = "dlc"];
}

// path: #/components/schemas/notificationProcessedPayloadData
message NotificationProcessedPayloadData { // previously known as 'AnonymousSchema3'
    Notification notification = 1 [json_name = "notification"];
}

// path: #/components/schemas/iapItemConfigUpdatedPayloadData
message IapItemConfigUpdatedPayloadData {
    IapItemConfig iap_item_config = 1 [json_name = "iapItemConfig"];
}

// path: #/components/messages/iapProcessed/payload
message IapProcessed {
    IapProcessedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/dlcSynced/payload
message DlcSynced {
    DlcSyncedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/notificationProcessed/payload
message NotificationProcessed {
    NotificationProcessedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/iapItemConfigUpdated/payload
message IapItemConfigUpdated {
    IapItemConfigUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/appleIAPConfigDeleted
message AppleIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/appleIAPConfigUpdated
message AppleIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/googleIAPConfigDeleted
message GoogleIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/googleIAPConfigUpdated
message GoogleIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/googleP12FileUpdated
message GoogleP12FileUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/playStationIAPConfigDeleted
message PlayStationIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/playStationIAPConfigUpdated
message PlayStationIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/steamIAPConfigUpdated
message SteamIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/steamIAPConfigDeleted
message SteamIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/xblIAPConfigDeleted
message XblIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/xblIAPConfigUpdated
message XblIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/xblBPCertFileUpdated
message XblBPCertFileUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/stadiaIAPJsonFileUpdated
message StadiaIAPJsonFileUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/stadiaIAPConfigDeleted
message StadiaIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/epicGamesIAPConfigDeleted
message EpicGamesIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/epicGamesIAPConfigUpdated
message EpicGamesIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/twitchIAPConfigUpdated
message TwitchIAPConfigUpdatedMessage {
    Event payload = 1;
}

// path: #/components/messages/twitchIAPConfigDeleted
message TwitchIAPConfigDeletedMessage {
    Event payload = 1;
}

// path: #/components/messages/iapProcessed
message IapProcessedMessage {
    IapProcessed payload = 1;
}

// path: #/components/messages/dlcSynced
message DlcSyncedMessage {
    DlcSynced payload = 1;
}

// path: #/components/messages/notificationProcessed
message NotificationProcessedMessage {
    NotificationProcessed payload = 1;
}

// path: #/components/messages/iapItemConfigUpdated
message IapItemConfigUpdatedMessage {
    IapItemConfigUpdated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/iapConfigManagement/publish/message
message IapConfigManagementPublish {
    oneof payload {
        AppleIAPConfigDeletedMessage variant0 = 1;
        AppleIAPConfigUpdatedMessage variant1 = 2;
        GoogleIAPConfigDeletedMessage variant2 = 3;
        GoogleIAPConfigUpdatedMessage variant3 = 4;
        GoogleP12FileUpdatedMessage variant4 = 5;
        PlayStationIAPConfigDeletedMessage variant5 = 6;
        PlayStationIAPConfigUpdatedMessage variant6 = 7;
        SteamIAPConfigUpdatedMessage variant7 = 8;
        SteamIAPConfigDeletedMessage variant8 = 9;
        XblIAPConfigDeletedMessage variant9 = 10;
        XblIAPConfigUpdatedMessage variant10 = 11;
        XblBPCertFileUpdatedMessage variant11 = 12;
        StadiaIAPJsonFileUpdatedMessage variant12 = 13;
        StadiaIAPConfigDeletedMessage variant13 = 14;
        EpicGamesIAPConfigDeletedMessage variant14 = 15;
        EpicGamesIAPConfigUpdatedMessage variant15 = 16;
        TwitchIAPConfigUpdatedMessage variant16 = 17;
        TwitchIAPConfigDeletedMessage variant17 = 18;
    }
}


// --- service ---


// Publishes a message to the Dlc Sync channel. (dlcSync DlcSynced)
service DlcSyncDlcSyncedService {
    rpc OnMessage(DlcSynced) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement AppleIAPConfigDeleted)
service IapConfigManagementAppleIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement AppleIAPConfigUpdated)
service IapConfigManagementAppleIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement GoogleIAPConfigDeleted)
service IapConfigManagementGoogleIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement GoogleIAPConfigUpdated)
service IapConfigManagementGoogleIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement GoogleP12FileUpdated)
service IapConfigManagementGoogleP12FileUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement PlayStationIAPConfigDeleted)
service IapConfigManagementPlayStationIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement PlayStationIAPConfigUpdated)
service IapConfigManagementPlayStationIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement SteamIAPConfigUpdated)
service IapConfigManagementSteamIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement SteamIAPConfigDeleted)
service IapConfigManagementSteamIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement XblIAPConfigDeleted)
service IapConfigManagementXblIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement XblIAPConfigUpdated)
service IapConfigManagementXblIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement XblBPCertFileUpdated)
service IapConfigManagementXblBPCertFileUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement StadiaIAPJsonFileUpdated)
service IapConfigManagementStadiaIAPJsonFileUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement StadiaIAPConfigDeleted)
service IapConfigManagementStadiaIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement EpicGamesIAPConfigDeleted)
service IapConfigManagementEpicGamesIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement EpicGamesIAPConfigUpdated)
service IapConfigManagementEpicGamesIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement TwitchIAPConfigUpdated)
service IapConfigManagementTwitchIAPConfigUpdatedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Iap Config Management channel. (oneOf variant) (iapConfigManagement TwitchIAPConfigDeleted)
service IapConfigManagementTwitchIAPConfigDeletedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a message to the Iap Notification channel. (iapNotification NotificationProcessed)
service IapNotificationNotificationProcessedService {
    rpc OnMessage(NotificationProcessed) returns (google.protobuf.Empty);
}

// Publishes a message to the Iap Processing channel. (iapProcessing IapProcessed)
service IapProcessingIapProcessedService {
    rpc OnMessage(IapProcessed) returns (google.protobuf.Empty);
}

// Publishes a message to the Iap Item Config Management channel. (iapItemConfigManagement IapItemConfigUpdated)
service IapItemConfigManagementIapItemConfigUpdatedService {
    rpc OnMessage(IapItemConfigUpdated) returns (google.protobuf.Empty);
}