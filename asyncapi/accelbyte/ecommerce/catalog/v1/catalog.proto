// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/catalog.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.catalog.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Catalog";
option go_package = "accelbyte.net/ecommerce/catalog";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.catalog";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/store
message Store {
    string store_id = 1 [json_name = "storeId"];
    string namespace = 2 [json_name = "namespace"];
    string title = 3 [json_name = "title"];
    string description = 4 [json_name = "description"];
    bool published = 5 [json_name = "published"];
    repeated string supported_languages = 6 [json_name = "supportedLanguages"];
    repeated string supported_regions = 7 [json_name = "supportedRegions"];
    string default_region = 8 [json_name = "defaultRegion"];
    string default_language = 9 [json_name = "defaultLanguage"];
    string published_time = 10 [json_name = "publishedTime"];
    string created_at = 11 [json_name = "createdAt"];
    string updated_at = 12 [json_name = "updatedAt"];
}

// path: #/components/schemas/category
message Category {
    string namespace = 1 [json_name = "namespace"];
    string parent_category_path = 2 [json_name = "parentCategoryPath"];
    string category_path = 3 [json_name = "categoryPath"];
    bool is_root = 4 [json_name = "isRoot"];
    map<string, string> localization_display_names = 5 [json_name = "localizationDisplayNames"];
    string created_at = 6 [json_name = "createdAt"];
    string updated_at = 7 [json_name = "updatedAt"];
}

// path: #/components/schemas/image
message Image {
    string as = 1 [json_name = "as"];
    string caption = 2 [json_name = "caption"];
    int32 height = 3 [json_name = "height"];
    int32 width = 4 [json_name = "width"];
    string image_url = 5 [json_name = "imageUrl"];
    string small_image_url = 6 [json_name = "smallImageUrl"];
}

// path: #/components/schemas/localization
message Localization {
    string title = 1 [json_name = "title"];
    string description = 2 [json_name = "description"];
    string long_description = 3 [json_name = "longDescription"];
    google.protobuf.Struct local_ext = 4 [json_name = "localExt"];
}

// path: #/components/schemas/regionDataItem
message RegionDataItem {
    int32 price = 1 [json_name = "price"];
    int32 discount_percentage = 2 [json_name = "discountPercentage"];
    int32 discount_amount = 3 [json_name = "discountAmount"];
    int32 discounted_price = 4 [json_name = "discountedPrice"];
    string currency_code = 5 [json_name = "currencyCode"];
    string currency_type = 6 [json_name = "currencyType"];
    string currency_namespace = 7 [json_name = "currencyNamespace"];
    string purchase_at = 8 [json_name = "purchaseAt"];
    string expire_at = 9 [json_name = "expireAt"];
    string discount_purchase_at = 10 [json_name = "discountPurchaseAt"];
    string discount_expire_at = 11 [json_name = "discountExpireAt"];
}

// path: #/components/schemas/item
message Item {
    string item_id = 1 [json_name = "itemId"];
    string app_id = 2 [json_name = "appId"];
    string app_type = 3 [json_name = "appType"];
    string base_app_id = 4 [json_name = "baseAppId"];
    string base_app_item_id = 5 [json_name = "baseAppItemId"];
    string namespace = 6 [json_name = "namespace"];
    string sku = 7 [json_name = "sku"];
    string name = 8 [json_name = "name"];
    string entitlement_type = 9 [json_name = "entitlementType"];
    int32 use_count = 10 [json_name = "useCount"];
    bool stackable = 11 [json_name = "stackable"];
    string category_path = 12 [json_name = "categoryPath"];
    repeated Image images = 13 [json_name = "images"];
    string thumbnail_url = 14 [json_name = "thumbnailUrl"];
    map<string, Localization> localizations = 15 [json_name = "localizations"];
    string status = 16 [json_name = "status"];
    bool listable = 17 [json_name = "listable"];
    bool purchasable = 18 [json_name = "purchasable"];
    bool section_exclusive = 19 [json_name = "sectionExclusive"];
    string item_type = 20 [json_name = "itemType"];
    string target_namespace = 21 [json_name = "targetNamespace"];
    string target_currency_code = 22 [json_name = "targetCurrencyCode"];
    string target_item_id = 23 [json_name = "targetItemId"];
    map<string, google.protobuf.ListValue> region_data = 24 [json_name = "regionData"];
    repeated string item_ids = 25 [json_name = "itemIds"];
    map<string, int32> item_qty = 26 [json_name = "itemQty"];
    repeated string tags = 27 [json_name = "tags"];
    repeated string features = 28 [json_name = "features"];
    int32 max_count_per_user = 29 [json_name = "maxCountPerUser"];
    int32 max_count = 30 [json_name = "maxCount"];
    string clazz = 31 [json_name = "clazz"];
    google.protobuf.Struct ext = 32 [json_name = "ext"];
    string booth_name = 33 [json_name = "boothName"];
    string ticket_booth_id = 34 [json_name = "ticketBoothId"];
    int32 display_order = 35 [json_name = "displayOrder"];
    string created_at = 36 [json_name = "createdAt"];
    string updated_at = 37 [json_name = "updatedAt"];
    google.protobuf.Struct purchase_condition = 38 [json_name = "purchaseCondition"];
    google.protobuf.Struct option_box_config = 39 [json_name = "optionBoxConfig"];
    bool flexible = 40 [json_name = "flexible"];
}

// path: #/components/schemas/slide
message Slide {
    string type = 1 [json_name = "type"]; // Allowed values: image, video
    string video_source = 2 [json_name = "videoSource"]; // Allowed values: generic, youtube, vimeo
    string url = 3 [json_name = "url"];
    string alt = 4 [json_name = "alt"];
    string thumbnail_url = 5 [json_name = "thumbnailUrl"];
    string preview_url = 6 [json_name = "previewUrl"];
}

// path: #/components/schemas/requirement
message Requirement {
    string label = 1 [json_name = "label"];
    string os_version = 2 [json_name = "osVersion"];
    string processor = 3 [json_name = "processor"];
    string ram = 4 [json_name = "ram"];
    string graphics = 5 [json_name = "graphics"];
    string direct_x_version = 6 [json_name = "directXVersion"];
    string disk_space = 7 [json_name = "diskSpace"];
    string sound_card = 8 [json_name = "soundCard"];
    string additionals = 9 [json_name = "additionals"];
}

// path: #/components/schemas/appLocalization
message AppLocalization {
    string slogan = 1 [json_name = "slogan"];
    string announcement = 2 [json_name = "announcement"];
}

// path: #/components/schemas/purchaseCondition
message PurchaseCondition {
    ConditionGroups condition_groups = 1 [json_name = "conditionGroups"];
}

// path: #/components/schemas/conditionGroups
message ConditionGroups {
    repeated Predicate predicates = 1 [json_name = "predicates"];
    string operator = 2 [json_name = "operator"];
}

// path: #/components/schemas/predicate
message Predicate {
    string name = 1 [json_name = "name"];
    string predicate_type = 2 [json_name = "predicateType"]; // Allowed values: EntitlementPredicate, SeasonPassPredicate, SeasonTierPredicate
    string comparison = 3 [json_name = "comparison"]; // Allowed values: is, isNot, isGreaterThan, isGraterThanOrEqual, isLessThan, isLessThanOrEqual, includes, excludes
    int64 any_of = 4 [json_name = "anyOf"];
    repeated google.protobuf.Struct values = 5 [json_name = "values"];
    string value = 6 [json_name = "value"];
}

// path: #/components/schemas/optionBoxConfig
message OptionBoxConfig {
    repeated OptionBoxItem box_items = 1 [json_name = "boxItems"];
}

// path: #/components/schemas/optionBoxItem
message OptionBoxItem {
    string item_id = 1 [json_name = "itemId"];
    string item_sku = 2 [json_name = "itemSku"];
    int64 count = 3 [json_name = "count"];
}

// path: #/components/schemas/storePublish
message StorePublish {
    string namespace = 1 [json_name = "namespace"];
    string store_id = 2 [json_name = "storeId"];
    bool incremental = 3 [json_name = "incremental"];
    repeated CatalogChange catalog_changes = 4 [json_name = "catalogChanges"];
}

// path: #/components/schemas/catalogChange
message CatalogChange {
    string store_id = 1 [json_name = "storeId"];
    string change_id = 2 [json_name = "changeId"];
    string item_type = 3 [json_name = "itemType"];
    string item_id = 4 [json_name = "itemId"];
    string sku = 5 [json_name = "sku"];
    string view_id = 6 [json_name = "viewId"];
    string section_id = 7 [json_name = "sectionId"];
    string category_path = 8 [json_name = "categoryPath"];
    string action = 9 [json_name = "action"];
}

// path: #/components/schemas/app
message App {
    string item_id = 1 [json_name = "itemId"];
    string namespace = 2 [json_name = "namespace"];
    repeated Slide carousel = 3 [json_name = "carousel"];
    string developer = 4 [json_name = "developer"];
    string publisher = 5 [json_name = "publisher"];
    string website_url = 6 [json_name = "websiteUrl"];
    string forum_url = 7 [json_name = "forumUrl"];
    repeated string platforms = 8 [json_name = "platforms"];
    map<string, google.protobuf.ListValue> platform_requirements = 9 [json_name = "platformRequirements"];
    map<string, AppLocalization> localizations = 10 [json_name = "localizations"];
    string primary_genre = 11 [json_name = "primaryGenre"]; // Allowed values: Action, Adventure, Casual, FreeToPlay, Indie, MassivelyMultiplayer, Racing, RPG, Simulation, Sports, Strategy
    repeated string genres = 12 [json_name = "genres"];
    repeated string players = 13 [json_name = "players"];
    string release_date = 14 [json_name = "releaseDate"];
}

// path: #/components/schemas/itemStatusChange
message ItemStatusChange {
    string item_id = 1 [json_name = "itemId"];
    string item_name = 2 [json_name = "itemName"];
    string status = 3 [json_name = "status"]; // Allowed values: ACTIVE, INACTIVE
    string previous_status = 4 [json_name = "previousStatus"]; // Allowed values: ACTIVE, INACTIVE
}

// path: #/components/schemas/storeClone
message StoreClone {
    string target_store_id = 1 [json_name = "targetStoreId"];
    bool published = 2 [json_name = "published"];
}

// path: #/components/schemas/storeCreatedPayloadData
message StoreCreatedPayloadData { // previously known as 'AnonymousSchema13'
    Store store = 1 [json_name = "store"];
}

// path: #/components/schemas/storeUpdatedPayloadData
message StoreUpdatedPayloadData { // previously known as 'AnonymousSchema14'
    Store store = 1 [json_name = "store"];
    Store old_store = 2 [json_name = "oldStore"];
}

// path: #/components/schemas/storeDeletedPayloadData
message StoreDeletedPayloadData { // previously known as 'AnonymousSchema15'
    Store store = 1 [json_name = "store"];
}

// path: #/components/schemas/storeExportedPayloadData
message StoreExportedPayloadData { // previously known as 'AnonymousSchema16'
    string store_id = 1 [json_name = "storeId"];
}

// path: #/components/schemas/storeImportedPayloadData
message StoreImportedPayloadData { // previously known as 'AnonymousSchema17'
    string store_id = 1 [json_name = "storeId"];
}

// path: #/components/schemas/storeClonedPayloadData
message StoreClonedPayloadData { // previously known as 'AnonymousSchema18'
    string store_id = 1 [json_name = "storeId"];
    StoreClone store_clone = 2 [json_name = "storeClone"];
}

// path: #/components/schemas/storeRollbackedPayloadData
message StoreRollbackedPayloadData { // previously known as 'AnonymousSchema19'
    string store_id = 1 [json_name = "storeId"];
}

// path: #/components/schemas/storePublishedPayloadData
message StorePublishedPayloadData { // previously known as 'AnonymousSchema20'
    string store_id = 1 [json_name = "storeId"];
    StorePublish store_publish_schema = 2 [json_name = "storePublishSchema"];
}

// path: #/components/schemas/categoryCreatedPayloadData
message CategoryCreatedPayloadData { // previously known as 'AnonymousSchema21'
    string store_id = 1 [json_name = "storeId"];
    Category category = 2 [json_name = "category"];
}

// path: #/components/schemas/categoryUpdatedPayloadData
message CategoryUpdatedPayloadData { // previously known as 'AnonymousSchema22'
    string store_id = 1 [json_name = "storeId"];
    Category category = 2 [json_name = "category"];
    Category old_category = 3 [json_name = "oldCategory"];
}

// path: #/components/schemas/categoryDeletedPayloadData
message CategoryDeletedPayloadData { // previously known as 'AnonymousSchema23'
    string store_id = 1 [json_name = "storeId"];
    Category category = 2 [json_name = "category"];
}

// path: #/components/schemas/itemCreatedPayloadData
message ItemCreatedPayloadData { // previously known as 'AnonymousSchema24'
    string store_id = 1 [json_name = "storeId"];
    Item item = 2 [json_name = "item"];
}

// path: #/components/schemas/itemUpdatedPayloadData
message ItemUpdatedPayloadData { // previously known as 'AnonymousSchema25'
    string store_id = 1 [json_name = "storeId"];
    Item item = 2 [json_name = "item"];
    Item old_item = 3 [json_name = "oldItem"];
}

// path: #/components/schemas/itemDeletedPayloadData
message ItemDeletedPayloadData { // previously known as 'AnonymousSchema26'
    string store_id = 1 [json_name = "storeId"];
    Item item = 2 [json_name = "item"];
}

// path: #/components/schemas/inGameItemSyncedPayloadData
message InGameItemSyncedPayloadData { // previously known as 'AnonymousSchema27'
    string store_id = 1 [json_name = "storeId"];
    Item item = 2 [json_name = "item"];
}

// path: #/components/schemas/itemDisabledPayloadData
message ItemDisabledPayloadData { // previously known as 'AnonymousSchema28'
    string store_id = 1 [json_name = "storeId"];
    ItemStatusChange item_status_change = 2 [json_name = "itemStatusChange"];
}

// path: #/components/schemas/itemEnabledPayloadData
message ItemEnabledPayloadData { // previously known as 'AnonymousSchema29'
    string store_id = 1 [json_name = "storeId"];
    ItemStatusChange item_status_change = 2 [json_name = "itemStatusChange"];
}

// path: #/components/schemas/appUpdatedPayloadData
message AppUpdatedPayloadData { // previously known as 'AnonymousSchema30'
    string store_id = 1 [json_name = "storeId"];
    App app = 2 [json_name = "app"];
    App old_app = 3 [json_name = "oldApp"];
}

// path: #/components/messages/storeCreated/payload
message StoreCreated {
    StoreCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storeUpdated/payload
message StoreUpdated {
    StoreUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storeDeleted/payload
message StoreDeleted {
    StoreDeletedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storeExported/payload
message StoreExported {
    StoreExportedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storeImported/payload
message StoreImported {
    StoreImportedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storeCloned/payload
message StoreCloned {
    StoreClonedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storeRollbacked/payload
message StoreRollbacked {
    StoreRollbackedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/storePublished/payload
message StorePublished {
    StorePublishedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/categoryCreated/payload
message CategoryCreated {
    CategoryCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/categoryUpdated/payload
message CategoryUpdated {
    CategoryUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/categoryDeleted/payload
message CategoryDeleted {
    CategoryDeletedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/itemCreated/payload
message ItemCreated {
    ItemCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/itemUpdated/payload
message ItemUpdated {
    ItemUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/itemDeleted/payload
message ItemDeleted {
    ItemDeletedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/inGameItemSynced/payload
message InGameItemSynced {
    InGameItemSyncedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/itemDisabled/payload
message ItemDisabled {
    ItemDisabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/itemEnabled/payload
message ItemEnabled {
    ItemEnabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/appUpdated/payload
message AppUpdated {
    AppUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/storeCreated
message StoreCreatedMessage {
    StoreCreated payload = 1;
}

// path: #/components/messages/storeUpdated
message StoreUpdatedMessage {
    StoreUpdated payload = 1;
}

// path: #/components/messages/storeDeleted
message StoreDeletedMessage {
    StoreDeleted payload = 1;
}

// path: #/components/messages/storeExported
message StoreExportedMessage {
    StoreExported payload = 1;
}

// path: #/components/messages/storeImported
message StoreImportedMessage {
    StoreImported payload = 1;
}

// path: #/components/messages/storeCloned
message StoreClonedMessage {
    StoreCloned payload = 1;
}

// path: #/components/messages/storeRollbacked
message StoreRollbackedMessage {
    StoreRollbacked payload = 1;
}

// path: #/components/messages/storePublished
message StorePublishedMessage {
    StorePublished payload = 1;
}

// path: #/components/messages/categoryCreated
message CategoryCreatedMessage {
    CategoryCreated payload = 1;
}

// path: #/components/messages/categoryUpdated
message CategoryUpdatedMessage {
    CategoryUpdated payload = 1;
}

// path: #/components/messages/categoryDeleted
message CategoryDeletedMessage {
    CategoryDeleted payload = 1;
}

// path: #/components/messages/itemCreated
message ItemCreatedMessage {
    ItemCreated payload = 1;
}

// path: #/components/messages/itemUpdated
message ItemUpdatedMessage {
    ItemUpdated payload = 1;
}

// path: #/components/messages/itemDeleted
message ItemDeletedMessage {
    ItemDeleted payload = 1;
}

// path: #/components/messages/inGameItemSynced
message InGameItemSyncedMessage {
    InGameItemSynced payload = 1;
}

// path: #/components/messages/itemDisabled
message ItemDisabledMessage {
    ItemDisabled payload = 1;
}

// path: #/components/messages/itemEnabled
message ItemEnabledMessage {
    ItemEnabled payload = 1;
}

// path: #/components/messages/appUpdated
message AppUpdatedMessage {
    AppUpdated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/catalogManagement/publish/message
message CatalogManagementPublish {
    oneof payload {
        StoreCreatedMessage variant0 = 1;
        StoreUpdatedMessage variant1 = 2;
        StoreDeletedMessage variant2 = 3;
        StoreClonedMessage variant3 = 4;
        StoreRollbackedMessage variant4 = 5;
        StoreExportedMessage variant5 = 6;
        StoreImportedMessage variant6 = 7;
        StorePublishedMessage variant7 = 8;
        CategoryCreatedMessage variant8 = 9;
        CategoryUpdatedMessage variant9 = 10;
        CategoryDeletedMessage variant10 = 11;
        ItemCreatedMessage variant11 = 12;
        ItemUpdatedMessage variant12 = 13;
        ItemDeletedMessage variant13 = 14;
        InGameItemSyncedMessage variant14 = 15;
        ItemDisabledMessage variant15 = 16;
        ItemEnabledMessage variant16 = 17;
        AppUpdatedMessage variant17 = 18;
    }
}


// --- service ---


// Publishes a StoreCreated to the Catalog Management channel. (oneOf variant) (catalogManagement StoreCreated)
service CatalogManagementStoreCreatedService {
    rpc OnMessage(StoreCreated) returns (google.protobuf.Empty);
}

// Publishes a StoreUpdated to the Catalog Management channel. (oneOf variant) (catalogManagement StoreUpdated)
service CatalogManagementStoreUpdatedService {
    rpc OnMessage(StoreUpdated) returns (google.protobuf.Empty);
}

// Publishes a StoreDeleted to the Catalog Management channel. (oneOf variant) (catalogManagement StoreDeleted)
service CatalogManagementStoreDeletedService {
    rpc OnMessage(StoreDeleted) returns (google.protobuf.Empty);
}

// Publishes a StoreCloned to the Catalog Management channel. (oneOf variant) (catalogManagement StoreCloned)
service CatalogManagementStoreClonedService {
    rpc OnMessage(StoreCloned) returns (google.protobuf.Empty);
}

// Publishes a StoreRollbacked to the Catalog Management channel. (oneOf variant) (catalogManagement StoreRollbacked)
service CatalogManagementStoreRollbackedService {
    rpc OnMessage(StoreRollbacked) returns (google.protobuf.Empty);
}

// Publishes a StoreExported to the Catalog Management channel. (oneOf variant) (catalogManagement StoreExported)
service CatalogManagementStoreExportedService {
    rpc OnMessage(StoreExported) returns (google.protobuf.Empty);
}

// Publishes a StoreImported to the Catalog Management channel. (oneOf variant) (catalogManagement StoreImported)
service CatalogManagementStoreImportedService {
    rpc OnMessage(StoreImported) returns (google.protobuf.Empty);
}

// Publishes a StorePublished to the Catalog Management channel. (oneOf variant) (catalogManagement StorePublished)
service CatalogManagementStorePublishedService {
    rpc OnMessage(StorePublished) returns (google.protobuf.Empty);
}

// Publishes a CategoryCreated to the Catalog Management channel. (oneOf variant) (catalogManagement CategoryCreated)
service CatalogManagementCategoryCreatedService {
    rpc OnMessage(CategoryCreated) returns (google.protobuf.Empty);
}

// Publishes a CategoryUpdated to the Catalog Management channel. (oneOf variant) (catalogManagement CategoryUpdated)
service CatalogManagementCategoryUpdatedService {
    rpc OnMessage(CategoryUpdated) returns (google.protobuf.Empty);
}

// Publishes a CategoryDeleted to the Catalog Management channel. (oneOf variant) (catalogManagement CategoryDeleted)
service CatalogManagementCategoryDeletedService {
    rpc OnMessage(CategoryDeleted) returns (google.protobuf.Empty);
}

// Publishes a ItemCreated to the Catalog Management channel. (oneOf variant) (catalogManagement ItemCreated)
service CatalogManagementItemCreatedService {
    rpc OnMessage(ItemCreated) returns (google.protobuf.Empty);
}

// Publishes a ItemUpdated to the Catalog Management channel. (oneOf variant) (catalogManagement ItemUpdated)
service CatalogManagementItemUpdatedService {
    rpc OnMessage(ItemUpdated) returns (google.protobuf.Empty);
}

// Publishes a ItemDeleted to the Catalog Management channel. (oneOf variant) (catalogManagement ItemDeleted)
service CatalogManagementItemDeletedService {
    rpc OnMessage(ItemDeleted) returns (google.protobuf.Empty);
}

// Publishes a InGameItemSynced to the Catalog Management channel. (oneOf variant) (catalogManagement InGameItemSynced)
service CatalogManagementInGameItemSyncedService {
    rpc OnMessage(InGameItemSynced) returns (google.protobuf.Empty);
}

// Publishes a ItemDisabled to the Catalog Management channel. (oneOf variant) (catalogManagement ItemDisabled)
service CatalogManagementItemDisabledService {
    rpc OnMessage(ItemDisabled) returns (google.protobuf.Empty);
}

// Publishes a ItemEnabled to the Catalog Management channel. (oneOf variant) (catalogManagement ItemEnabled)
service CatalogManagementItemEnabledService {
    rpc OnMessage(ItemEnabled) returns (google.protobuf.Empty);
}

// Publishes a AppUpdated to the Catalog Management channel. (oneOf variant) (catalogManagement AppUpdated)
service CatalogManagementAppUpdatedService {
    rpc OnMessage(AppUpdated) returns (google.protobuf.Empty);
}