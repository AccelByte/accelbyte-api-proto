// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/wallet.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.wallet.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Wallet";
option go_package = "accelbyte.net/ecommerce/wallet";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.wallet";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/walletStatusChange
message WalletStatusChange {
    string wallet_id = 1 [json_name = "walletId"];
    string user_id = 2 [json_name = "userId"];
    string status = 3 [json_name = "status"];
    string previous_status = 4 [json_name = "previousStatus"];
}

// path: #/components/schemas/walletBalanceChange
message WalletBalanceChange {
    string wallet_id = 1 [json_name = "walletId", deprecated = true];
    string namespace = 2 [json_name = "namespace"];
    string user_id = 3 [json_name = "userId"];
    string currency_code = 4 [json_name = "currencyCode"];
    int64 balance = 5 [json_name = "balance", deprecated = true];
    int64 amount = 6 [json_name = "amount"];
    string source = 7 [json_name = "source"]; // Allowed values: PURCHASE, IAP, PROMOTION, ACHIEVEMENT, REFERRAL_BONUS, REDEEM_CODE, REWARD, GIFT, REFUND, DLC, OTHER, SELL_BACK, TRADE, CONSUME_ENTITLEMENT, IAP_CHARGEBACK_REVERSED
    string reason = 8 [json_name = "reason"];
    string origin = 9 [json_name = "origin"]; // Allowed values: Playstation, Xbox, Steam, Epic, IOS, GooglePlay, Twitch, Nintendo, Oculus, System, Other
    repeated WalletBalanceChangeDetail details = 10 [json_name = "details"];
    google.protobuf.Struct metadata = 11 [json_name = "metadata"];
}

// path: #/components/schemas/walletBalanceChangeDetail
message WalletBalanceChangeDetail {
    string origin = 1 [json_name = "origin"]; // Allowed values: Playstation, Xbox, Steam, Epic, IOS, GooglePlay, Twitch, Nintendo, Oculus, System, Other
    int64 balance = 2 [json_name = "balance"];
    int64 amount = 3 [json_name = "amount"];
}

// path: #/components/schemas/walletDisabledPayloadData
message WalletDisabledPayloadData { // previously known as 'AnonymousSchema1'
    WalletStatusChange wallet_status_change = 1 [json_name = "walletStatusChange"];
}

// path: #/components/schemas/walletEnabledPayloadData
message WalletEnabledPayloadData { // previously known as 'AnonymousSchema2'
    WalletStatusChange wallet_status_change = 1 [json_name = "walletStatusChange"];
}

// path: #/components/schemas/walletCreditedPayloadData
message AnonymousSchema3 { // Message name is kept for backward compatibility
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/schemas/walletDebitedPayloadData
message AnonymousSchema4 { // Message name is kept for backward compatibility
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/schemas/walledPaidPayloadData
message AnonymousSchema5 { // Message name is kept for backward compatibility
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/schemas/walledExpiredPayloadData
message WalledExpiredPayloadData { // previously known as 'AnonymousSchema6'
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/schemas/walletTransactionCancelledPayloadData
message WalletTransactionCancelledPayloadData { // previously known as 'AnonymousSchema7'
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/schemas/walletPaidPayloadData
message WalletPaidPayloadData {
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/schemas/walletExpiredPayloadData
message WalletExpiredPayloadData {
    WalletBalanceChange wallet_balance_change = 1 [json_name = "walletBalanceChange"];
}

// path: #/components/messages/walletDisabled/payload
message WalletDisabled {
    WalletDisabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walletEnabled/payload
message WalletEnabled {
    WalletEnabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walletCredited/payload
message WalletCredited {
    AnonymousSchema3 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walletDebited/payload
message WalletDebited {
    AnonymousSchema4 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walledPaid/payload
message WalledPaid {
    AnonymousSchema5 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walletPaid/payload
message WalletPaid {
    WalletPaidPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walledExpired/payload
message WalledExpired {
    WalledExpiredPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walletExpired/payload
message WalletExpired {
    WalletExpiredPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/walletTransactionCancelled/payload
message WalletTransactionCancelled {
    WalletTransactionCancelledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/walletDisabled
message WalletDisabledMessage {
    WalletDisabled payload = 1;
}

// path: #/components/messages/walletEnabled
message WalletEnabledMessage {
    WalletEnabled payload = 1;
}

// path: #/components/messages/walletCredited
message WalletCreditedMessage {
    WalletCredited payload = 1;
}

// path: #/components/messages/walletDebited
message WalletDebitedMessage {
    WalletDebited payload = 1;
}

// path: #/components/messages/walledPaid
message WalledPaidMessage {
    WalledPaid payload = 1;
}

// path: #/components/messages/walletPaid
message WalletPaidMessage {
    WalletPaid payload = 1;
}

// path: #/components/messages/walledExpired
message WalledExpiredMessage {
    WalledExpired payload = 1;
}

// path: #/components/messages/walletExpired
message WalletExpiredMessage {
    WalletExpired payload = 1;
}

// path: #/components/messages/walletTransactionCancelled
message WalletTransactionCancelledMessage {
    WalletTransactionCancelled payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/walletProcessing/publish/message
message WalletProcessingPublish {
    oneof payload {
        WalletDisabledMessage variant0 = 1;
        WalletEnabledMessage variant1 = 2;
        WalletCreditedMessage variant2 = 3;
        WalletDebitedMessage variant3 = 4;
        WalledPaidMessage variant4 = 5;
        WalledExpiredMessage variant5 = 6;
        WalletTransactionCancelledMessage variant6 = 7;
        WalletPaidMessage variant7 = 8;
        WalletExpiredMessage variant8 = 9;
    }
}


// --- service ---


// Publishes a WalletDisabled to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletDisabled)
service WalletProcessingWalletDisabledService {
    rpc OnMessage(WalletDisabled) returns (google.protobuf.Empty);
}

// Publishes a WalletEnabled to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletEnabled)
service WalletProcessingWalletEnabledService {
    rpc OnMessage(WalletEnabled) returns (google.protobuf.Empty);
}

// Publishes a WalletCredited to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletCredited)
service WalletProcessingWalletCreditedService {
    rpc OnMessage(WalletCredited) returns (google.protobuf.Empty);
}

// Publishes a WalletDebited to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletDebited)
service WalletProcessingWalletDebitedService {
    rpc OnMessage(WalletDebited) returns (google.protobuf.Empty);
}

// Publishes a WalledPaid to the Wallet Processing channel. (oneOf variant) (walletProcessing WalledPaid)
service WalletProcessingWalledPaidService {
    rpc OnMessage(WalledPaid) returns (google.protobuf.Empty);
}

// Publishes a WalledExpired to the Wallet Processing channel. (oneOf variant) (walletProcessing WalledExpired)
service WalletProcessingWalledExpiredService {
    rpc OnMessage(WalledExpired) returns (google.protobuf.Empty);
}

// Publishes a WalletTransactionCancelled to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletTransactionCancelled)
service WalletProcessingWalletTransactionCancelledService {
    rpc OnMessage(WalletTransactionCancelled) returns (google.protobuf.Empty);
}

// Publishes a WalletPaid to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletPaid)
service WalletProcessingWalletPaidService {
    rpc OnMessage(WalletPaid) returns (google.protobuf.Empty);
}

// Publishes a WalletExpired to the Wallet Processing channel. (oneOf variant) (walletProcessing WalletExpired)
service WalletProcessingWalletExpiredService {
    rpc OnMessage(WalletExpired) returns (google.protobuf.Empty);
}