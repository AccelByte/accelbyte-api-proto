// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/reward.yml (0.1.0)

syntax = "proto3";

package accelbyte.ecommerce.reward.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Reward";
option go_package = "accelbyte.net/ecommerce/reward";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.reward";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/rewardManage
message RewardManage {
    string namespace = 1 [json_name = "namespace"];
    string reward_code = 2 [json_name = "rewardCode"];
    string description = 3 [json_name = "description"];
    string event_topic = 4 [json_name = "eventTopic"];
}

// path: #/components/schemas/rewardImport
message RewardImport {
    string namespace = 1 [json_name = "namespace"];
    repeated string replaced_reward_codes = 2 [json_name = "replacedRewardCodes"];
    repeated string ignored_reward_codes = 3 [json_name = "ignoredRewardCodes"];
    repeated string new_reward_codes = 4 [json_name = "newRewardCodes"];
    repeated string failed_reward_codes = 5 [json_name = "failedRewardCodes"];
}

// path: #/components/messages/rewardCreated/payload/properties/payload
message AnonymousSchema1 {
    RewardManage reward_manage = 1 [json_name = "rewardManage"];
}

// path: #/components/messages/rewardCreated/payload
message RewardCreated {
    AnonymousSchema1 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/rewardUpdated/payload/properties/payload
message AnonymousSchema2 {
    RewardManage reward_manage = 1 [json_name = "rewardManage"];
}

// path: #/components/messages/rewardUpdated/payload
message RewardUpdated {
    AnonymousSchema2 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/rewardDeleted/payload/properties/payload
message AnonymousSchema3 {
    RewardManage reward_manage = 1 [json_name = "rewardManage"];
}

// path: #/components/messages/rewardDeleted/payload
message RewardDeleted {
    AnonymousSchema3 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/rewardImported/payload/properties/payload
message AnonymousSchema4 {
    RewardImport reward_import = 1 [json_name = "rewardImport"];
}

// path: #/components/messages/rewardImported/payload
message RewardImported {
    AnonymousSchema4 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/rewardCreated
message RewardCreatedMessage {
    RewardCreated payload = 1;
}

// path: #/components/messages/rewardUpdated
message RewardUpdatedMessage {
    RewardUpdated payload = 1;
}

// path: #/components/messages/rewardDeleted
message RewardDeletedMessage {
    RewardDeleted payload = 1;
}

// path: #/components/messages/rewardImported
message RewardImportedMessage {
    RewardImported payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/rewardManagement/publish/message
message RewardManagementPublish {
    oneof payload {
        RewardCreatedMessage variant0 = 1;
        RewardUpdatedMessage variant1 = 2;
        RewardDeletedMessage variant2 = 3;
        RewardImportedMessage variant3 = 4;
    }
}


// --- service ---


// Publishes a RewardCreated to the Reward Management channel. (oneOf variant) (rewardManagement RewardCreated)
service RewardManagementRewardCreatedService {
    rpc OnMessage(RewardCreated) returns (google.protobuf.Empty);
}

// Publishes a RewardUpdated to the Reward Management channel. (oneOf variant) (rewardManagement RewardUpdated)
service RewardManagementRewardUpdatedService {
    rpc OnMessage(RewardUpdated) returns (google.protobuf.Empty);
}

// Publishes a RewardDeleted to the Reward Management channel. (oneOf variant) (rewardManagement RewardDeleted)
service RewardManagementRewardDeletedService {
    rpc OnMessage(RewardDeleted) returns (google.protobuf.Empty);
}

// Publishes a RewardImported to the Reward Management channel. (oneOf variant) (rewardManagement RewardImported)
service RewardManagementRewardImportedService {
    rpc OnMessage(RewardImported) returns (google.protobuf.Empty);
}