// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/entitlement.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.entitlement.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Entitlement";
option go_package = "accelbyte.net/ecommerce/entitlement";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.entitlement";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/entitlement
message Entitlement {
    string id = 1;
    string namespace = 2;
    string clazz = 3;
    string type = 4;
    string status = 5;
    string appId = 6;
    string appType = 7;
    string sku = 8;
    string userId = 9;
    string itemId = 10;
    string itemNamespace = 11;
    string name = 12;
    int32 useCount = 13;
    string source = 14;
    string startDate = 15;
    string endDate = 16;
    string grantedAt = 17;
    string createdAt = 18;
    string updatedAt = 19;
}

// path: #/components/schemas/stackableEntitlement
message StackableEntitlement {
    string id = 1;
    string namespace = 2;
    string clazz = 3;
    string type = 4;
    string status = 5;
    string appId = 6;
    string appType = 7;
    string sku = 8;
    string userId = 9;
    string itemId = 10;
    string itemNamespace = 11;
    string name = 12;
    int32 useCount = 13;
    string source = 14;
    string startDate = 15;
    string endDate = 16;
    string grantedAt = 17;
    string createdAt = 18;
    string updatedAt = 19;
    bool stackable = 20;
    int32 stackedUseCount = 21;
}

// path: #/components/schemas/entitlementConsumption
message EntitlementConsumption {
    string entitlementId = 1;
    string entitlementName = 2;
    string userId = 3;
    int64 useCount = 4;
    int64 count = 5;
}

// path: #/components/schemas/entitlementUseCountRevocation
message EntitlementUseCountRevocation {
    string entitlementId = 1;
    string entitlementName = 2;
    string userId = 3;
    int64 useCount = 4;
    int64 count = 5;
}

// path: #/components/schemas/creditSummary
message CreditSummary {
    string walletId = 1;
    string namespace = 2;
    string userId = 3;
    int64 amount = 4;
}

// path: #/components/schemas/entitlementSale
message EntitlementSale {
    string entitlementId = 1;
    string entitlementName = 2;
    // Allowed values: DURABLE, CONSUMABLE
    string entitlementType = 3;
    string clazz = 4;
    string userId = 5;
    int64 useCount = 6;
    int64 count = 7;
    repeated CreditSummary creditSummaries = 8;
}

// path: #/components/schemas/entitlementRevocation
message EntitlementRevocation {
    repeated string entitlementIds = 1;
    string userId = 2;
}

// path: #/components/schemas/entitlementStatusChange
message EntitlementStatusChange {
    string entitlementId = 1;
    string entitlementName = 2;
    string userId = 3;
    // Allowed values: ACTIVE, INACTIVE, CONSUMED, REVOKED, SOLD
    string status = 4;
    // Allowed values: ACTIVE, INACTIVE, CONSUMED, REVOKED, SOLD
    string previousStatus = 5;
}

// path: #/components/messages/entitlementGranted/payload/properties/payload
message AnonymousSchema1 {
    repeated StackableEntitlement grants = 1;
}

// path: #/components/messages/entitlementGranted/payload
message EntitlementGranted {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementUpdated/payload/properties/payload
message AnonymousSchema2 {
    Entitlement entitlement = 1;
    Entitlement oldEntitlement = 2;
}

// path: #/components/messages/entitlementUpdated/payload
message EntitlementUpdated {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementConsumed/payload/properties/payload
message AnonymousSchema3 {
    EntitlementConsumption entitlementConsumption = 1;
}

// path: #/components/messages/entitlementConsumed/payload
message EntitlementConsumed {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementUseCountRevoked/payload/properties/payload
message AnonymousSchema4 {
    EntitlementUseCountRevocation entitlementUseCountRevocation = 1;
}

// path: #/components/messages/entitlementUseCountRevoked/payload
message EntitlementUseCountRevoked {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementRevoked/payload/properties/payload
message AnonymousSchema5 {
    EntitlementRevocation entitlementRevocation = 1;
}

// path: #/components/messages/entitlementRevoked/payload
message EntitlementRevoked {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementDisabled/payload/properties/payload
message AnonymousSchema6 {
    EntitlementStatusChange entitlementStatusChange = 1;
}

// path: #/components/messages/entitlementDisabled/payload
message EntitlementDisabled {
    AnonymousSchema6 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementEnabled/payload/properties/payload
message AnonymousSchema7 {
    EntitlementStatusChange entitlementStatusChange = 1;
}

// path: #/components/messages/entitlementEnabled/payload
message EntitlementEnabled {
    AnonymousSchema7 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/entitlementSellback/payload/properties/payload
message AnonymousSchema8 {
    EntitlementSale entitlementSale = 1;
}

// path: #/components/messages/entitlementSellback/payload
message EntitlementSellback {
    AnonymousSchema8 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/entitlementGranted
message EntitlementGrantedMessage {
    EntitlementGranted payload = 1;
}

// path: #/components/messages/entitlementUpdated
message EntitlementUpdatedMessage {
    EntitlementUpdated payload = 1;
}

// path: #/components/messages/entitlementConsumed
message EntitlementConsumedMessage {
    EntitlementConsumed payload = 1;
}

// path: #/components/messages/entitlementUseCountRevoked
message EntitlementUseCountRevokedMessage {
    EntitlementUseCountRevoked payload = 1;
}

// path: #/components/messages/entitlementRevoked
message EntitlementRevokedMessage {
    EntitlementRevoked payload = 1;
}

// path: #/components/messages/entitlementDisabled
message EntitlementDisabledMessage {
    EntitlementDisabled payload = 1;
}

// path: #/components/messages/entitlementEnabled
message EntitlementEnabledMessage {
    EntitlementEnabled payload = 1;
}

// path: #/components/messages/entitlementSellback
message EntitlementSellbackMessage {
    EntitlementSellback payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/entitlementManagement/publish/message
message EntitlementManagementPublish {
    oneof payload {
        EntitlementGrantedMessage variant0 = 1;
        EntitlementUpdatedMessage variant1 = 2;
        EntitlementRevokedMessage variant2 = 3;
        EntitlementDisabledMessage variant3 = 4;
        EntitlementEnabledMessage variant4 = 5;
        EntitlementUseCountRevokedMessage variant5 = 6;
    }
}


// --- service ---


// Publishes a EntitlementGranted to the Entitlement Management channel. (oneOf variant) (entitlementManagement EntitlementGranted)
service EntitlementManagementEntitlementGrantedService {
    rpc OnMessage(EntitlementGranted) returns (google.protobuf.Empty);
}

// Publishes a EntitlementUpdated to the Entitlement Management channel. (oneOf variant) (entitlementManagement EntitlementUpdated)
service EntitlementManagementEntitlementUpdatedService {
    rpc OnMessage(EntitlementUpdated) returns (google.protobuf.Empty);
}

// Publishes a EntitlementRevoked to the Entitlement Management channel. (oneOf variant) (entitlementManagement EntitlementRevoked)
service EntitlementManagementEntitlementRevokedService {
    rpc OnMessage(EntitlementRevoked) returns (google.protobuf.Empty);
}

// Publishes a EntitlementDisabled to the Entitlement Management channel. (oneOf variant) (entitlementManagement EntitlementDisabled)
service EntitlementManagementEntitlementDisabledService {
    rpc OnMessage(EntitlementDisabled) returns (google.protobuf.Empty);
}

// Publishes a EntitlementEnabled to the Entitlement Management channel. (oneOf variant) (entitlementManagement EntitlementEnabled)
service EntitlementManagementEntitlementEnabledService {
    rpc OnMessage(EntitlementEnabled) returns (google.protobuf.Empty);
}

// Publishes a EntitlementUseCountRevoked to the Entitlement Management channel. (oneOf variant) (entitlementManagement EntitlementUseCountRevoked)
service EntitlementManagementEntitlementUseCountRevokedService {
    rpc OnMessage(EntitlementUseCountRevoked) returns (google.protobuf.Empty);
}

// Publishes a message to the Entitlement Consumption channel. (entitlementConsumption EntitlementConsumed)
service EntitlementConsumptionEntitlementConsumedService {
    rpc OnMessage(EntitlementConsumed) returns (google.protobuf.Empty);
}

// Publishes a message to the Entitlement Sale channel. (entitlementSale EntitlementSellback)
service EntitlementSaleEntitlementSellbackService {
    rpc OnMessage(EntitlementSellback) returns (google.protobuf.Empty);
}