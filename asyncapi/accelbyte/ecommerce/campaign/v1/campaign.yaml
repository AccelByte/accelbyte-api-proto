asyncapi: 2.0.0
id: urn:net:accelbyte:platform:campaign
info:
  title: AsyncAPI for justice campaign service
  version: 0.0.1
defaultContentType: application/json
channels:
  campaignManagement:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/campaignCreated'
        - $ref: '#/components/messages/campaignUpdated'
        - $ref: '#/components/messages/codeCreated'
        - $ref: '#/components/messages/codeDisabled'
        - $ref: '#/components/messages/codeEnabled'
        - $ref: '#/components/messages/codeBulkDisabled'
        - $ref: '#/components/messages/codeBulkEnabled'
  keyGroupManagement:
    publish:
      message:
        oneOf:
        - $ref: '#/components/messages/keyGroupCreated'
        - $ref: '#/components/messages/keyGroupUpdated'
        - $ref: '#/components/messages/keyUploaded'
  codeRedemption:
    publish:
      message:
        $ref: '#/components/messages/codeRedeemed'
  ticketSale:
    publish:
      message:
        $ref: '#/components/messages/ticketAcquired'
components:
  schemas:
    event:
      type: object
      properties:
        id:
          type: string
          description: event id
        version:
          type: integer
        name:
          type: string
          description: event name
        namespace:
          type: string
          description: event namespace
        parentNamespace:
          type: string
        timestamp:
          type: string
          format: date-time
        clientId:
          type: string
          description: client id
        userId:
          type: string
          description: the operator id
        traceId:
          type: string
          description: trace id
        sessionId:
          type: string
          description: session id
    campaign:
      type: object
      properties:
        id:
          type: string
          description: campaign id
        type:
          type: string
          description: campaign type
          enum:
          - REDEMPTION
        namespace:
          type: string
          description: namespace of this campaign
        name:
          type: string
          description: name of this campaign
        description:
          type: string
          description: description of this campaign
        tags:
          type: array
          items:
            type: string
          description: tags of this campaign
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
          description: status of this campaign
        redeemStart:
          type: string
          format: date-time
          description: redeem start time
        redeemEnd:
          type: string
          format: date-time
          description: redeem end time
        maxRedeemCountPerCode:
          type: integer
          format: int32
          description: max redeem count per code, -1 means UNLIMITED
        maxRedeemCountPerCodePerUser:
          type: integer
          format: int32
          description: max redeem count per code per user, -1 mean UNLIMITED
        maxRedeemCountPerCampaignPerUser:
          type: integer
          format: int32
          description: max redeem count per campaign per user, -1 mean UNLIMITED
        maxSaleCount:
          type: integer
          format: int32
          description: max sale count, -1 mean UNLIMITED
        redeemType:
          type: string
          enum:
          - ITEM
          description: redeem type
        items:
          type: array
          items:
            $ref: '#/components/schemas/redeemableItem'
        boothName:
          type: string
          description: booth name for sale
        createdAt:
          type: string
          format: date-time
          description: time when campaign is created
        updatedAt:
          type: string
          format: date-time
          description: time when campaign is updated
    redeemableItem:
      type: object
      required:
      - itemId
      - itemName
      properties:
        itemId:
          type: string
          description: The redeemable item id
        itemName:
          type: string
          description: The redeemable item name
        quantity:
          type: integer
          format: int32
          description: The redeemable item quantity, 1 for default
        extraSubscriptionDays:
          type: integer
          format: int32
          description: Extra subscription days if the item is a subscription, 0 by
            default
    codeCreate:
      type: object
      properties:
        campaignId:
          type: string
          description: campaign id of the code belong to
        campaignName:
          type: string
          description: the campaign name
        quantity:
          type: integer
          description: quantity of code created
    codeCondition:
      type: object
      properties:
        campaignId:
          type: string
          description: campaign id of the codes belong to
        batchNo:
          type: integer
          description: code batch number
        value:
          type: string
          description: code value
    codeRedemption:
      type: object
      properties:
        userId:
          type: string
          description: user id
        campaignId:
          type: string
          description: the campaign id
        campaignName:
          type: string
          description: the campaign name
        code:
          type: string
          description: the code value
    ticketAcquisition:
      type: object
      properties:
        userId:
          type: string
          description: user id
        boothName:
          type: string
          description: booth name
        count:
          type: integer
          description: purchase count
        orderNo:
          type: string
          description: order no
    keyGroup:
      type: object
      properties:
        id:
          type: string
          description: key group id
        namespace:
          type: string
          description: namespace of this key group
        name:
          type: string
          description: name of key group
        description:
          type: string
          description: description of key group
        tags:
          type: array
          items:
            type: string
          description: tags of key group
        status:
          type: string
          enum:
          - ACTIVE
          - INACTIVE
          description: status of key group
        boothName:
          type: string
          description: booth name for sale
        createdAt:
          type: string
          format: date-time
          description: time when key group was created
        updatedAt:
          type: string
          format: date-time
          description: time when key group was updated
    keyUpload:
      type: object
      properties:
        keyGroupId:
          type: string
          description: key group id
        keyGroupName:
          type: string
          description: the key group name
        quantity:
          type: integer
          description: quantity of key uploaded
    campaignCreatedPayloadData:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/campaign'
      x-uid0: AnonymousSchema1
    campaignUpdatedPayloadData:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/campaign'
        oldCampaign:
          $ref: '#/components/schemas/campaign'
      x-uid0: AnonymousSchema2
    codeCreatedPayloadData:
      type: object
      properties:
        codeCreate:
          $ref: '#/components/schemas/codeCreate'
      x-uid0: AnonymousSchema3
    codeDisabledPayloadData:
      type: object
      properties:
        codeCondition:
          $ref: '#/components/schemas/codeCondition'
      x-uid0: AnonymousSchema4
    codeEnabledPayloadData:
      type: object
      properties:
        codeCondition:
          $ref: '#/components/schemas/codeCondition'
      x-uid0: AnonymousSchema5
    codeBulkDisabledPayloadData:
      type: object
      properties:
        codeCondition:
          $ref: '#/components/schemas/codeCondition'
      x-uid0: AnonymousSchema6
    codeBulkEnabledPayloadData:
      type: object
      properties:
        codeCondition:
          $ref: '#/components/schemas/codeCondition'
      x-uid0: AnonymousSchema7
    codeRedeemedPayloadData:
      type: object
      properties:
        codeRedemption:
          $ref: '#/components/schemas/codeRedemption'
      x-uid0: AnonymousSchema8
    ticketAcquiredPayloadData:
      type: object
      properties:
        ticketAcquisition:
          $ref: '#/components/schemas/ticketAcquisition'
      x-uid0: AnonymousSchema9
    keyGroupCreatedPayloadData:
      type: object
      properties:
        keyGroup:
          $ref: '#/components/schemas/keyGroup'
      x-uid0: AnonymousSchema10
    keyGroupUpdatedPayloadData:
      type: object
      properties:
        keyGroup:
          $ref: '#/components/schemas/keyGroup'
        oldKeyGroup:
          $ref: '#/components/schemas/keyGroup'
      x-uid0: AnonymousSchema11
    keyUploadedPayloadData:
      type: object
      properties:
        keyUpload:
          $ref: '#/components/schemas/keyUpload'
      x-uid0: AnonymousSchema12
  messages:
    campaignCreated:
      name: campaignCreated
      description: message is sent when campaign is created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/campaignCreatedPayloadData'
    campaignUpdated:
      name: campaignUpdated
      description: message is sent when campaign is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/campaignUpdatedPayloadData'
    codeCreated:
      name: codeCreated
      description: message is when redeem codes are created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/codeCreatedPayloadData'
    codeDisabled:
      name: codeDisabled
      description: message is sent when code is disabled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/codeDisabledPayloadData'
    codeEnabled:
      name: codeEnabled
      description: message is sent when redeem code is enabled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/codeEnabledPayloadData'
    codeBulkDisabled:
      name: codeBulkDisabled
      description: message is sent when bulk codes are disabled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/codeBulkDisabledPayloadData'
    codeBulkEnabled:
      name: codeBulkEnabled
      description: message is sent when bulk codes are enabled
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/codeBulkEnabledPayloadData'
    codeRedeemed:
      name: codeRedeemed
      description: message is sent when code is redeemed
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/codeRedeemedPayloadData'
    ticketAcquired:
      name: ticketAcquired
      description: message is sent when ticket is acquired, for example, when user
        buy a code type item
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/ticketAcquiredPayloadData'
    keyGroupCreated:
      name: keyGroupCreated
      description: message is sent when key group is created
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/keyGroupCreatedPayloadData'
    keyGroupUpdated:
      name: keyGroupUpdated
      description: message is sent when key group is updated
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/keyGroupUpdatedPayloadData'
    keyUploaded:
      name: keyUploaded
      description: message is sent when upload keys
      payload:
        type: object
        allOf:
        - $ref: '#/components/schemas/event'
        properties:
          payload:
            $ref: '#/components/schemas/keyUploadedPayloadData'
x-source: Ecommerce/AsyncAPI/campaign.yml
x-proto-package: accelbyte.ecommerce.campaign.v1
x-proto-package-version: v1.0.0
x-proto-package-semver:
- 1
- 0
- 0
x-proto-options:
  csharp_namespace: '"AccelByte.Ecommerce.Campaign"'
  go_package: '"accelbyte.net/ecommerce/campaign"'
  java_multiple_files: 'true'
  java_package: '"net.accelbyte.ecommerce.campaign"'
