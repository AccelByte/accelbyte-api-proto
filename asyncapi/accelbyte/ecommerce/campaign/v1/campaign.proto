// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/campaign.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.campaign.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Campaign";
option go_package = "accelbyte.net/ecommerce/campaign";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.campaign";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/campaign
message Campaign {
    string id = 1 [json_name = "id"];
    string type = 2 [json_name = "type"]; // Allowed values: REDEMPTION
    string namespace = 3 [json_name = "namespace"];
    string name = 4 [json_name = "name"];
    string description = 5 [json_name = "description"];
    repeated string tags = 6 [json_name = "tags"];
    string status = 7 [json_name = "status"]; // Allowed values: ACTIVE, INACTIVE
    string redeem_start = 8 [json_name = "redeemStart"];
    string redeem_end = 9 [json_name = "redeemEnd"];
    int32 max_redeem_count_per_code = 10 [json_name = "maxRedeemCountPerCode"];
    int32 max_redeem_count_per_code_per_user = 11 [json_name = "maxRedeemCountPerCodePerUser"];
    int32 max_redeem_count_per_campaign_per_user = 12 [json_name = "maxRedeemCountPerCampaignPerUser"];
    int32 max_sale_count = 13 [json_name = "maxSaleCount"];
    string redeem_type = 14 [json_name = "redeemType"]; // Allowed values: ITEM
    repeated RedeemableItem items = 15 [json_name = "items"];
    string booth_name = 16 [json_name = "boothName"];
    string created_at = 17 [json_name = "createdAt"];
    string updated_at = 18 [json_name = "updatedAt"];
}

// path: #/components/schemas/redeemableItem
message RedeemableItem {
    string item_id = 1 [json_name = "itemId"];
    string item_name = 2 [json_name = "itemName"];
    int32 quantity = 3 [json_name = "quantity"];
    int32 extra_subscription_days = 4 [json_name = "extraSubscriptionDays"];
}

// path: #/components/schemas/codeCreate
message CodeCreate {
    string campaign_id = 1 [json_name = "campaignId"];
    string campaign_name = 2 [json_name = "campaignName"];
    int64 quantity = 3 [json_name = "quantity"];
}

// path: #/components/schemas/codeCondition
message CodeCondition {
    string campaign_id = 1 [json_name = "campaignId"];
    int64 batch_no = 2 [json_name = "batchNo"];
    string value = 3 [json_name = "value"];
}

// path: #/components/schemas/codeRedemption
message CodeRedemption {
    string user_id = 1 [json_name = "userId"];
    string campaign_id = 2 [json_name = "campaignId"];
    string campaign_name = 3 [json_name = "campaignName"];
    string code = 4 [json_name = "code"];
}

// path: #/components/schemas/ticketAcquisition
message TicketAcquisition {
    string user_id = 1 [json_name = "userId"];
    string booth_name = 2 [json_name = "boothName"];
    int64 count = 3 [json_name = "count"];
    string order_no = 4 [json_name = "orderNo"];
}

// path: #/components/schemas/keyGroup
message KeyGroup {
    string id = 1 [json_name = "id"];
    string namespace = 2 [json_name = "namespace"];
    string name = 3 [json_name = "name"];
    string description = 4 [json_name = "description"];
    repeated string tags = 5 [json_name = "tags"];
    string status = 6 [json_name = "status"]; // Allowed values: ACTIVE, INACTIVE
    string booth_name = 7 [json_name = "boothName"];
    string created_at = 8 [json_name = "createdAt"];
    string updated_at = 9 [json_name = "updatedAt"];
}

// path: #/components/schemas/keyUpload
message KeyUpload {
    string key_group_id = 1 [json_name = "keyGroupId"];
    string key_group_name = 2 [json_name = "keyGroupName"];
    int64 quantity = 3 [json_name = "quantity"];
}

// path: #/components/schemas/campaignCreatedPayloadData
message CampaignCreatedPayloadData { // previously known as 'AnonymousSchema1'
    Campaign campaign = 1 [json_name = "campaign"];
}

// path: #/components/schemas/campaignUpdatedPayloadData
message CampaignUpdatedPayloadData { // previously known as 'AnonymousSchema2'
    Campaign campaign = 1 [json_name = "campaign"];
    Campaign old_campaign = 2 [json_name = "oldCampaign"];
}

// path: #/components/schemas/codeCreatedPayloadData
message CodeCreatedPayloadData { // previously known as 'AnonymousSchema3'
    CodeCreate code_create = 1 [json_name = "codeCreate"];
}

// path: #/components/schemas/codeDisabledPayloadData
message CodeDisabledPayloadData { // previously known as 'AnonymousSchema4'
    CodeCondition code_condition = 1 [json_name = "codeCondition"];
}

// path: #/components/schemas/codeEnabledPayloadData
message CodeEnabledPayloadData { // previously known as 'AnonymousSchema5'
    CodeCondition code_condition = 1 [json_name = "codeCondition"];
}

// path: #/components/schemas/codeBulkDisabledPayloadData
message CodeBulkDisabledPayloadData { // previously known as 'AnonymousSchema6'
    CodeCondition code_condition = 1 [json_name = "codeCondition"];
}

// path: #/components/schemas/codeBulkEnabledPayloadData
message CodeBulkEnabledPayloadData { // previously known as 'AnonymousSchema7'
    CodeCondition code_condition = 1 [json_name = "codeCondition"];
}

// path: #/components/schemas/codeRedeemedPayloadData
message CodeRedeemedPayloadData { // previously known as 'AnonymousSchema8'
    CodeRedemption code_redemption = 1 [json_name = "codeRedemption"];
}

// path: #/components/schemas/ticketAcquiredPayloadData
message TicketAcquiredPayloadData { // previously known as 'AnonymousSchema9'
    TicketAcquisition ticket_acquisition = 1 [json_name = "ticketAcquisition"];
}

// path: #/components/schemas/keyGroupCreatedPayloadData
message KeyGroupCreatedPayloadData { // previously known as 'AnonymousSchema10'
    KeyGroup key_group = 1 [json_name = "keyGroup"];
}

// path: #/components/schemas/keyGroupUpdatedPayloadData
message KeyGroupUpdatedPayloadData { // previously known as 'AnonymousSchema11'
    KeyGroup key_group = 1 [json_name = "keyGroup"];
    KeyGroup old_key_group = 2 [json_name = "oldKeyGroup"];
}

// path: #/components/schemas/keyUploadedPayloadData
message KeyUploadedPayloadData { // previously known as 'AnonymousSchema12'
    KeyUpload key_upload = 1 [json_name = "keyUpload"];
}

// path: #/components/messages/campaignCreated/payload
message CampaignCreated {
    CampaignCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/campaignUpdated/payload
message CampaignUpdated {
    CampaignUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/codeCreated/payload
message CodeCreated {
    CodeCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/codeDisabled/payload
message CodeDisabled {
    CodeDisabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/codeEnabled/payload
message CodeEnabled {
    CodeEnabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/codeBulkDisabled/payload
message CodeBulkDisabled {
    CodeBulkDisabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/codeBulkEnabled/payload
message CodeBulkEnabled {
    CodeBulkEnabledPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/codeRedeemed/payload
message CodeRedeemed {
    CodeRedeemedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/ticketAcquired/payload
message TicketAcquired {
    TicketAcquiredPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/keyGroupCreated/payload
message KeyGroupCreated {
    KeyGroupCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/keyGroupUpdated/payload
message KeyGroupUpdated {
    KeyGroupUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/keyUploaded/payload
message KeyUploaded {
    KeyUploadedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/campaignCreated
message CampaignCreatedMessage {
    CampaignCreated payload = 1;
}

// path: #/components/messages/campaignUpdated
message CampaignUpdatedMessage {
    CampaignUpdated payload = 1;
}

// path: #/components/messages/codeCreated
message CodeCreatedMessage {
    CodeCreated payload = 1;
}

// path: #/components/messages/codeDisabled
message CodeDisabledMessage {
    CodeDisabled payload = 1;
}

// path: #/components/messages/codeEnabled
message CodeEnabledMessage {
    CodeEnabled payload = 1;
}

// path: #/components/messages/codeBulkDisabled
message CodeBulkDisabledMessage {
    CodeBulkDisabled payload = 1;
}

// path: #/components/messages/codeBulkEnabled
message CodeBulkEnabledMessage {
    CodeBulkEnabled payload = 1;
}

// path: #/components/messages/codeRedeemed
message CodeRedeemedMessage {
    CodeRedeemed payload = 1;
}

// path: #/components/messages/ticketAcquired
message TicketAcquiredMessage {
    TicketAcquired payload = 1;
}

// path: #/components/messages/keyGroupCreated
message KeyGroupCreatedMessage {
    KeyGroupCreated payload = 1;
}

// path: #/components/messages/keyGroupUpdated
message KeyGroupUpdatedMessage {
    KeyGroupUpdated payload = 1;
}

// path: #/components/messages/keyUploaded
message KeyUploadedMessage {
    KeyUploaded payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/campaignManagement/publish/message
message CampaignManagementPublish {
    oneof payload {
        CampaignCreatedMessage variant0 = 1;
        CampaignUpdatedMessage variant1 = 2;
        CodeCreatedMessage variant2 = 3;
        CodeDisabledMessage variant3 = 4;
        CodeEnabledMessage variant4 = 5;
        CodeBulkDisabledMessage variant5 = 6;
        CodeBulkEnabledMessage variant6 = 7;
    }
}

// path: #/channels/keyGroupManagement/publish/message
message KeyGroupManagementPublish {
    oneof payload {
        KeyGroupCreatedMessage variant0 = 1;
        KeyGroupUpdatedMessage variant1 = 2;
        KeyUploadedMessage variant2 = 3;
    }
}


// --- service ---


// Publishes a CampaignCreated to the Campaign Management channel. (oneOf variant) (campaignManagement CampaignCreated)
service CampaignManagementCampaignCreatedService {
    rpc OnMessage(CampaignCreated) returns (google.protobuf.Empty);
}

// Publishes a CampaignUpdated to the Campaign Management channel. (oneOf variant) (campaignManagement CampaignUpdated)
service CampaignManagementCampaignUpdatedService {
    rpc OnMessage(CampaignUpdated) returns (google.protobuf.Empty);
}

// Publishes a CodeCreated to the Campaign Management channel. (oneOf variant) (campaignManagement CodeCreated)
service CampaignManagementCodeCreatedService {
    rpc OnMessage(CodeCreated) returns (google.protobuf.Empty);
}

// Publishes a CodeDisabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeDisabled)
service CampaignManagementCodeDisabledService {
    rpc OnMessage(CodeDisabled) returns (google.protobuf.Empty);
}

// Publishes a CodeEnabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeEnabled)
service CampaignManagementCodeEnabledService {
    rpc OnMessage(CodeEnabled) returns (google.protobuf.Empty);
}

// Publishes a CodeBulkDisabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeBulkDisabled)
service CampaignManagementCodeBulkDisabledService {
    rpc OnMessage(CodeBulkDisabled) returns (google.protobuf.Empty);
}

// Publishes a CodeBulkEnabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeBulkEnabled)
service CampaignManagementCodeBulkEnabledService {
    rpc OnMessage(CodeBulkEnabled) returns (google.protobuf.Empty);
}

// Publishes a KeyGroupCreated to the Key Group Management channel. (oneOf variant) (keyGroupManagement KeyGroupCreated)
service KeyGroupManagementKeyGroupCreatedService {
    rpc OnMessage(KeyGroupCreated) returns (google.protobuf.Empty);
}

// Publishes a KeyGroupUpdated to the Key Group Management channel. (oneOf variant) (keyGroupManagement KeyGroupUpdated)
service KeyGroupManagementKeyGroupUpdatedService {
    rpc OnMessage(KeyGroupUpdated) returns (google.protobuf.Empty);
}

// Publishes a KeyUploaded to the Key Group Management channel. (oneOf variant) (keyGroupManagement KeyUploaded)
service KeyGroupManagementKeyUploadedService {
    rpc OnMessage(KeyUploaded) returns (google.protobuf.Empty);
}

// Publishes a message to the Code Redemption channel. (codeRedemption CodeRedeemed)
service CodeRedemptionCodeRedeemedService {
    rpc OnMessage(CodeRedeemed) returns (google.protobuf.Empty);
}

// Publishes a message to the Ticket Sale channel. (ticketSale TicketAcquired)
service TicketSaleTicketAcquiredService {
    rpc OnMessage(TicketAcquired) returns (google.protobuf.Empty);
}