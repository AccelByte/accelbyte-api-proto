// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/campaign.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.campaign.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Campaign";
option go_package = "accelbyte.net/ecommerce/campaign";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.campaign";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/campaign
message Campaign {
    string id = 1;
    enum TypeEnum {
        TYPEENUM_REDEMPTION = 0;
    }
    TypeEnum type = 2;
    string namespace = 3;
    string name = 4;
    string description = 5;
    repeated string tags = 6;
    enum StatusEnum {
        STATUSENUM_ACTIVE = 0;
        STATUSENUM_INACTIVE = 1;
    }
    StatusEnum status = 7;
    string redeemStart = 8;
    string redeemEnd = 9;
    int32 maxRedeemCountPerCode = 10;
    int32 maxRedeemCountPerCodePerUser = 11;
    int32 maxRedeemCountPerCampaignPerUser = 12;
    int32 maxSaleCount = 13;
    enum RedeemTypeEnum {
        REDEEMTYPEENUM_ITEM = 0;
    }
    RedeemTypeEnum redeemType = 14;
    repeated RedeemableItem items = 15;
    string boothName = 16;
    string createdAt = 17;
    string updatedAt = 18;
}

// path: #/components/schemas/redeemableItem
message RedeemableItem {
    string itemId = 1;
    string itemName = 2;
    int32 quantity = 3;
    int32 extraSubscriptionDays = 4;
}

// path: #/components/schemas/codeCreate
message CodeCreate {
    string campaignId = 1;
    string campaignName = 2;
    int64 quantity = 3;
}

// path: #/components/schemas/codeCondition
message CodeCondition {
    string campaignId = 1;
    int64 batchNo = 2;
    string value = 3;
}

// path: #/components/schemas/codeRedemption
message CodeRedemption {
    string userId = 1;
    string campaignId = 2;
    string campaignName = 3;
    string code = 4;
}

// path: #/components/schemas/ticketAcquisition
message TicketAcquisition {
    string userId = 1;
    string boothName = 2;
    int64 count = 3;
    string orderNo = 4;
}

// path: #/components/schemas/keyGroup
message KeyGroup {
    string id = 1;
    string namespace = 2;
    string name = 3;
    string description = 4;
    repeated string tags = 5;
    enum StatusEnum {
        STATUSENUM_ACTIVE = 0;
        STATUSENUM_INACTIVE = 1;
    }
    StatusEnum status = 6;
    string boothName = 7;
    string createdAt = 8;
    string updatedAt = 9;
}

// path: #/components/schemas/keyUpload
message KeyUpload {
    string keyGroupId = 1;
    string keyGroupName = 2;
    int64 quantity = 3;
}

// path: #/components/messages/campaignCreated/payload/properties/payload
message AnonymousSchema1 {
    Campaign campaign = 1;
}

// path: #/components/messages/campaignCreated/payload
message CampaignCreated {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/campaignUpdated/payload/properties/payload
message AnonymousSchema2 {
    Campaign campaign = 1;
    Campaign oldCampaign = 2;
}

// path: #/components/messages/campaignUpdated/payload
message CampaignUpdated {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/codeCreated/payload/properties/payload
message AnonymousSchema3 {
    CodeCreate codeCreate = 1;
}

// path: #/components/messages/codeCreated/payload
message CodeCreated {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/codeDisabled/payload/properties/payload
message AnonymousSchema4 {
    CodeCondition codeCondition = 1;
}

// path: #/components/messages/codeDisabled/payload
message CodeDisabled {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/codeEnabled/payload/properties/payload
message AnonymousSchema5 {
    CodeCondition codeCondition = 1;
}

// path: #/components/messages/codeEnabled/payload
message CodeEnabled {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/codeBulkDisabled/payload/properties/payload
message AnonymousSchema6 {
    CodeCondition codeCondition = 1;
}

// path: #/components/messages/codeBulkDisabled/payload
message CodeBulkDisabled {
    AnonymousSchema6 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/codeBulkEnabled/payload/properties/payload
message AnonymousSchema7 {
    CodeCondition codeCondition = 1;
}

// path: #/components/messages/codeBulkEnabled/payload
message CodeBulkEnabled {
    AnonymousSchema7 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/codeRedeemed/payload/properties/payload
message AnonymousSchema8 {
    CodeRedemption codeRedemption = 1;
}

// path: #/components/messages/codeRedeemed/payload
message CodeRedeemed {
    AnonymousSchema8 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/ticketAcquired/payload/properties/payload
message AnonymousSchema9 {
    TicketAcquisition ticketAcquisition = 1;
}

// path: #/components/messages/ticketAcquired/payload
message TicketAcquired {
    AnonymousSchema9 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/keyGroupCreated/payload/properties/payload
message AnonymousSchema10 {
    KeyGroup keyGroup = 1;
}

// path: #/components/messages/keyGroupCreated/payload
message KeyGroupCreated {
    AnonymousSchema10 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/keyGroupUpdated/payload/properties/payload
message AnonymousSchema11 {
    KeyGroup keyGroup = 1;
    KeyGroup oldKeyGroup = 2;
}

// path: #/components/messages/keyGroupUpdated/payload
message KeyGroupUpdated {
    AnonymousSchema11 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/keyUploaded/payload/properties/payload
message AnonymousSchema12 {
    KeyUpload keyUpload = 1;
}

// path: #/components/messages/keyUploaded/payload
message KeyUploaded {
    AnonymousSchema12 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/campaignCreated
message CampaignCreatedMessage {
    CampaignCreated payload = 1;
}

// path: #/components/messages/campaignUpdated
message CampaignUpdatedMessage {
    CampaignUpdated payload = 1;
}

// path: #/components/messages/codeCreated
message CodeCreatedMessage {
    CodeCreated payload = 1;
}

// path: #/components/messages/codeDisabled
message CodeDisabledMessage {
    CodeDisabled payload = 1;
}

// path: #/components/messages/codeEnabled
message CodeEnabledMessage {
    CodeEnabled payload = 1;
}

// path: #/components/messages/codeBulkDisabled
message CodeBulkDisabledMessage {
    CodeBulkDisabled payload = 1;
}

// path: #/components/messages/codeBulkEnabled
message CodeBulkEnabledMessage {
    CodeBulkEnabled payload = 1;
}

// path: #/components/messages/codeRedeemed
message CodeRedeemedMessage {
    CodeRedeemed payload = 1;
}

// path: #/components/messages/ticketAcquired
message TicketAcquiredMessage {
    TicketAcquired payload = 1;
}

// path: #/components/messages/keyGroupCreated
message KeyGroupCreatedMessage {
    KeyGroupCreated payload = 1;
}

// path: #/components/messages/keyGroupUpdated
message KeyGroupUpdatedMessage {
    KeyGroupUpdated payload = 1;
}

// path: #/components/messages/keyUploaded
message KeyUploadedMessage {
    KeyUploaded payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/campaignManagement/publish/message
message CampaignManagementPublish {
    oneof payload {
        CampaignCreated variant0 = 1;
        CampaignUpdated variant1 = 2;
        CodeCreated variant2 = 3;
        CodeDisabled variant3 = 4;
        CodeEnabled variant4 = 5;
        CodeBulkDisabled variant5 = 6;
        CodeBulkEnabled variant6 = 7;
    }
}

// path: #/channels/keyGroupManagement/publish/message
message KeyGroupManagementPublish {
    oneof payload {
        KeyGroupCreated variant0 = 1;
        KeyGroupUpdated variant1 = 2;
        KeyUploaded variant2 = 3;
    }
}

// path: #/channels/codeRedemption/publish/message
message CodeRedemptionPublish {
    oneof payload {
        CodeRedeemed variant0 = 1;
    }
}

// path: #/channels/ticketSale/publish/message
message TicketSalePublish {
    oneof payload {
        TicketAcquired variant0 = 1;
    }
}


// --- service ---


// Publishes a CampaignCreated to the Campaign Management channel. (oneOf variant) (campaignManagement CampaignCreated)
service CampaignManagementCampaignCreatedService {
    rpc OnMessage(CampaignCreated) returns (google.protobuf.Empty);
}

// Publishes a CampaignUpdated to the Campaign Management channel. (oneOf variant) (campaignManagement CampaignUpdated)
service CampaignManagementCampaignUpdatedService {
    rpc OnMessage(CampaignUpdated) returns (google.protobuf.Empty);
}

// Publishes a CodeCreated to the Campaign Management channel. (oneOf variant) (campaignManagement CodeCreated)
service CampaignManagementCodeCreatedService {
    rpc OnMessage(CodeCreated) returns (google.protobuf.Empty);
}

// Publishes a CodeDisabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeDisabled)
service CampaignManagementCodeDisabledService {
    rpc OnMessage(CodeDisabled) returns (google.protobuf.Empty);
}

// Publishes a CodeEnabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeEnabled)
service CampaignManagementCodeEnabledService {
    rpc OnMessage(CodeEnabled) returns (google.protobuf.Empty);
}

// Publishes a CodeBulkDisabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeBulkDisabled)
service CampaignManagementCodeBulkDisabledService {
    rpc OnMessage(CodeBulkDisabled) returns (google.protobuf.Empty);
}

// Publishes a CodeBulkEnabled to the Campaign Management channel. (oneOf variant) (campaignManagement CodeBulkEnabled)
service CampaignManagementCodeBulkEnabledService {
    rpc OnMessage(CodeBulkEnabled) returns (google.protobuf.Empty);
}

// Publishes a KeyGroupCreated to the Key Group Management channel. (oneOf variant) (keyGroupManagement KeyGroupCreated)
service KeyGroupManagementKeyGroupCreatedService {
    rpc OnMessage(KeyGroupCreated) returns (google.protobuf.Empty);
}

// Publishes a KeyGroupUpdated to the Key Group Management channel. (oneOf variant) (keyGroupManagement KeyGroupUpdated)
service KeyGroupManagementKeyGroupUpdatedService {
    rpc OnMessage(KeyGroupUpdated) returns (google.protobuf.Empty);
}

// Publishes a KeyUploaded to the Key Group Management channel. (oneOf variant) (keyGroupManagement KeyUploaded)
service KeyGroupManagementKeyUploadedService {
    rpc OnMessage(KeyUploaded) returns (google.protobuf.Empty);
}

// Publishes a CodeRedeemed to the Code Redemption channel. (oneOf variant) (codeRedemption CodeRedeemed)
service CodeRedemptionCodeRedeemedService {
    rpc OnMessage(CodeRedeemed) returns (google.protobuf.Empty);
}

// Publishes a TicketAcquired to the Ticket Sale channel. (oneOf variant) (ticketSale TicketAcquired)
service TicketSaleTicketAcquiredService {
    rpc OnMessage(TicketAcquired) returns (google.protobuf.Empty);
}
