// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/fulfillment.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.fulfillment.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Fulfillment";
option go_package = "accelbyte.net/ecommerce/fulfillment";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.fulfillment";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/fulfillmentError
message FulfillmentError {
    int32 httpStatus = 1;
    int32 code = 2;
    string message = 3;
}

// path: #/components/schemas/entitlementSummary
message EntitlementSummary {
    string id = 1;
    string namespace = 2;
    string userId = 3;
    // Allowed values: APP, ENTITLEMENT, CODE, SUBSCRIPTION, MEDIA, OPTIONBOX, LOOTBOX
    string clazz = 4;
    // Allowed values: DURABLE, CONSUMABLE
    string type = 5;
    bool stackable = 6;
    int32 stackedUseCount = 7;
    string storeId = 8;
    string itemId = 9;
    string grantedCode = 10;
    string createdAt = 11;
    string updatedAt = 12;
    string startDate = 13;
    string endDate = 14;
}

// path: #/components/schemas/creditSummary
message CreditSummary {
    string walletId = 1;
    string namespace = 2;
    string userId = 3;
    int64 amount = 4;
}

// path: #/components/schemas/fulfillmentItem
message FulfillmentItem {
    string itemId = 1;
    string itemName = 2;
    int32 quantity = 3;
    string storeId = 4;
    string itemSku = 5;
    int32 extraSubscriptionDays = 6;
    string itemType = 7;
}

// path: #/components/schemas/fulfillment/properties/metadata/additionalProperties
message AnonymousSchema1 {
}

// path: #/components/schemas/fulfillment/properties/metadata
message AnonymousSchema2 {
}

// path: #/components/schemas/fulfillment
message Fulfillment {
    string userId = 1;
    string orderNo = 2;
    string code = 3;
    // Allowed values: PURCHASE, IAP, PROMOTION, ACHIEVEMENT, REFERRAL_BONUS, REDEEM_CODE, REWARD, GIFT, DLC, OTHER
    string source = 4;
    repeated FulfillmentItem fulfillItems = 5;
    repeated string grantedItemIds = 6;
    repeated EntitlementSummary entitlementSummaries = 7;
    repeated CreditSummary creditSummaries = 8;
    string status = 9;
    FulfillmentError fulfillmentError = 10;
    AnonymousSchema2 metadata = 11;
}

// path: #/components/messages/fulfillmentCompleted/payload/properties/payload
message AnonymousSchema3 {
    Fulfillment fulfillment = 1;
}

// path: #/components/messages/fulfillmentCompleted/payload
message FulfillmentCompleted {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/fulfillmentCompleted
message FulfillmentCompletedMessage {
    FulfillmentCompleted payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---


// --- service ---


// Publishes a message to the Fulfillment channel. (fulfillment FulfillmentCompleted)
service FulfillmentFulfillmentCompletedService {
    rpc OnMessage(FulfillmentCompleted) returns (google.protobuf.Empty);
}