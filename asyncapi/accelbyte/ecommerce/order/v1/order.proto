// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/order.yml (0.0.1)
// hash: 1aeb8c915acaa94e321b129462d0a16b64434587

syntax = "proto3";

package accelbyte.ecommerce.order.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---


// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/currencySummary
message CurrencySummary {
    string currencyCode = 1;
    string currencySymbol = 2;
    string currencyType = 3;
    string namespace = 4;
    int32 decimals = 5;
}

// path: #/components/schemas/order
message Order {
    string orderNo = 1;
    string paymentOrderNo = 2;
    string namespace = 3;
    string userId = 4;
    string itemId = 5;
    string itemName = 6;
    bool sandbox = 7;
    int32 quantity = 8;
    int32 price = 9;
    int32 discountedPrice = 10;
    string paymentProvider = 11;
    CurrencySummary currency = 12;
    string region = 13;
    string language = 14;
    string status = 15;
    string statusReason = 16;
    string previousStatus = 17;
}

// path: #/components/messages/orderCreated/payload/properties/payload
message AnonymousSchema1 {
    Order order = 1;
}

// path: #/components/messages/orderCreated/payload
message OrderCreatedMessage {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderCancelled/payload/properties/payload
message AnonymousSchema2 {
    Order order = 1;
}

// path: #/components/messages/orderCancelled/payload
message OrderCancelledMessage {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderRefundRequested/payload/properties/payload
message AnonymousSchema3 {
    Order order = 1;
}

// path: #/components/messages/orderRefundRequested/payload
message OrderRefundRequestedMessage {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderStatusUpdated/payload/properties/payload
message AnonymousSchema4 {
    Order order = 1;
}

// path: #/components/messages/orderStatusUpdated/payload
message OrderStatusUpdatedMessage {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderFulfilled/payload/properties/payload
message AnonymousSchema5 {
    Order order = 1;
}

// path: #/components/messages/orderFulfilled/payload
message OrderFulfilledMessage {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderFulfillFailed/payload/properties/payload
message AnonymousSchema6 {
    Order order = 1;
}

// path: #/components/messages/orderFulfillFailed/payload
message OrderFulfillFailedMessage {
    AnonymousSchema6 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderCharged/payload/properties/payload
message AnonymousSchema7 {
    Order order = 1;
}

// path: #/components/messages/orderCharged/payload
message OrderChargedMessage {
    AnonymousSchema7 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderRefunded/payload/properties/payload
message AnonymousSchema8 {
    Order order = 1;
}

// path: #/components/messages/orderRefunded/payload
message OrderRefundedMessage {
    AnonymousSchema8 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderRefundFailed/payload/properties/payload
message AnonymousSchema9 {
    Order order = 1;
}

// path: #/components/messages/orderRefundFailed/payload
message OrderRefundFailedMessage {
    AnonymousSchema9 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderChargeback/payload/properties/payload
message AnonymousSchema10 {
    Order order = 1;
}

// path: #/components/messages/orderChargeback/payload
message OrderChargebackMessage {
    AnonymousSchema10 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderChargebackReversed/payload/properties/payload
message AnonymousSchema11 {
    Order order = 1;
}

// path: #/components/messages/orderChargebackReversed/payload
message OrderChargebackReversedMessage {
    AnonymousSchema11 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderExpired/payload/properties/payload
message AnonymousSchema12 {
    Order order = 1;
}

// path: #/components/messages/orderExpired/payload
message OrderExpiredMessage {
    AnonymousSchema12 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/orderProcessing/publish/message
message OrderProcessingPublishMessage {
    oneof payload {
        OrderCreatedMessage variant0 = 1;
        OrderCancelledMessage variant1 = 2;
        OrderFulfilledMessage variant2 = 3;
        OrderFulfillFailedMessage variant3 = 4;
        OrderChargedMessage variant4 = 5;
        OrderRefundedMessage variant5 = 6;
        OrderRefundRequestedMessage variant6 = 7;
        OrderRefundFailedMessage variant7 = 8;
        OrderChargebackMessage variant8 = 9;
        OrderChargebackReversedMessage variant9 = 10;
        OrderExpiredMessage variant10 = 11;
        OrderStatusUpdatedMessage variant11 = 12;
    }
}


// --- service ---

service AsyncAPIForJusticeOrderService {
    // Order Processing Channel

    // Publishes a message to the Order Processing channel.
    rpc PublishToOrderProcessingChannel(OrderProcessingPublishMessage) returns (google.protobuf.Empty);
}
