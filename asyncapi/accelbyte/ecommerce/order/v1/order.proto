// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Ecommerce/AsyncAPI/order.yml (0.0.1)

syntax = "proto3";

package accelbyte.ecommerce.order.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.Ecommerce.Order";
option go_package = "accelbyte.net/ecommerce/order";
option java_multiple_files = true;
option java_package = "net.accelbyte.ecommerce.order";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/currencySummary
message CurrencySummary {
    string currencyCode = 1;
    string currencySymbol = 2;
    enum CurrencyTypeEnum {
        CURRENCYTYPEENUM_REAL = 0;
        CURRENCYTYPEENUM_VIRTUAL = 1;
    }
    CurrencyTypeEnum currencyType = 3;
    string namespace = 4;
    int32 decimals = 5;
}

// path: #/components/schemas/order
message Order {
    string orderNo = 1;
    string paymentOrderNo = 2;
    string namespace = 3;
    string userId = 4;
    string itemId = 5;
    string itemName = 6;
    bool sandbox = 7;
    int32 quantity = 8;
    int32 price = 9;
    int32 discountedPrice = 10;
    string paymentProvider = 11;
    CurrencySummary currency = 12;
    string region = 13;
    string language = 14;
    string status = 15;
    string statusReason = 16;
    string previousStatus = 17;
}

// path: #/components/messages/orderCreated/payload/properties/payload
message AnonymousSchema1 {
    Order order = 1;
}

// path: #/components/messages/orderCreated/payload
message OrderCreatedMessage {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderCancelled/payload/properties/payload
message AnonymousSchema2 {
    Order order = 1;
}

// path: #/components/messages/orderCancelled/payload
message OrderCancelledMessage {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderRefundRequested/payload/properties/payload
message AnonymousSchema3 {
    Order order = 1;
}

// path: #/components/messages/orderRefundRequested/payload
message OrderRefundRequestedMessage {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderStatusUpdated/payload/properties/payload
message AnonymousSchema4 {
    Order order = 1;
}

// path: #/components/messages/orderStatusUpdated/payload
message OrderStatusUpdatedMessage {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderFulfilled/payload/properties/payload
message AnonymousSchema5 {
    Order order = 1;
}

// path: #/components/messages/orderFulfilled/payload
message OrderFulfilledMessage {
    AnonymousSchema5 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderFulfillFailed/payload/properties/payload
message AnonymousSchema6 {
    Order order = 1;
}

// path: #/components/messages/orderFulfillFailed/payload
message OrderFulfillFailedMessage {
    AnonymousSchema6 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderCharged/payload/properties/payload
message AnonymousSchema7 {
    Order order = 1;
}

// path: #/components/messages/orderCharged/payload
message OrderChargedMessage {
    AnonymousSchema7 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderRefunded/payload/properties/payload
message AnonymousSchema8 {
    Order order = 1;
}

// path: #/components/messages/orderRefunded/payload
message OrderRefundedMessage {
    AnonymousSchema8 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderRefundFailed/payload/properties/payload
message AnonymousSchema9 {
    Order order = 1;
}

// path: #/components/messages/orderRefundFailed/payload
message OrderRefundFailedMessage {
    AnonymousSchema9 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderChargeback/payload/properties/payload
message AnonymousSchema10 {
    Order order = 1;
}

// path: #/components/messages/orderChargeback/payload
message OrderChargebackMessage {
    AnonymousSchema10 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderChargebackReversed/payload/properties/payload
message AnonymousSchema11 {
    Order order = 1;
}

// path: #/components/messages/orderChargebackReversed/payload
message OrderChargebackReversedMessage {
    AnonymousSchema11 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/orderExpired/payload/properties/payload
message AnonymousSchema12 {
    Order order = 1;
}

// path: #/components/messages/orderExpired/payload
message OrderExpiredMessage {
    AnonymousSchema12 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/orderCreated
message OrderCreated {
    OrderCreatedMessage payload = 1;
}

// path: #/components/messages/orderCancelled
message OrderCancelled {
    OrderCancelledMessage payload = 1;
}

// path: #/components/messages/orderRefundRequested
message OrderRefundRequested {
    OrderRefundRequestedMessage payload = 1;
}

// path: #/components/messages/orderStatusUpdated
message OrderStatusUpdated {
    OrderStatusUpdatedMessage payload = 1;
}

// path: #/components/messages/orderFulfilled
message OrderFulfilled {
    OrderFulfilledMessage payload = 1;
}

// path: #/components/messages/orderFulfillFailed
message OrderFulfillFailed {
    OrderFulfillFailedMessage payload = 1;
}

// path: #/components/messages/orderCharged
message OrderCharged {
    OrderChargedMessage payload = 1;
}

// path: #/components/messages/orderRefunded
message OrderRefunded {
    OrderRefundedMessage payload = 1;
}

// path: #/components/messages/orderRefundFailed
message OrderRefundFailed {
    OrderRefundFailedMessage payload = 1;
}

// path: #/components/messages/orderChargeback
message OrderChargeback {
    OrderChargebackMessage payload = 1;
}

// path: #/components/messages/orderChargebackReversed
message OrderChargebackReversed {
    OrderChargebackReversedMessage payload = 1;
}

// path: #/components/messages/orderExpired
message OrderExpired {
    OrderExpiredMessage payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/orderProcessing/publish/message
message OrderProcessingPublish {
    oneof payload {
        OrderCreated variant0 = 1;
        OrderCancelled variant1 = 2;
        OrderFulfilled variant2 = 3;
        OrderFulfillFailed variant3 = 4;
        OrderCharged variant4 = 5;
        OrderRefunded variant5 = 6;
        OrderRefundRequested variant6 = 7;
        OrderRefundFailed variant7 = 8;
        OrderChargeback variant8 = 9;
        OrderChargebackReversed variant9 = 10;
        OrderExpired variant10 = 11;
        OrderStatusUpdated variant11 = 12;
    }
}


// --- service ---

service AsyncAPIForJusticeOrderService {
    // Order Processing Channel

    // Publishes a message to the Order Processing channel.
    rpc PublishToOrderProcessingChannel(OrderProcessingPublish) returns (google.protobuf.Empty);

    // Publishes a OrderCreatedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderCreatedMessageToOrderProcessingChannel(OrderCreatedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderCancelledMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderCancelledMessageToOrderProcessingChannel(OrderCancelledMessage) returns (google.protobuf.Empty);

    // Publishes a OrderFulfilledMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderFulfilledMessageToOrderProcessingChannel(OrderFulfilledMessage) returns (google.protobuf.Empty);

    // Publishes a OrderFulfillFailedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderFulfillFailedMessageToOrderProcessingChannel(OrderFulfillFailedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderChargedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderChargedMessageToOrderProcessingChannel(OrderChargedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderRefundedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderRefundedMessageToOrderProcessingChannel(OrderRefundedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderRefundRequestedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderRefundRequestedMessageToOrderProcessingChannel(OrderRefundRequestedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderRefundFailedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderRefundFailedMessageToOrderProcessingChannel(OrderRefundFailedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderChargebackMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderChargebackMessageToOrderProcessingChannel(OrderChargebackMessage) returns (google.protobuf.Empty);

    // Publishes a OrderChargebackReversedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderChargebackReversedMessageToOrderProcessingChannel(OrderChargebackReversedMessage) returns (google.protobuf.Empty);

    // Publishes a OrderExpiredMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderExpiredMessageToOrderProcessingChannel(OrderExpiredMessage) returns (google.protobuf.Empty);

    // Publishes a OrderStatusUpdatedMessage to the Order Processing channel. (oneOf variant)
    rpc PublishOrderStatusUpdatedMessageToOrderProcessingChannel(OrderStatusUpdatedMessage) returns (google.protobuf.Empty);
}
