// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Reporting/AsyncAPI/reporting.yaml (0.1.0)

syntax = "proto3";

package accelbyte.reporting.reporting.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Reporting.Reporting";
option go_package = "accelbyte.net/reporting/reporting";
option java_multiple_files = true;
option java_package = "net.accelbyte.reporting.reporting";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/autoHideContent
message AutoHideContent {
    string namespace = 1 [json_name = "namespace"];
    string user_id = 2 [json_name = "userId"];
    string content_id = 3 [json_name = "contentId"];
}

// path: #/components/schemas/reportContent
message ReportContent {
    string category = 1 [json_name = "Category"];
    string comment = 2 [json_name = "Comment"];
    string created_at = 3 [json_name = "CreatedAt"];
    string extension_category = 4 [json_name = "ExtensionCategory"];
    string id = 5 [json_name = "ID"];
    string namespace = 6 [json_name = "Namespace"];
    string object_id = 7 [json_name = "ObjectID"];
    string object_type = 8 [json_name = "ObjectType"];
    string reason = 9 [json_name = "Reason"];
    string reporter_id = 10 [json_name = "ReporterID"];
    string ticket_id = 11 [json_name = "TicketID"];
    string updated_at = 12 [json_name = "UpdatedAt"];
    string user_id = 13 [json_name = "UserID"];
}

// path: #/components/schemas/hideContentPayloadData
message HideContentPayloadData { // previously known as 'AnonymousSchema1'
    AutoHideContent auto_hide_content = 1 [json_name = "autoHideContent"];
}

// path: #/components/messages/hideContent/payload
message HideContent {
    HideContentPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/userReport/payload
message UserReport {
    ReportContent payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/adminReport/payload
message AdminReport {
    ReportContent payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/hideContent
message HideContentMessage {
    HideContent payload = 1;
}

// path: #/components/messages/userReport
message UserReportMessage {
    UserReport payload = 1;
}

// path: #/components/messages/adminReport
message AdminReportMessage {
    AdminReport payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/report/publish/message
message ReportPublish {
    oneof payload {
        UserReportMessage variant0 = 1;
        AdminReportMessage variant1 = 2;
    }
}


// --- service ---


// Publishes a message to the Auto Moderation channel. (autoModeration HideContent)
service AutoModerationHideContentService {
    rpc OnMessage(HideContent) returns (google.protobuf.Empty);
}

// Publishes a UserReport to the Report channel. (oneOf variant) (report UserReport)
service ReportUserReportService {
    rpc OnMessage(UserReport) returns (google.protobuf.Empty);
}

// Publishes a AdminReport to the Report channel. (oneOf variant) (report AdminReport)
service ReportAdminReportService {
    rpc OnMessage(AdminReport) returns (google.protobuf.Empty);
}