// Copyright (c) 2023 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: SeasonPass/AsyncAPI/seasonpass.yml (0.1.0)

syntax = "proto3";

package accelbyte.season_pass.seasonpass.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/empty.proto";


// --- options ---

option csharp_namespace = "AccelByte.SeasonPass.Seasonpass";
option go_package = "accelbyte.net/seasonPass/seasonpass";
option java_multiple_files = true;
option java_package = "net.accelbyte.seasonPass.seasonpass";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1;
    int64 version = 2;
    string name = 3;
    string namespace = 4;
    string parentNamespace = 5;
    string timestamp = 6;
    string clientId = 7;
    string userId = 8;
    string traceId = 9;
    string sessionId = 10;
}

// path: #/components/schemas/userSeason
message UserSeason {
    string id = 1;
    string namespace = 2;
    string userId = 3;
    string seasonId = 4;
    repeated string enrolledPasses = 5;
    string enrolledAt = 6;
    int64 currentTierIndex = 7;
    int64 lastTierIndex = 8;
    int64 requiredExp = 9;
    int64 currentExp = 10;
    bool cleared = 11;
}

// path: #/components/schemas/userSeasonReward
message UserSeasonReward {
    string namespace = 1;
    string userId = 2;
    string seasonId = 3;
    string tierIndex = 4;
    string passCode = 5;
    string rewardCode = 6;
}

// path: #/components/messages/userSeasonPassChanged/payload/properties/payload
message AnonymousSchema1 {
    UserSeason userSeason = 1;
    repeated string grantedPasses = 2;
}

// path: #/components/messages/userSeasonPassChanged/payload
message UserSeasonPassChanged {
    AnonymousSchema1 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/userSeasonTierUp/payload/properties/payload
message AnonymousSchema2 {
    UserSeason userSeason = 1;
    int64 grantedPasses = 2;
}

// path: #/components/messages/userSeasonTierUp/payload
message UserSeasonTierUp {
    AnonymousSchema2 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/userSeasonTierCleared/payload/properties/payload
message AnonymousSchema3 {
    UserSeason userSeason = 1;
}

// path: #/components/messages/userSeasonTierCleared/payload
message UserSeasonTierCleared {
    AnonymousSchema3 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}

// path: #/components/messages/userSeasonRewardRewarded/payload/properties/payload
message AnonymousSchema4 {
    UserSeasonReward userSeasonReward = 1;
}

// path: #/components/messages/userSeasonRewardRewarded/payload
message UserSeasonRewardRewarded {
    AnonymousSchema4 payload = 1;

    // allOf(#/components/schemas/event)
    string id = 2;
    int64 version = 3;
    string name = 4;
    string namespace = 5;
    string parentNamespace = 6;
    string timestamp = 7;
    string clientId = 8;
    string userId = 9;
    string traceId = 10;
    string sessionId = 11;
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/userSeasonPassChanged
message UserSeasonPassChangedMessage {
    UserSeasonPassChanged payload = 1;
}

// path: #/components/messages/userSeasonTierUp
message UserSeasonTierUpMessage {
    UserSeasonTierUp payload = 1;
}

// path: #/components/messages/userSeasonTierCleared
message UserSeasonTierClearedMessage {
    UserSeasonTierCleared payload = 1;
}

// path: #/components/messages/userSeasonRewardRewarded
message UserSeasonRewardRewardedMessage {
    UserSeasonRewardRewarded payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/userSeason/publish/message
message UserSeasonPublish {
    oneof payload {
        UserSeasonPassChanged variant0 = 1;
        UserSeasonTierUp variant1 = 2;
        UserSeasonTierCleared variant2 = 3;
        UserSeasonRewardRewarded variant3 = 4;
    }
}


// --- service ---


// Publishes a UserSeasonPassChanged to the User Season channel. (oneOf variant) (userSeason UserSeasonPassChanged)
service UserSeasonUserSeasonPassChangedService {
    rpc OnMessage(UserSeasonPassChanged) returns (google.protobuf.Empty);
}

// Publishes a UserSeasonTierUp to the User Season channel. (oneOf variant) (userSeason UserSeasonTierUp)
service UserSeasonUserSeasonTierUpService {
    rpc OnMessage(UserSeasonTierUp) returns (google.protobuf.Empty);
}

// Publishes a UserSeasonTierCleared to the User Season channel. (oneOf variant) (userSeason UserSeasonTierCleared)
service UserSeasonUserSeasonTierClearedService {
    rpc OnMessage(UserSeasonTierCleared) returns (google.protobuf.Empty);
}

// Publishes a UserSeasonRewardRewarded to the User Season channel. (oneOf variant) (userSeason UserSeasonRewardRewarded)
service UserSeasonUserSeasonRewardRewardedService {
    rpc OnMessage(UserSeasonRewardRewarded) returns (google.protobuf.Empty);
}
