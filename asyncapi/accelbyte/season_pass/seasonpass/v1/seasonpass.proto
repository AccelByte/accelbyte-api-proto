// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: SeasonPass/AsyncAPI/seasonpass.yml (0.1.0)

syntax = "proto3";

package accelbyte.season_pass.seasonpass.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.SeasonPass.Seasonpass";
option go_package = "accelbyte.net/seasonPass/seasonpass";
option java_multiple_files = true;
option java_package = "net.accelbyte.seasonPass.seasonpass";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/userSeason
message UserSeason {
    string id = 1 [json_name = "id"];
    string namespace = 2 [json_name = "namespace"];
    string user_id = 3 [json_name = "userId"];
    string season_id = 4 [json_name = "seasonId"];
    repeated string enrolled_passes = 5 [json_name = "enrolledPasses"];
    string enrolled_at = 6 [json_name = "enrolledAt"];
    int64 current_tier_index = 7 [json_name = "currentTierIndex"];
    int64 last_tier_index = 8 [json_name = "lastTierIndex"];
    int64 required_exp = 9 [json_name = "requiredExp"];
    int64 current_exp = 10 [json_name = "currentExp"];
    bool cleared = 11 [json_name = "cleared"];
}

// path: #/components/schemas/userSeasonReward
message UserSeasonReward {
    string namespace = 1 [json_name = "namespace"];
    string user_id = 2 [json_name = "userId"];
    string season_id = 3 [json_name = "seasonId"];
    string tier_index = 4 [json_name = "tierIndex"];
    string pass_code = 5 [json_name = "passCode"];
    string reward_code = 6 [json_name = "rewardCode"];
}

// path: #/components/schemas/userSeasonPassChangedPayloadData
message UserSeasonPassChangedPayloadData { // previously known as 'AnonymousSchema1'
    UserSeason user_season = 1 [json_name = "userSeason"];
    repeated string granted_passes = 2 [json_name = "grantedPasses"];
}

// path: #/components/schemas/userSeasonTierUpPayloadData
message UserSeasonTierUpPayloadData { // previously known as 'AnonymousSchema2'
    UserSeason user_season = 1 [json_name = "userSeason"];
    int64 granted_passes = 2 [json_name = "grantedPasses"];
}

// path: #/components/schemas/userSeasonTierClearedPayloadData
message UserSeasonTierClearedPayloadData { // previously known as 'AnonymousSchema3'
    UserSeason user_season = 1 [json_name = "userSeason"];
}

// path: #/components/schemas/userSeasonRewardRewardedPayloadData
message UserSeasonRewardRewardedPayloadData { // previously known as 'AnonymousSchema4'
    UserSeasonReward user_season_reward = 1 [json_name = "userSeasonReward"];
}

// path: #/components/messages/userSeasonPassChanged/payload
message UserSeasonPassChanged {
    UserSeasonPassChangedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/userSeasonTierUp/payload
message UserSeasonTierUp {
    UserSeasonTierUpPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/userSeasonTierCleared/payload
message UserSeasonTierCleared {
    UserSeasonTierClearedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/userSeasonRewardRewarded/payload
message UserSeasonRewardRewarded {
    UserSeasonRewardRewardedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/userSeasonPassChanged
message UserSeasonPassChangedMessage {
    UserSeasonPassChanged payload = 1;
}

// path: #/components/messages/userSeasonTierUp
message UserSeasonTierUpMessage {
    UserSeasonTierUp payload = 1;
}

// path: #/components/messages/userSeasonTierCleared
message UserSeasonTierClearedMessage {
    UserSeasonTierCleared payload = 1;
}

// path: #/components/messages/userSeasonRewardRewarded
message UserSeasonRewardRewardedMessage {
    UserSeasonRewardRewarded payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/userSeason/publish/message
message UserSeasonPublish {
    oneof payload {
        UserSeasonPassChangedMessage variant0 = 1;
        UserSeasonTierUpMessage variant1 = 2;
        UserSeasonTierClearedMessage variant2 = 3;
        UserSeasonRewardRewardedMessage variant3 = 4;
    }
}


// --- service ---


// Publishes a UserSeasonPassChanged to the User Season channel. (oneOf variant) (userSeason UserSeasonPassChanged)
service UserSeasonUserSeasonPassChangedService {
    rpc OnMessage(UserSeasonPassChanged) returns (google.protobuf.Empty);
}

// Publishes a UserSeasonTierUp to the User Season channel. (oneOf variant) (userSeason UserSeasonTierUp)
service UserSeasonUserSeasonTierUpService {
    rpc OnMessage(UserSeasonTierUp) returns (google.protobuf.Empty);
}

// Publishes a UserSeasonTierCleared to the User Season channel. (oneOf variant) (userSeason UserSeasonTierCleared)
service UserSeasonUserSeasonTierClearedService {
    rpc OnMessage(UserSeasonTierCleared) returns (google.protobuf.Empty);
}

// Publishes a UserSeasonRewardRewarded to the User Season channel. (oneOf variant) (userSeason UserSeasonRewardRewarded)
service UserSeasonUserSeasonRewardRewardedService {
    rpc OnMessage(UserSeasonRewardRewarded) returns (google.protobuf.Empty);
}