// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Lobby/AsyncAPI/lobby.yaml (0.1.0)

syntax = "proto3";

package accelbyte.lobby.lobby.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Lobby.Lobby";
option go_package = "accelbyte.net/lobby/lobby";
option java_multiple_files = true;
option java_package = "net.accelbyte.lobby.lobby";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/schemas/userBlock
message UserBlock {
    string blocked_by_user_id = 1 [json_name = "blockedByUserId"];
    string blocked_user_id = 2 [json_name = "blockedUserId"];
}

// path: #/components/schemas/userBlockAddedPayload
message UserBlockAddedPayload {
    UserBlock blocked = 1 [json_name = "blocked"];
}

// path: #/components/schemas/userBlockRemovedPayload
message UserBlockRemovedPayload {
    UserBlock blocked = 1 [json_name = "blocked"];
}

// path: #/components/schemas/userConnect
message UserConnect {
    UserConnectedPayload user_connected = 1 [json_name = "userConnected"];
}

// path: #/components/schemas/userDisconnect
message UserDisconnect {
    UserDisconnectedPayload user_disconnected = 1 [json_name = "userDisconnected"];
}

// path: #/components/schemas/matchmakingTicketsPublishedPayload
message MatchmakingTicketsPublishedPayload {
    int64 total_matchmaking_request = 1 [json_name = "totalMatchmakingRequest"];
    int64 average_matchmaking_execution_time = 2 [json_name = "averageMatchmakingExecutionTime"];
}

// path: #/components/schemas/totalUsersOnlinePublishedPayload
message TotalUsersOnlinePublishedPayload {
    int64 total_users_online = 1 [json_name = "totalUsersOnline"];
    int64 total_users_online_steam = 2 [json_name = "totalUsersOnlineSteam"];
    int64 total_users_online_xbox = 3 [json_name = "totalUsersOnlineXbox"];
    int64 total_users_online_playstation = 4 [json_name = "totalUsersOnlinePlaystation"];
}

// path: #/components/schemas/userConnectedPayload
message UserConnectedPayload {
    string lobby_session_id = 1 [json_name = "lobbySessionId"];
    string lobby_login_type = 2 [json_name = "lobbyLoginType"];
    int64 reconnect_from = 3 [json_name = "reconnectFrom"];
    string connection_id = 4 [json_name = "connectionId"];
}

// path: #/components/schemas/userDisconnectedPayload
message UserDisconnectedPayload {
    string reason = 1 [json_name = "reason"];
    int64 code = 2 [json_name = "code"];
    string platform = 3 [json_name = "platform"];
    string lobby_session_id = 4 [json_name = "lobbySessionId"];
    bool is_reconnecting = 5 [json_name = "isReconnecting"];
    string connection_id = 6 [json_name = "connectionId"];
}

// path: #/components/messages/userConnected/payload
message UserConnected {
    UserConnect payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
    string span_context = 12 [json_name = "spanContext"];
}

// path: #/components/messages/userDisconnected/payload
message UserDisconnected {
    UserDisconnect payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
    string span_context = 12 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingTicketsPublished/payload
message MatchmakingTicketsPublished {
    MatchmakingTicketsPublishedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
    string span_context = 12 [json_name = "spanContext"];
}

// path: #/components/messages/totalUsersOnlinePublished/payload
message TotalUsersOnlinePublished {
    TotalUsersOnlinePublishedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
    string span_context = 12 [json_name = "spanContext"];
}

// path: #/components/messages/userBlockAdded/payload
message UserBlockAdded {
    UserBlockAddedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
    string span_context = 12 [json_name = "spanContext"];
}

// path: #/components/messages/userBlockRemoved/payload
message UserBlockRemoved {
    UserBlockRemovedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
    string span_context = 12 [json_name = "spanContext"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/userConnected
message UserConnectedMessage {
    UserConnected payload = 1;
}

// path: #/components/messages/userDisconnected
message UserDisconnectedMessage {
    UserDisconnected payload = 1;
}

// path: #/components/messages/userChatRateLimited
message UserChatRateLimitedMessage {
    Event payload = 1;
}

// path: #/components/messages/userRateLimited
message UserRateLimitedMessage {
    Event payload = 1;
}

// path: #/components/messages/matchmakingTicketsPublished
message MatchmakingTicketsPublishedMessage {
    MatchmakingTicketsPublished payload = 1;
}

// path: #/components/messages/totalUsersOnlinePublished
message TotalUsersOnlinePublishedMessage {
    TotalUsersOnlinePublished payload = 1;
}

// path: #/components/messages/userBlockAdded
message UserBlockAddedMessage {
    UserBlockAdded payload = 1;
}

// path: #/components/messages/userBlockRemoved
message UserBlockRemovedMessage {
    UserBlockRemoved payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/lobby/publish/message
message LobbyPublish {
    oneof payload {
        UserConnectedMessage variant0 = 1;
        UserDisconnectedMessage variant1 = 2;
        UserChatRateLimitedMessage variant2 = 3;
        UserRateLimitedMessage variant3 = 4;
        UserBlockAddedMessage variant4 = 5;
        UserBlockRemovedMessage variant5 = 6;
    }
}


// --- service ---


// Publishes a UserConnected to the Lobby channel. (oneOf variant) (lobby UserConnected)
service LobbyUserConnectedService {
    rpc OnMessage(UserConnected) returns (google.protobuf.Empty);
}

// Publishes a UserDisconnected to the Lobby channel. (oneOf variant) (lobby UserDisconnected)
service LobbyUserDisconnectedService {
    rpc OnMessage(UserDisconnected) returns (google.protobuf.Empty);
}

// Publishes a Event to the Lobby channel. (oneOf variant) (lobby UserChatRateLimited)
service LobbyUserChatRateLimitedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a Event to the Lobby channel. (oneOf variant) (lobby UserRateLimited)
service LobbyUserRateLimitedService {
    rpc OnMessage(Event) returns (google.protobuf.Empty);
}

// Publishes a UserBlockAdded to the Lobby channel. (oneOf variant) (lobby UserBlockAdded)
service LobbyUserBlockAddedService {
    rpc OnMessage(UserBlockAdded) returns (google.protobuf.Empty);
}

// Publishes a UserBlockRemoved to the Lobby channel. (oneOf variant) (lobby UserBlockRemoved)
service LobbyUserBlockRemovedService {
    rpc OnMessage(UserBlockRemoved) returns (google.protobuf.Empty);
}

// Publishes a message to the Lobby Matchmaking Tickets channel. (lobbyMatchmakingTickets MatchmakingTicketsPublished)
service LobbyMatchmakingTicketsMatchmakingTicketsPublishedService {
    rpc OnMessage(MatchmakingTicketsPublished) returns (google.protobuf.Empty);
}

// Publishes a message to the Lobby Total Users Online channel. (lobbyTotalUsersOnline TotalUsersOnlinePublished)
service LobbyTotalUsersOnlineTotalUsersOnlinePublishedService {
    rpc OnMessage(TotalUsersOnlinePublished) returns (google.protobuf.Empty);
}