// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Legal/AsyncAPI/agreement.yaml (0.1.0)

syntax = "proto3";

package accelbyte.legal.agreement.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Legal.Agreement";
option go_package = "accelbyte.net/legal/agreement";
option java_multiple_files = true;
option java_package = "net.accelbyte.legal.agreement";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/agreement
message Agreement {
    string policy_id = 1 [json_name = "policyId"];
    string policy_version_id = 2 [json_name = "policyVersionId"];
    string policy_name = 3 [json_name = "policyName"];
    string display_version = 4 [json_name = "displayVersion"];
    string localized_policy_version_id = 5 [json_name = "localizedPolicyVersionId"];
    string localized_description = 6 [json_name = "localizedDescription"];
    bool is_accepted = 7 [json_name = "isAccepted"];
    string user_id = 8 [json_name = "userId"];
}

// path: #/components/messages/agreementCreated/payload/properties/payload
message AnonymousSchema1 {
    Agreement agreement = 1 [json_name = "agreement"];
}

// path: #/components/messages/agreementCreated/payload
message AgreementCreated {
    AnonymousSchema1 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/agreementUpdated/payload/properties/payload
message AnonymousSchema2 {
    Agreement agreement = 1 [json_name = "agreement"];
}

// path: #/components/messages/agreementUpdated/payload
message AgreementUpdated {
    AnonymousSchema2 payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/agreementCreated
message AgreementCreatedMessage {
    AgreementCreated payload = 1;
}

// path: #/components/messages/agreementUpdated
message AgreementUpdatedMessage {
    AgreementUpdated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/agreement/publish/message
message AgreementPublish {
    oneof payload {
        AgreementCreatedMessage variant0 = 1;
        AgreementUpdatedMessage variant1 = 2;
    }
}


// --- service ---


// Publishes a AgreementCreated to the Agreement channel. (oneOf variant) (agreement AgreementCreated)
service AgreementAgreementCreatedService {
    rpc OnMessage(AgreementCreated) returns (google.protobuf.Empty);
}

// Publishes a AgreementUpdated to the Agreement channel. (oneOf variant) (agreement AgreementUpdated)
service AgreementAgreementUpdatedService {
    rpc OnMessage(AgreementUpdated) returns (google.protobuf.Empty);
}