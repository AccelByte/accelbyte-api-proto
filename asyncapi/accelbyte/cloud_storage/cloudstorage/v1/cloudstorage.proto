// Copyright (c) 2024 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: CloudStorage/AsyncAPI/cloudstorage.yaml (0.1.0)

syntax = "proto3";

package accelbyte.cloud_storage.cloudstorage.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.CloudStorage.Cloudstorage";
option go_package = "accelbyte.net/cloudStorage/cloudstorage";
option java_multiple_files = true;
option java_package = "net.accelbyte.cloudStorage.cloudstorage";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string trace_id = 9 [json_name = "traceId"];
    string session_id = 10 [json_name = "sessionId"];
}

// path: #/components/schemas/namespaceSlotConfig
message NamespaceSlotConfig {
    int64 max_slot_size = 1 [json_name = "maxSlotSize"];
    int64 max_slots = 2 [json_name = "maxSlots"];
    string namespace = 3 [json_name = "namespace"];
}

// path: #/components/schemas/slots
message Slots {
    string checksum = 1 [json_name = "checksum"];
    string custom_attribute = 2 [json_name = "customAttribute"];
    string date_accessed = 3 [json_name = "dateAccessed"];
    string date_created = 4 [json_name = "dateCreated"];
    string date_modified = 5 [json_name = "date-modified"];
    string label = 6 [json_name = "label"];
    string mime_type = 7 [json_name = "mimeType"];
    string namespace = 8 [json_name = "namespace"];
    string original_name = 9 [json_name = "originalName"];
    string slot_id = 10 [json_name = "slotId"];
    string status = 11 [json_name = "status"];
    string stored_name = 12 [json_name = "storedName"];
    repeated string tags = 13 [json_name = "tags"];
    string user_id = 14 [json_name = "userId"];
    SingleSlot slot_info = 15 [json_name = "slotInfo"];
}

// path: #/components/schemas/singleSlot
message SingleSlot {
    string description = 1 [json_name = "description"];
    File file = 2 [json_name = "file"];
    string filename = 3 [json_name = "filename"];
    google.protobuf.Struct input_stream = 4 [json_name = "inputStream"];
    bool open = 5 [json_name = "open"];
    bool readable = 6 [json_name = "readable"];
    Uri uri = 7 [json_name = "uri"];
    Url url = 8 [json_name = "url"];
}

// path: #/components/schemas/file
message File {
    bool absolute = 1 [json_name = "absolute"];
    google.protobuf.Struct absolute_file = 2 [json_name = "absoluteFile"];
    string absolute_path = 3 [json_name = "absolutePath"];
    google.protobuf.Struct canonical_file = 4 [json_name = "canonicalFile"];
    string canonical_path = 5 [json_name = "canonicalPath"];
    bool directory = 6 [json_name = "directory"];
    bool file = 7 [json_name = "file"];
    int64 free_space = 8 [json_name = "freeSpace"];
    bool hidden = 9 [json_name = "hidden"];
    string name = 10 [json_name = "name"];
    string parent = 11 [json_name = "parent"];
    google.protobuf.Struct parent_file = 12 [json_name = "parentFile"];
    string path = 13 [json_name = "path"];
    int64 total_space = 14 [json_name = "totalSpace"];
    int64 usable_space = 15 [json_name = "usableSpace"];
}

// path: #/components/schemas/uri
message Uri {
    bool absolute = 1 [json_name = "absolute"];
    string authority = 2 [json_name = "authority"];
    string fragment = 3 [json_name = "fragment"];
    string host = 4 [json_name = "host"];
    bool opaque = 5 [json_name = "opaque"];
    string path = 6 [json_name = "path"];
    int64 port = 7 [json_name = "port"];
    string query = 8 [json_name = "query"];
    string raw_authority = 9 [json_name = "rawAuthority"];
    string raw_fragment = 10 [json_name = "rawFragment"];
    string raw_path = 11 [json_name = "rawPath"];
    string raw_query = 12 [json_name = "rawQuery"];
    string raw_scheme_specific_part = 13 [json_name = "rawSchemeSpecificPart"];
    string raw_user_info = 14 [json_name = "rawUserInfo"];
    string scheme = 15 [json_name = "scheme"];
    string scheme_specific_part = 16 [json_name = "schemeSpecificPart"];
    string user_info = 17 [json_name = "userInfo"];
}

// path: #/components/schemas/url
message Url {
    string authority = 1 [json_name = "authority"];
    google.protobuf.Struct content = 2 [json_name = "content"];
    int64 default_port = 3 [json_name = "defaultPort"];
    string file = 4 [json_name = "file"];
    string host = 5 [json_name = "host"];
    string path = 6 [json_name = "path"];
    int64 port = 7 [json_name = "port"];
    string protocol = 8 [json_name = "protocol"];
    string query = 9 [json_name = "query"];
    string ref = 10 [json_name = "ref"];
    string user_info = 11 [json_name = "userInfo"];
}

// path: #/components/schemas/slotConfig
message SlotConfig {
    int64 max_slot_size = 1 [json_name = "maxSlotSize"];
    int64 max_slots = 2 [json_name = "maxSlots"];
    string namespace = 3 [json_name = "namespace"];
    string user_id = 4 [json_name = "userId"];
}

// path: #/components/schemas/namespaceSlotConfigCreatedPayloadData
message NamespaceSlotConfigCreatedPayloadData { // previously known as 'AnonymousSchema6'
    NamespaceSlotConfig namespace_slot_config = 1 [json_name = "namespaceSlotConfig"];
}

// path: #/components/schemas/namespaceSlotConfigDeletedPayloadData
message NamespaceSlotConfigDeletedPayloadData { // previously known as 'AnonymousSchema7'
    NamespaceSlotConfig namespace_slot_config = 1 [json_name = "namespaceSlotConfig"];
}

// path: #/components/schemas/namespaceSlotConfigUpdatedPayloadData
message NamespaceSlotConfigUpdatedPayloadData { // previously known as 'AnonymousSchema8'
    NamespaceSlotConfig namespace_slot_config = 1 [json_name = "namespaceSlotConfig"];
}

// path: #/components/schemas/slotCreatedPayloadData
message SlotCreatedPayloadData { // previously known as 'AnonymousSchema9'
    Slots slot = 1 [json_name = "slot"];
}

// path: #/components/schemas/slotDeletedPayloadData
message SlotDeletedPayloadData { // previously known as 'AnonymousSchema10'
    Slots slot = 1 [json_name = "slot"];
}

// path: #/components/schemas/slotUpdatedPayloadData
message SlotUpdatedPayloadData { // previously known as 'AnonymousSchema11'
    Slots slot = 1 [json_name = "slot"];
}

// path: #/components/schemas/slotConfigCreatedPayloadData
message SlotConfigCreatedPayloadData { // previously known as 'AnonymousSchema12'
    SlotConfig slot_config = 1 [json_name = "slotConfig"];
}

// path: #/components/schemas/slotConfigDeletedPayloadData
message SlotConfigDeletedPayloadData { // previously known as 'AnonymousSchema13'
    SlotConfig slot_config = 1 [json_name = "slotConfig"];
}

// path: #/components/schemas/slotConfigUpdatedPayloadData
message SlotConfigUpdatedPayloadData { // previously known as 'AnonymousSchema14'
    SlotConfig slot_config = 1 [json_name = "slotConfig"];
}

// path: #/components/messages/namespaceSlotConfigCreated/payload
message NamespaceSlotConfigCreated {
    NamespaceSlotConfigCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/namespaceSlotConfigDeleted/payload
message NamespaceSlotConfigDeleted {
    NamespaceSlotConfigDeletedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/namespaceSlotConfigUpdated/payload
message NamespaceSlotConfigUpdated {
    NamespaceSlotConfigUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/slotCreated/payload
message SlotCreated {
    SlotCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/slotDeleted/payload
message SlotDeleted {
    SlotDeletedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/slotUpdated/payload
message SlotUpdated {
    SlotUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/slotConfigCreated/payload
message SlotConfigCreated {
    SlotConfigCreatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/slotConfigDeleted/payload
message SlotConfigDeleted {
    SlotConfigDeletedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}

// path: #/components/messages/slotConfigUpdated/payload
message SlotConfigUpdated {
    SlotConfigUpdatedPayloadData payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string trace_id = 10 [json_name = "traceId"];
    string session_id = 11 [json_name = "sessionId"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/namespaceSlotConfigCreated
message NamespaceSlotConfigCreatedMessage {
    NamespaceSlotConfigCreated payload = 1;
}

// path: #/components/messages/namespaceSlotConfigDeleted
message NamespaceSlotConfigDeletedMessage {
    NamespaceSlotConfigDeleted payload = 1;
}

// path: #/components/messages/namespaceSlotConfigUpdated
message NamespaceSlotConfigUpdatedMessage {
    NamespaceSlotConfigUpdated payload = 1;
}

// path: #/components/messages/slotCreated
message SlotCreatedMessage {
    SlotCreated payload = 1;
}

// path: #/components/messages/slotDeleted
message SlotDeletedMessage {
    SlotDeleted payload = 1;
}

// path: #/components/messages/slotUpdated
message SlotUpdatedMessage {
    SlotUpdated payload = 1;
}

// path: #/components/messages/slotConfigCreated
message SlotConfigCreatedMessage {
    SlotConfigCreated payload = 1;
}

// path: #/components/messages/slotConfigDeleted
message SlotConfigDeletedMessage {
    SlotConfigDeleted payload = 1;
}

// path: #/components/messages/slotConfigUpdated
message SlotConfigUpdatedMessage {
    SlotConfigUpdated payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/namespaceSlotConfig/publish/message
message NamespaceSlotConfigPublish {
    oneof payload {
        NamespaceSlotConfigCreatedMessage variant0 = 1;
        NamespaceSlotConfigDeletedMessage variant1 = 2;
        NamespaceSlotConfigUpdatedMessage variant2 = 3;
    }
}

// path: #/channels/slot/publish/message
message SlotPublish {
    oneof payload {
        SlotCreatedMessage variant0 = 1;
        SlotDeletedMessage variant1 = 2;
        SlotUpdatedMessage variant2 = 3;
    }
}

// path: #/channels/slotConfig/publish/message
message SlotConfigPublish {
    oneof payload {
        SlotConfigCreatedMessage variant0 = 1;
        SlotConfigDeletedMessage variant1 = 2;
        SlotConfigUpdatedMessage variant2 = 3;
    }
}


// --- service ---


// Publishes a NamespaceSlotConfigCreated to the Namespace Slot Config channel. (oneOf variant) (namespaceSlotConfig NamespaceSlotConfigCreated)
service NamespaceSlotConfigNamespaceSlotConfigCreatedService {
    rpc OnMessage(NamespaceSlotConfigCreated) returns (google.protobuf.Empty);
}

// Publishes a NamespaceSlotConfigDeleted to the Namespace Slot Config channel. (oneOf variant) (namespaceSlotConfig NamespaceSlotConfigDeleted)
service NamespaceSlotConfigNamespaceSlotConfigDeletedService {
    rpc OnMessage(NamespaceSlotConfigDeleted) returns (google.protobuf.Empty);
}

// Publishes a NamespaceSlotConfigUpdated to the Namespace Slot Config channel. (oneOf variant) (namespaceSlotConfig NamespaceSlotConfigUpdated)
service NamespaceSlotConfigNamespaceSlotConfigUpdatedService {
    rpc OnMessage(NamespaceSlotConfigUpdated) returns (google.protobuf.Empty);
}

// Publishes a SlotCreated to the Slot channel. (oneOf variant) (slot SlotCreated)
service SlotSlotCreatedService {
    rpc OnMessage(SlotCreated) returns (google.protobuf.Empty);
}

// Publishes a SlotDeleted to the Slot channel. (oneOf variant) (slot SlotDeleted)
service SlotSlotDeletedService {
    rpc OnMessage(SlotDeleted) returns (google.protobuf.Empty);
}

// Publishes a SlotUpdated to the Slot channel. (oneOf variant) (slot SlotUpdated)
service SlotSlotUpdatedService {
    rpc OnMessage(SlotUpdated) returns (google.protobuf.Empty);
}

// Publishes a SlotConfigCreated to the Slot Config channel. (oneOf variant) (slotConfig SlotConfigCreated)
service SlotConfigSlotConfigCreatedService {
    rpc OnMessage(SlotConfigCreated) returns (google.protobuf.Empty);
}

// Publishes a SlotConfigDeleted to the Slot Config channel. (oneOf variant) (slotConfig SlotConfigDeleted)
service SlotConfigSlotConfigDeletedService {
    rpc OnMessage(SlotConfigDeleted) returns (google.protobuf.Empty);
}

// Publishes a SlotConfigUpdated to the Slot Config channel. (oneOf variant) (slotConfig SlotConfigUpdated)
service SlotConfigSlotConfigUpdatedService {
    rpc OnMessage(SlotConfigUpdated) returns (google.protobuf.Empty);
}