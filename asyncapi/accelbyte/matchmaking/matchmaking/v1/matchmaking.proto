// Copyright (c) 2025 AccelByte Inc. All Rights Reserved.
// This is licensed software from AccelByte Inc, for limitations
// and restrictions contact your company contract manager.

// source: Matchmaking/AsyncAPI/matchmaking.yaml (0.1.0)

syntax = "proto3";

package accelbyte.matchmaking.matchmaking.v1;
// Version v1.0.0

// --- imports ---

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

// --- options ---

option csharp_namespace = "AccelByte.Matchmaking.Matchmaking";
option go_package = "accelbyte.net/matchmaking/matchmaking";
option java_multiple_files = true;
option java_package = "net.accelbyte.matchmaking.matchmaking";

// --- schema objects ---

// path: #/components/schemas/event
message Event {
    string id = 1 [json_name = "id"];
    int64 version = 2 [json_name = "version"];
    string name = 3 [json_name = "name"];
    string namespace = 4 [json_name = "namespace"];
    string parent_namespace = 5 [json_name = "parentNamespace"];
    string timestamp = 6 [json_name = "timestamp"];
    string client_id = 7 [json_name = "clientId"];
    string user_id = 8 [json_name = "userId"];
    string session_id = 9 [json_name = "sessionId"];
    string span_context = 10 [json_name = "spanContext"];
}

// path: #/components/schemas/allianceCombinationAlliance
message AllianceCombinationAlliance { // previously known as 'AnonymousSchema1'
    string name = 1 [json_name = "name"];
    int64 min = 2 [json_name = "min"];
    int64 max = 3 [json_name = "max"];
}

// path: #/components/schemas/allianceCombination
message AllianceCombination { // previously known as 'AnonymousSchema2'
    bool role_flexing_enable = 1 [json_name = "role_flexing_enable"];
    int64 role_flexing_second = 2 [json_name = "role_flexing_second"];
    int64 role_flexing_player = 3 [json_name = "role_flexing_player"];
    bool has_combination = 4 [json_name = "has_combination"];
    google.protobuf.ListValue alliances = 5 [json_name = "alliances"];
}

// path: #/components/schemas/alliance
message Alliance {
    int64 min_number = 1 [json_name = "min_number"];
    int64 max_number = 2 [json_name = "max_number"];
    int64 player_min_number = 3 [json_name = "player_min_number"];
    int64 player_max_number = 4 [json_name = "player_max_number"];
    AllianceCombination combination = 5 [json_name = "combination"];
}

// path: #/components/schemas/matching_rule
message MatchingRule {
    string attribute = 1 [json_name = "attribute"];
    string criteria = 2 [json_name = "criteria"];
    float reference = 3 [json_name = "reference"];
}

// path: #/components/schemas/rulesetFlexingRule
message RulesetFlexingRule { // previously known as 'AnonymousSchema3'
    int64 duration = 1 [json_name = "duration"];
    MatchingRule matching_rule = 2 [json_name = "matching_rule"];
}

// path: #/components/schemas/rulesetAllianceFlexingRule
message RulesetAllianceFlexingRule { // previously known as 'AnonymousSchema4'
    int64 duration = 1 [json_name = "duration"];
    Alliance alliance_rule = 2 [json_name = "AllianceRule"];
}

// path: #/components/schemas/rulesetMatchOptionsOption
message RulesetMatchOptionsOption { // previously known as 'AnonymousSchema5'
    string name = 1 [json_name = "name"];
    string type = 2 [json_name = "type"];
}

// path: #/components/schemas/rulesetMatchOption
message RulesetMatchOption { // previously known as 'AnonymousSchema6'
    RulesetMatchOptionsOption options = 1 [json_name = "options"];
}

// path: #/components/schemas/rulesetSubGameMode
message RulesetSubGameMode {
    string name = 1 [json_name = "name"];
    Alliance alliance = 2 [json_name = "alliance"];
    repeated RulesetAllianceFlexingRule alliance_flexing_rule = 3 [json_name = "alliance_flexing_rule"];
}

// path: #/components/schemas/ruleset
message Ruleset {
    Alliance alliance = 1 [json_name = "alliance"];
    repeated MatchingRule matching_rule = 2 [json_name = "matching_rule"];
    repeated RulesetFlexingRule flexing_rule = 3 [json_name = "flexing_rule"];
    repeated RulesetAllianceFlexingRule alliance_flexing_rule = 4 [json_name = "alliance_flexing_rule"];
    repeated RulesetMatchOption match_options = 5 [json_name = "match_options"];
    repeated RulesetSubGameMode sub_game_modes = 6 [json_name = "sub_game_modes"];
    bool rebalance_enable = 7 [json_name = "rebalance_enable"];
}

// path: #/components/schemas/matchingParty
message MatchingParty {
    string ticket_id = 1 [json_name = "ticket_id"];
    string party_id = 2 [json_name = "party_id"];
    repeated PartyMember party_members = 3 [json_name = "party_members"];
    google.protobuf.Struct party_attributes = 4 [json_name = "party_attributes"];
    int64 ticket_created_at = 5 [json_name = "ticket_created_at"];
    int64 first_ticket_created_at = 6 [json_name = "first_ticket_created_at"];
}

// path: #/components/schemas/matchmaking
message Matchmaking {
    string status = 1 [json_name = "status"];
    string match_id = 2 [json_name = "matchId"];
    string channel = 3 [json_name = "channel"];
    string namespace = 4 [json_name = "namespace"];
    string game_mode = 5 [json_name = "gameMode"];
    repeated MatchingParty matching_parties = 6 [json_name = "matchingParties"];
}

// path: #/components/schemas/lobbyMatchmakingRequest
message LobbyMatchmakingRequest {
    string priority = 1 [json_name = "priority"];
    string created_at = 2 [json_name = "createdAt"];
    string channel = 3 [json_name = "channel"];
    string party_id = 4 [json_name = "partyId"];
    string ticket_id = 5 [json_name = "ticketId"];
    repeated PartyMemberV1 party_members = 6 [json_name = "partyMembers"];
    string timestamp = 7 [json_name = "timestamp"];
    string event = 8 [json_name = "event"];
}

// path: #/components/schemas/lobbyMatchmaking
message LobbyMatchmaking {
    string status = 1 [json_name = "status"];
    string match_id = 2 [json_name = "matchId"];
    string channel = 3 [json_name = "channel"];
    string namespace = 4 [json_name = "namespace"];
    string game_mode = 5 [json_name = "gameMode"];
    repeated PartyMemberV1 matching_parties = 6 [json_name = "matchingParties"];
    string ticket_id = 7 [json_name = "ticketId"];
    repeated string ticket_ids = 8 [json_name = "ticketIds"];
}

// path: #/components/schemas/MatchmakingRequestRegion
message MatchmakingRequestRegion { // previously known as 'AnonymousSchema7'
    string region = 1 [json_name = "region"];
    int64 latency = 2 [json_name = "latency"];
}

// path: #/components/schemas/MatchmakingRequest
message MatchmakingRequest {
    int64 priority = 1 [json_name = "priority"];
    int64 created_at = 2 [json_name = "created_at"];
    string channel = 3 [json_name = "channel"];
    string namespace = 4 [json_name = "namespace"];
    string ticket_id = 5 [json_name = "ticket_id"];
    string party_id = 6 [json_name = "party_id"];
    string party_leader_id = 7 [json_name = "party_leader_id"];
    google.protobuf.Struct party_attributes = 8 [json_name = "party_attributes"];
    repeated PartyMember party_members = 9 [json_name = "party_members"];
    google.protobuf.Struct additional_criteria = 10 [json_name = "additional_criteria"];
    map<string, int64> latency_map = 11 [json_name = "latency_map"];
    repeated MatchmakingRequestRegion sorted_latency = 12 [json_name = "sorted_latency"];
    int64 first_ticket_created_at = 13 [json_name = "first_ticket_created_at"];
}

// path: #/components/schemas/matchmakingResultMatchingAlly
message MatchmakingResultMatchingAlly { // previously known as 'AnonymousSchema8'
    repeated MatchingParty matching_parties = 1 [json_name = "matching_parties"];
    int64 player_count = 2 [json_name = "playerCount"];
}

// path: #/components/schemas/matchmakingResult
message MatchmakingResult {
    string status = 1 [json_name = "status"];
    string event = 2 [json_name = "event"];
    string party_id = 3 [json_name = "party_id"];
    string ticket_id = 4 [json_name = "ticket_id"];
    string match_id = 5 [json_name = "match_id"];
    string channel = 6 [json_name = "channel"];
    string namespace = 7 [json_name = "namespace"];
    string game_mode = 8 [json_name = "game_mode"];
    string server_name = 9 [json_name = "server_name"];
    string client_version = 10 [json_name = "client_version"];
    string region = 11 [json_name = "region"];
    bool joinable = 12 [json_name = "joinable"];
    repeated MatchmakingResultMatchingAlly matching_allies = 13 [json_name = "matching_allies"];
    string deployment = 14 [json_name = "deployment"];
    string updated_at = 15 [json_name = "updatedAt"];
    int64 queue_at = 16 [json_name = "queueAt"];
    string party_attributes = 17 [json_name = "partyAttributes"];
    int64 error_code = 18 [json_name = "errorCode"];
    string error_message = 19 [json_name = "errorMessage"];
    string timestamp = 20 [json_name = "timestamp"];
}

// path: #/components/schemas/partyMemberV1
message PartyMemberV1 {
    string user_id = 1 [json_name = "userId"];
    google.protobuf.Struct extra_attributes = 2 [json_name = "extraAttributes"];
}

// path: #/components/schemas/partyMember
message PartyMember {
    string user_id = 1 [json_name = "user_id"];
    google.protobuf.Struct extra_attributes = 2 [json_name = "extra_attributes"];
}

// path: #/components/schemas/successTickets
message SuccessTickets {
    string party_id = 1 [json_name = "partyId"];
    repeated string member_ids = 2 [json_name = "memberIds"];
    int64 ticket_created_at = 3 [json_name = "ticketCreatedAt"];
}

// path: #/components/schemas/failedTickets
message FailedTickets {
    string party_id = 1 [json_name = "partyId"];
    repeated string succeed_member_ids = 2 [json_name = "succeedMemberIds"];
    repeated string failed_member_ids = 3 [json_name = "failedMemberIds"];
    int64 ticket_created_at = 4 [json_name = "ticketCreatedAt"];
}

// path: #/components/schemas/matchmakingChannelCreatedPayload
message MatchmakingChannelCreatedPayload {
    Ruleset ruleset = 1 [json_name = "ruleset"];
    string description = 2 [json_name = "description"];
    string game_mode = 3 [json_name = "gameMode"];
    int64 find_match_timeout_seconds = 4 [json_name = "findMatchTimeoutSeconds"];
}

// path: #/components/schemas/matchmakingChannelDeletedPayload
message MatchmakingChannelDeletedPayload {
    Ruleset ruleset = 1 [json_name = "ruleset"];
    string description = 2 [json_name = "description"];
    string game_mode = 3 [json_name = "gameMode"];
    int64 find_match_timeout_seconds = 4 [json_name = "findMatchTimeoutSeconds"];
}

// path: #/components/schemas/matchmakingChannelUpdatedPayload
message MatchmakingChannelUpdatedPayload {
    Ruleset ruleset = 1 [json_name = "ruleset"];
    string description = 2 [json_name = "description"];
    string game_mode = 3 [json_name = "gameMode"];
    int64 find_match_timeout_seconds = 4 [json_name = "findMatchTimeoutSeconds"];
}

// path: #/components/schemas/matchmakingRequestedPayload
message MatchmakingRequestedPayload {
    LobbyMatchmakingRequest matchmaking_request = 1 [json_name = "matchmakingRequest"];
}

// path: #/components/schemas/matchmakingCanceledPayload
message MatchmakingCanceledPayload {
    LobbyMatchmaking matchmaking = 1 [json_name = "matchmaking"];
}

// path: #/components/schemas/matchmakingTimeoutPayload
message MatchmakingTimeoutPayload {
    LobbyMatchmaking matchmaking = 1 [json_name = "matchmaking"];
}

// path: #/components/schemas/matchmakingRejectedPayload
message MatchmakingRejectedPayload {
    LobbyMatchmaking matchmaking = 1 [json_name = "matchmaking"];
}

// path: #/components/schemas/matchmakingStartedPayload
message MatchmakingStartedPayload {
    Matchmaking matchmaking = 1 [json_name = "matchmaking"];
}

// path: #/components/schemas/matchmakingSessionStatusChangedPayload
message MatchmakingSessionStatusChangedPayload {
    MatchmakingResult session = 1 [json_name = "session"];
}

// path: #/components/schemas/matchmakingTicketStatusChangedPayload
message MatchmakingTicketStatusChangedPayload {
    MatchmakingRequest ticket = 1 [json_name = "ticket"];
}

// path: #/components/schemas/matchmakingTotalPlayersInQueuePayload
message MatchmakingTotalPlayersInQueuePayload {
    int64 total_players_in_queue = 1 [json_name = "totalPlayersInQueue"];
}

// path: #/components/schemas/readyConsentFailedPayload
message ReadyConsentFailedPayload {
    SuccessTickets success_tickets = 1 [json_name = "successTickets"];
    FailedTickets failed_tickets = 2 [json_name = "failedTickets"];
}

// path: #/components/schemas/readyConsentSuccessPayload
message ReadyConsentSuccessPayload {
    SuccessTickets success_tickets = 1 [json_name = "successTickets"];
}

// path: #/components/messages/matchmakingChannelCreated/payload
message MatchmakingChannelCreated {
    MatchmakingChannelCreatedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingChannelDeleted/payload
message MatchmakingChannelDeleted {
    MatchmakingChannelDeletedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingChannelUpdated/payload
message MatchmakingChannelUpdated {
    MatchmakingChannelUpdatedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingRequested/payload
message MatchmakingRequested {
    MatchmakingRequestedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingCanceled/payload
message MatchmakingCanceled {
    MatchmakingCanceledPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingTimeout/payload
message MatchmakingTimeout {
    MatchmakingTimeoutPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingRejected/payload
message MatchmakingRejected {
    MatchmakingRejectedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingStarted/payload
message MatchmakingStarted {
    MatchmakingStartedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingSessionStatusChanged/payload
message MatchmakingSessionStatusChanged {
    MatchmakingSessionStatusChangedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingTicketStatusChanged/payload
message MatchmakingTicketStatusChanged {
    MatchmakingTicketStatusChangedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/matchmakingTotalPlayersInQueue/payload
message MatchmakingTotalPlayersInQueue {
    MatchmakingTotalPlayersInQueuePayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/readyConsentFailed/payload
message ReadyConsentFailed {
    ReadyConsentFailedPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}

// path: #/components/messages/readyConsentSuccess/payload
message ReadyConsentSuccess {
    ReadyConsentSuccessPayload payload = 1 [json_name = "payload"];

    // allOf(#/components/schemas/event)
    string id = 2 [json_name = "id"];
    int64 version = 3 [json_name = "version"];
    string name = 4 [json_name = "name"];
    string namespace = 5 [json_name = "namespace"];
    string parent_namespace = 6 [json_name = "parentNamespace"];
    string timestamp = 7 [json_name = "timestamp"];
    string client_id = 8 [json_name = "clientId"];
    string user_id = 9 [json_name = "userId"];
    string session_id = 10 [json_name = "sessionId"];
    string span_context = 11 [json_name = "spanContext"];
}


// --- #/components/messages/{message_name} ---

// path: #/components/messages/matchmakingChannelCreated
message MatchmakingChannelCreatedMessage {
    MatchmakingChannelCreated payload = 1;
}

// path: #/components/messages/matchmakingChannelDeleted
message MatchmakingChannelDeletedMessage {
    MatchmakingChannelDeleted payload = 1;
}

// path: #/components/messages/matchmakingChannelUpdated
message MatchmakingChannelUpdatedMessage {
    MatchmakingChannelUpdated payload = 1;
}

// path: #/components/messages/matchmakingRequested
message MatchmakingRequestedMessage {
    MatchmakingRequested payload = 1;
}

// path: #/components/messages/matchmakingCanceled
message MatchmakingCanceledMessage {
    MatchmakingCanceled payload = 1;
}

// path: #/components/messages/matchmakingTimeout
message MatchmakingTimeoutMessage {
    MatchmakingTimeout payload = 1;
}

// path: #/components/messages/matchmakingRejected
message MatchmakingRejectedMessage {
    MatchmakingRejected payload = 1;
}

// path: #/components/messages/matchmakingStarted
message MatchmakingStartedMessage {
    MatchmakingStarted payload = 1;
}

// path: #/components/messages/matchmakingSessionStatusChanged
message MatchmakingSessionStatusChangedMessage {
    MatchmakingSessionStatusChanged payload = 1;
}

// path: #/components/messages/matchmakingTicketStatusChanged
message MatchmakingTicketStatusChangedMessage {
    MatchmakingTicketStatusChanged payload = 1;
}

// path: #/components/messages/matchmakingTotalPlayersInQueue
message MatchmakingTotalPlayersInQueueMessage {
    MatchmakingTotalPlayersInQueue payload = 1;
}

// path: #/components/messages/readyConsentFailed
message ReadyConsentFailedMessage {
    ReadyConsentFailed payload = 1;
}

// path: #/components/messages/readyConsentSuccess
message ReadyConsentSuccessMessage {
    ReadyConsentSuccess payload = 1;
}


// --- #/channels/{channel_name}/{operation_type}/message ---

// path: #/channels/matchmaking/publish/message
message MatchmakingPublish {
    oneof payload {
        MatchmakingRequestedMessage variant0 = 1;
        MatchmakingCanceledMessage variant1 = 2;
        MatchmakingStartedMessage variant2 = 3;
        MatchmakingTimeoutMessage variant3 = 4;
        MatchmakingRejectedMessage variant4 = 5;
        MatchmakingChannelCreatedMessage variant5 = 6;
        MatchmakingChannelDeletedMessage variant6 = 7;
        MatchmakingChannelUpdatedMessage variant7 = 8;
        MatchmakingSessionStatusChangedMessage variant8 = 9;
        MatchmakingTicketStatusChangedMessage variant9 = 10;
    }
}

// path: #/channels/readyConsent/publish/message
message ReadyConsentPublish {
    oneof payload {
        ReadyConsentSuccessMessage variant0 = 1;
        ReadyConsentFailedMessage variant1 = 2;
    }
}


// --- service ---


// Publishes a MatchmakingRequested to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingRequested)
service MatchmakingMatchmakingRequestedService {
    rpc OnMessage(MatchmakingRequested) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingCanceled to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingCanceled)
service MatchmakingMatchmakingCanceledService {
    rpc OnMessage(MatchmakingCanceled) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingStarted to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingStarted)
service MatchmakingMatchmakingStartedService {
    rpc OnMessage(MatchmakingStarted) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingTimeout to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingTimeout)
service MatchmakingMatchmakingTimeoutService {
    rpc OnMessage(MatchmakingTimeout) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingRejected to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingRejected)
service MatchmakingMatchmakingRejectedService {
    rpc OnMessage(MatchmakingRejected) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingChannelCreated to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingChannelCreated)
service MatchmakingMatchmakingChannelCreatedService {
    rpc OnMessage(MatchmakingChannelCreated) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingChannelDeleted to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingChannelDeleted)
service MatchmakingMatchmakingChannelDeletedService {
    rpc OnMessage(MatchmakingChannelDeleted) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingChannelUpdated to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingChannelUpdated)
service MatchmakingMatchmakingChannelUpdatedService {
    rpc OnMessage(MatchmakingChannelUpdated) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingSessionStatusChanged to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingSessionStatusChanged)
service MatchmakingMatchmakingSessionStatusChangedService {
    rpc OnMessage(MatchmakingSessionStatusChanged) returns (google.protobuf.Empty);
}

// Publishes a MatchmakingTicketStatusChanged to the Matchmaking channel. (oneOf variant) (matchmaking MatchmakingTicketStatusChanged)
service MatchmakingMatchmakingTicketStatusChangedService {
    rpc OnMessage(MatchmakingTicketStatusChanged) returns (google.protobuf.Empty);
}

// Publishes a message to the Matchmaking Total Players In Queue channel. (matchmakingTotalPlayersInQueue MatchmakingTotalPlayersInQueue)
service MatchmakingTotalPlayersInQueueMatchmakingTotalPlayersInQueueService {
    rpc OnMessage(MatchmakingTotalPlayersInQueue) returns (google.protobuf.Empty);
}

// Publishes a ReadyConsentSuccess to the Ready Consent channel. (oneOf variant) (readyConsent ReadyConsentSuccess)
service ReadyConsentReadyConsentSuccessService {
    rpc OnMessage(ReadyConsentSuccess) returns (google.protobuf.Empty);
}

// Publishes a ReadyConsentFailed to the Ready Consent channel. (oneOf variant) (readyConsent ReadyConsentFailed)
service ReadyConsentReadyConsentFailedService {
    rpc OnMessage(ReadyConsentFailed) returns (google.protobuf.Empty);
}